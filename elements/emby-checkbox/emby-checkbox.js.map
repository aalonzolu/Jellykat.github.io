{"version":3,"sources":["elements/emby-checkbox/emby-checkbox.js"],"names":["define","_browser","_dom","_embyCheckbox","_webcomponents","_interopRequireDefault","obj","__esModule","default","EmbyCheckboxPrototype","Object","create","HTMLInputElement","prototype","onKeyDown","e","keyCode","browser","tizen","preventDefault","this","checked","dispatchEvent","CustomEvent","bubbles","enableRefreshHack","orsay","operaTv","web0s","forceRefresh","loading","elem","parentNode","style","webkitAnimationName","webkitAnimationDelay","webkitAnimationDuration","webkitAnimationIterationCount","setTimeout","attachedCallback","getAttribute","setAttribute","classList","add","labelElement","labelTextElement","querySelector","outlineClass","customClass","checkHtml","uncheckedHtml","insertAdjacentHTML","addEventListener","call","dom","passive","detachedCallback","removeEventListener","document","registerElement","extends"],"mappings":"AAAAA,OAAO,CAAC,UAAW,MAAO,sBAAuB,kBAAkB,SAAUC,SAAUC,KAAMC,cAAeC,gBAC1G,aAKA,SAASC,uBAAuBC,KAAO,OAAOA,KAAOA,IAAIC,WAAaD,IAAM,CAAEE,QAASF,KANzFL,SAAAI,uBAAAJ,UACAC,KAAAG,uBAAAH,MAMI,IAAMO,sBAAwBC,OAAOC,OAAOC,iBAAiBC,WAE7D,SAASC,UAAUC,GAGf,GAAkB,KAAdA,EAAEC,SAAiC,KAAdD,EAAEC,SAAkBC,SAAAA,QAAQC,MASjD,OARAH,EAAEI,iBAEFC,KAAKC,SAAWD,KAAKC,QAErBD,KAAKE,cAAc,IAAIC,YAAY,SAAU,CACzCC,SAAS,MAGN,EAIf,IAAMC,qBAAoBR,SAAAA,QAAQC,OAASD,SAAAA,QAAQS,OAAST,SAAAA,QAAQU,SAAWV,SAAAA,QAAQW,OAEvF,SAASC,aAAaC,SAClB,IAAMC,KAAOX,KAAKY,WAElBD,KAAKE,MAAMC,oBAAsB,gBACjCH,KAAKE,MAAME,sBAAoC,IAAZL,QAAmB,QAAU,GAChEC,KAAKE,MAAMG,wBAA0B,OACrCL,KAAKE,MAAMI,8BAAgC,IAE3CC,YAAW,WACPP,KAAKE,MAAMC,oBAAsB,MACrB,IAAZJ,QAAmB,IAAM,IAGjCrB,sBAAsB8B,iBAAmB,WACrC,GAA+C,SAA3CnB,KAAKoB,aAAa,qBAAtB,CAIApB,KAAKqB,aAAa,oBAAqB,QAEvCrB,KAAKsB,UAAUC,IAAI,iBAEnB,IAAMC,aAAexB,KAAKY,WAC1BY,aAAaF,UAAUC,IAAI,uBAE3B,IAAME,iBAAmBD,aAAaE,cAAc,QAEhDC,aAAe,kBAEbC,YAAc5B,KAAKoB,aAAa,qBAClCQ,cACAD,cAAgB,IAAMC,aAG1B,IAEMC,UAAY,kEAFE7B,KAAKoB,aAAa,qBAAuB,SAEsC,YAC7FU,cAAgB,oEAFA9B,KAAKoB,aAAa,uBAAyB,IAE0C,YAC3GI,aAAaO,mBAAmB,YAAa,gBAAkBJ,aAAe,KAAOE,UAAYC,cAAgB,WAEjHL,iBAAiBH,UAAUC,IAAI,iBAE/BvB,KAAKgC,iBAAiB,UAAWtC,WAE7BW,oBACAI,aAAawB,KAAKjC,MAAM,GACxBkC,KAAAA,QAAIF,iBAAiBhC,KAAM,QAASS,aAAc,CAC9C0B,SAAS,IAEbD,KAAAA,QAAIF,iBAAiBhC,KAAM,OAAQS,aAAc,CAC7C0B,SAAS,IAEbD,KAAAA,QAAIF,iBAAiBhC,KAAM,QAASS,aAAc,CAC9C0B,SAAS,IAEbD,KAAAA,QAAIF,iBAAiBhC,KAAM,SAAUS,aAAc,CAC/C0B,SAAS,OAKrB9C,sBAAsB+C,iBAAmB,WACrCpC,KAAKqC,oBAAoB,UAAW3C,WAEpCwC,KAAAA,QAAIG,oBAAoBrC,KAAM,QAASS,aAAc,CACjD0B,SAAS,IAEbD,KAAAA,QAAIG,oBAAoBrC,KAAM,OAAQS,aAAc,CAChD0B,SAAS,IAEbD,KAAAA,QAAIG,oBAAoBrC,KAAM,QAASS,aAAc,CACjD0B,SAAS,IAEbD,KAAAA,QAAIG,oBAAoBrC,KAAM,SAAUS,aAAc,CAClD0B,SAAS,KAIjBG,SAASC,gBAAgB,gBAAiB,CACtC9C,UAAWJ,sBACXmD,QAAS","file":"emby-checkbox.js","sourcesContent":["import browser from 'browser';\nimport dom from 'dom';\nimport 'css!./emby-checkbox';\nimport 'webcomponents';\n\n/* eslint-disable indent */\n\n    const EmbyCheckboxPrototype = Object.create(HTMLInputElement.prototype);\n\n    function onKeyDown(e) {\n        // Don't submit form on enter\n        // Real (non-emulator) Tizen does nothing on Space\n        if (e.keyCode === 13 || (e.keyCode === 32 && browser.tizen)) {\n            e.preventDefault();\n\n            this.checked = !this.checked;\n\n            this.dispatchEvent(new CustomEvent('change', {\n                bubbles: true\n            }));\n\n            return false;\n        }\n    }\n\n    const enableRefreshHack = browser.tizen || browser.orsay || browser.operaTv || browser.web0s ? true : false;\n\n    function forceRefresh(loading) {\n        const elem = this.parentNode;\n\n        elem.style.webkitAnimationName = 'repaintChrome';\n        elem.style.webkitAnimationDelay = (loading === true ? '500ms' : '');\n        elem.style.webkitAnimationDuration = '10ms';\n        elem.style.webkitAnimationIterationCount = '1';\n\n        setTimeout(function () {\n            elem.style.webkitAnimationName = '';\n        }, (loading === true ? 520 : 20));\n    }\n\n    EmbyCheckboxPrototype.attachedCallback = function () {\n        if (this.getAttribute('data-embycheckbox') === 'true') {\n            return;\n        }\n\n        this.setAttribute('data-embycheckbox', 'true');\n\n        this.classList.add('emby-checkbox');\n\n        const labelElement = this.parentNode;\n        labelElement.classList.add('emby-checkbox-label');\n\n        const labelTextElement = labelElement.querySelector('span');\n\n        let outlineClass = 'checkboxOutline';\n\n        const customClass = this.getAttribute('data-outlineclass');\n        if (customClass) {\n            outlineClass += ' ' + customClass;\n        }\n\n        const checkedIcon = this.getAttribute('data-checkedicon') || 'check';\n        const uncheckedIcon = this.getAttribute('data-uncheckedicon') || '';\n        const checkHtml = '<span class=\"material-icons checkboxIcon checkboxIcon-checked ' + checkedIcon + '\"></span>';\n        const uncheckedHtml = '<span class=\"material-icons checkboxIcon checkboxIcon-unchecked ' + uncheckedIcon + '\"></span>';\n        labelElement.insertAdjacentHTML('beforeend', '<span class=\"' + outlineClass + '\">' + checkHtml + uncheckedHtml + '</span>');\n\n        labelTextElement.classList.add('checkboxLabel');\n\n        this.addEventListener('keydown', onKeyDown);\n\n        if (enableRefreshHack) {\n            forceRefresh.call(this, true);\n            dom.addEventListener(this, 'click', forceRefresh, {\n                passive: true\n            });\n            dom.addEventListener(this, 'blur', forceRefresh, {\n                passive: true\n            });\n            dom.addEventListener(this, 'focus', forceRefresh, {\n                passive: true\n            });\n            dom.addEventListener(this, 'change', forceRefresh, {\n                passive: true\n            });\n        }\n    };\n\n    EmbyCheckboxPrototype.detachedCallback = function () {\n        this.removeEventListener('keydown', onKeyDown);\n\n        dom.removeEventListener(this, 'click', forceRefresh, {\n            passive: true\n        });\n        dom.removeEventListener(this, 'blur', forceRefresh, {\n            passive: true\n        });\n        dom.removeEventListener(this, 'focus', forceRefresh, {\n            passive: true\n        });\n        dom.removeEventListener(this, 'change', forceRefresh, {\n            passive: true\n        });\n    };\n\n    document.registerElement('emby-checkbox', {\n        prototype: EmbyCheckboxPrototype,\n        extends: 'input'\n    });\n\n/* eslint-enable indent */\n"]}