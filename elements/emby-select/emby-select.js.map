{"version":3,"sources":["elements/emby-select/emby-select.js"],"names":["define","_layoutManager","_browser","_actionsheet","_embySelect","_webcomponents","_interopRequireDefault","obj","__esModule","default","EmbySelectPrototype","Object","create","HTMLSelectElement","prototype","enableNativeMenu","browser","edgeUwp","xboxOne","tizen","orsay","web0s","tv","layoutManager","showActionSheet","select","labelElem","getLabel","title","textContent","innerText","actionsheet","show","items","options","positionTo","then","value","setValue","triggerChange","evt","document","createEvent","initEvent","dispatchEvent","elem","previousSibling","tagName","onFocus","e","label","this","classList","add","onBlur","remove","onMouseDown","button","preventDefault","onKeyDown","keyCode","inputId","createdCallback","id","addEventListener","attachedCallback","contains","ownerDocument","createElement","innerHTML","getAttribute","htmlFor","parentNode","insertBefore","insertAdjacentHTML","setLabel","text","querySelector","registerElement","extends"],"mappings":"AAAAA,OAAO,CAAC,gBAAiB,UAAW,cAAe,oBAAqB,kBAAkB,SAAUC,eAAgBC,SAAUC,aAAcC,YAAaC,gBACvJ,aAMA,SAASC,uBAAuBC,KAAO,OAAOA,KAAOA,IAAIC,WAAaD,IAAM,CAAEE,QAASF,KAPzFN,eAAAK,uBAAAL,gBACAC,SAAAI,uBAAAJ,UACAC,aAAAG,uBAAAH,cAMI,IAAMO,oBAAsBC,OAAOC,OAAOC,kBAAkBC,WAE5D,SAASC,mBACL,SAAIC,SAAAA,QAAQC,UAAWD,SAAAA,QAAQE,YAK3BF,SAAAA,QAAQG,OAASH,SAAAA,QAAQI,OAASJ,SAAAA,QAAQK,WAK1CL,SAAAA,QAAQM,KAIRC,eAAAA,QAAcD,IAiBtB,SAASE,gBAAgBC,QACrB,IAAMC,UAAYC,SAASF,QACrBG,MAAQF,UAAaA,UAAUG,aAAeH,UAAUI,UAAa,KAE3EC,aAAAA,QAAYC,KAAK,CACbC,MAAOR,OAAOS,QACdC,WAAYV,OACZG,MAAOA,QAERQ,MAAK,SAAUC,QAbtB,SAASC,SAASb,OAAQY,OACtBZ,OAAOY,MAAQA,MAaXC,CAASb,OAAQY,OApBzB,SAASE,cAAcd,QACnB,IAAMe,IAAMC,SAASC,YAAY,cACjCF,IAAIG,UAAU,UAAU,GAAO,GAC/BlB,OAAOmB,cAAcJ,KAkBjBD,CAAcd,WAItB,SAASE,SAASF,QAEd,IADA,IAAIoB,KAAOpB,OAAOqB,gBACXD,MAAyB,UAAjBA,KAAKE,SAChBF,KAAOA,KAAKC,gBAEhB,OAAOD,KAGX,SAASG,QAAQC,GACb,IAAMC,MAAQvB,SAASwB,MACnBD,OACAA,MAAME,UAAUC,IAAI,sBAI5B,SAASC,OAAOL,GACZ,IAAMC,MAAQvB,SAASwB,MACnBD,OACAA,MAAME,UAAUG,OAAO,sBAI/B,SAASC,YAAYP,GAEZA,EAAEQ,QAAW1C,qBACdkC,EAAES,iBACFlC,gBAAgB2B,OAIxB,SAASQ,UAAUV,GACf,OAAQA,EAAEW,SACN,KAAK,GAKD,YAJK7C,qBACDkC,EAAES,iBACFlC,gBAAgB2B,QAGxB,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GAID,YAHI5B,eAAAA,QAAcD,IACd2B,EAAES,mBAQlB,IAAIG,QAAU,EAEdnD,oBAAoBoD,gBAAkB,WAC7BX,KAAKY,KACNZ,KAAKY,GAAK,aAAeF,QACzBA,WAGJV,KAAKC,UAAUC,IAAI,yBAEf9B,eAAAA,QAAcD,IACd6B,KAAKC,UAAUC,IAAI,0BAGvBF,KAAKa,iBAAiB,YAAaR,aACnCL,KAAKa,iBAAiB,UAAWL,WAEjCR,KAAKa,iBAAiB,QAAShB,SAC/BG,KAAKa,iBAAiB,OAAQV,SAGlC5C,oBAAoBuD,iBAAmB,WACnC,IAAId,KAAKC,UAAUc,SAAS,eAA5B,CAIAf,KAAKC,UAAUC,IAAI,eAEnB,IAAMH,MAAQC,KAAKgB,cAAcC,cAAc,SAC/ClB,MAAMmB,UAAYlB,KAAKmB,aAAa,UAAY,GAChDpB,MAAME,UAAUC,IAAI,eACpBH,MAAMqB,QAAUpB,KAAKY,GACrBZ,KAAKqB,WAAWC,aAAavB,MAAOC,MAEhCA,KAAKC,UAAUc,SAAS,0BACxBf,KAAKqB,WAAWE,mBAAmB,YAAa,sKAIxDhE,oBAAoBiE,SAAW,SAAUC,MACvBzB,KAAKqB,WAAWK,cAAc,SAEtCR,UAAYO,MAGtBnC,SAASqC,gBAAgB,cAAe,CACpChE,UAAWJ,oBACXqE,QAAS","file":"emby-select.js","sourcesContent":["import layoutManager from 'layoutManager';\nimport browser from 'browser';\nimport actionsheet from 'actionsheet';\nimport 'css!./emby-select';\nimport 'webcomponents';\n\n/* eslint-disable indent */\n\n    const EmbySelectPrototype = Object.create(HTMLSelectElement.prototype);\n\n    function enableNativeMenu() {\n        if (browser.edgeUwp || browser.xboxOne) {\n            return true;\n        }\n\n        // Doesn't seem to work at all\n        if (browser.tizen || browser.orsay || browser.web0s) {\n            return false;\n        }\n\n        // Take advantage of the native input methods\n        if (browser.tv) {\n            return true;\n        }\n\n        if (layoutManager.tv) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function triggerChange(select) {\n        const evt = document.createEvent('HTMLEvents');\n        evt.initEvent('change', false, true);\n        select.dispatchEvent(evt);\n    }\n\n    function setValue(select, value) {\n        select.value = value;\n    }\n\n    function showActionSheet(select) {\n        const labelElem = getLabel(select);\n        const title = labelElem ? (labelElem.textContent || labelElem.innerText) : null;\n\n        actionsheet.show({\n            items: select.options,\n            positionTo: select,\n            title: title\n\n        }).then(function (value) {\n            setValue(select, value);\n            triggerChange(select);\n        });\n    }\n\n    function getLabel(select) {\n        let elem = select.previousSibling;\n        while (elem && elem.tagName !== 'LABEL') {\n            elem = elem.previousSibling;\n        }\n        return elem;\n    }\n\n    function onFocus(e) {\n        const label = getLabel(this);\n        if (label) {\n            label.classList.add('selectLabelFocused');\n        }\n    }\n\n    function onBlur(e) {\n        const label = getLabel(this);\n        if (label) {\n            label.classList.remove('selectLabelFocused');\n        }\n    }\n\n    function onMouseDown(e) {\n        // e.button=0 for primary (left) mouse button click\n        if (!e.button && !enableNativeMenu()) {\n            e.preventDefault();\n            showActionSheet(this);\n        }\n    }\n\n    function onKeyDown(e) {\n        switch (e.keyCode) {\n            case 13:\n                if (!enableNativeMenu()) {\n                    e.preventDefault();\n                    showActionSheet(this);\n                }\n                return;\n            case 37:\n            case 38:\n            case 39:\n            case 40:\n                if (layoutManager.tv) {\n                    e.preventDefault();\n                }\n                return;\n            default:\n                break;\n        }\n    }\n\n    let inputId = 0;\n\n    EmbySelectPrototype.createdCallback = function () {\n        if (!this.id) {\n            this.id = 'embyselect' + inputId;\n            inputId++;\n        }\n\n        this.classList.add('emby-select-withcolor');\n\n        if (layoutManager.tv) {\n            this.classList.add('emby-select-focusscale');\n        }\n\n        this.addEventListener('mousedown', onMouseDown);\n        this.addEventListener('keydown', onKeyDown);\n\n        this.addEventListener('focus', onFocus);\n        this.addEventListener('blur', onBlur);\n    };\n\n    EmbySelectPrototype.attachedCallback = function () {\n        if (this.classList.contains('emby-select')) {\n            return;\n        }\n\n        this.classList.add('emby-select');\n\n        const label = this.ownerDocument.createElement('label');\n        label.innerHTML = this.getAttribute('label') || '';\n        label.classList.add('selectLabel');\n        label.htmlFor = this.id;\n        this.parentNode.insertBefore(label, this);\n\n        if (this.classList.contains('emby-select-withcolor')) {\n            this.parentNode.insertAdjacentHTML('beforeend', '<div class=\"selectArrowContainer\"><div style=\"visibility:hidden;display:none;\">0</div><span class=\"selectArrow material-icons keyboard_arrow_down\"></span></div>');\n        }\n    };\n\n    EmbySelectPrototype.setLabel = function (text) {\n        const label = this.parentNode.querySelector('label');\n\n        label.innerHTML = text;\n    };\n\n    document.registerElement('emby-select', {\n        prototype: EmbySelectPrototype,\n        extends: 'select'\n    });\n\n/* eslint-enable indent */\n"]}