{"version":3,"sources":["elements/emby-input/emby-input.js"],"names":["define","_browser","_dom","_embyInput","_webcomponents","_interopRequireDefault","obj","__esModule","default","EmbyInputPrototype","Object","create","HTMLInputElement","prototype","inputId","supportsFloatingLabel","getOwnPropertyDescriptor","defineProperty","descriptor","configurable","baseSetMethod","set","value","call","this","dispatchEvent","CustomEvent","bubbles","cancelable","onChange","label","labelElement","classList","remove","type","add","createdCallback","id","contains","parentNode","document","ownerDocument","createElement","innerHTML","getAttribute","htmlFor","insertBefore","dom","addEventListener","attachIME","passive","browser","orsay","activeElement","attachedCallback","text","registerElement","extends"],"mappings":"AAAAA,OAAO,CAAC,UAAW,MAAO,mBAAoB,kBAAkB,SAAUC,SAAUC,KAAMC,WAAYC,gBACpG,aAKA,SAASC,uBAAuBC,KAAO,OAAOA,KAAOA,IAAIC,WAAaD,IAAM,CAAEE,QAASF,KANzFL,SAAAI,uBAAAJ,UACAC,KAAAG,uBAAAH,MAMI,IAAMO,mBAAqBC,OAAOC,OAAOC,iBAAiBC,WAEtDC,QAAU,EACVC,uBAAwB,EAE5B,GAAIL,OAAOM,0BAA4BN,OAAOO,eAAgB,CAC1D,IAAMC,WAAaR,OAAOM,yBAAyBJ,iBAAiBC,UAAW,SAG/E,GAAIK,YAAcA,WAAWC,aAAc,CACvC,IAAMC,cAAgBF,WAAWG,IACjCH,WAAWG,IAAM,SAAUC,OACvBF,cAAcG,KAAKC,KAAMF,OAEzBE,KAAKC,cAAc,IAAIC,YAAY,WAAY,CAC3CC,SAAS,EACTC,YAAY,MAIpBlB,OAAOO,eAAeL,iBAAiBC,UAAW,QAASK,YAC3DH,uBAAwB,GAqEhC,SAASc,WACL,IAAMC,MAAQN,KAAKO,aACfP,KAAKF,MACLQ,MAAME,UAAUC,OAAO,oBAEOlB,uBAAuC,SAAdS,KAAKU,MAAiC,SAAdV,KAAKU,MAGhFJ,MAAME,UAAUG,IAAI,oBAzEhC1B,mBAAmB2B,gBAAkB,WAMjC,GALKZ,KAAKa,KACNb,KAAKa,GAAK,YAAcvB,QACxBA,YAGAU,KAAKQ,UAAUM,SAAS,cAA5B,CAIAd,KAAKQ,UAAUG,IAAI,cAEnB,IAAMI,WAAaf,KAAKe,WAClBC,SAAWhB,KAAKiB,cAChBX,MAAQU,SAASE,cAAc,SACrCZ,MAAMa,UAAYnB,KAAKoB,aAAa,UAAY,GAChDd,MAAME,UAAUG,IAAI,cACpBL,MAAME,UAAUG,IAAI,uBAEpBL,MAAMe,QAAUrB,KAAKa,GACrBE,WAAWO,aAAahB,MAAON,MAC/BA,KAAKO,aAAeD,MAEpBiB,KAAAA,QAAIC,iBAAiBxB,KAAM,SAAS,WAChCK,SAASN,KAAKC,MAGVgB,SAASS,WACTT,SAASS,UAAUzB,MAGvBM,MAAME,UAAUG,IAAI,qBACpBL,MAAME,UAAUC,OAAO,yBACxB,CACCiB,SAAS,IAGbH,KAAAA,QAAIC,iBAAiBxB,KAAM,QAAQ,WAC/BK,SAASN,KAAKC,MACdM,MAAME,UAAUC,OAAO,qBACvBH,MAAME,UAAUG,IAAI,yBACrB,CACCe,SAAS,IAGbH,KAAAA,QAAIC,iBAAiBxB,KAAM,SAAUK,SAAU,CAC3CqB,SAAS,IAEbH,KAAAA,QAAIC,iBAAiBxB,KAAM,QAASK,SAAU,CAC1CqB,SAAS,IAEbH,KAAAA,QAAIC,iBAAiBxB,KAAM,WAAYK,SAAU,CAC7CqB,SAAS,IAGTC,SAAAA,QAAQC,OACJ5B,OAASgB,SAASa,eAEdb,SAASS,WACTT,SAASS,UAAUzB,QAmBnCf,mBAAmB6C,iBAAmB,WAClC9B,KAAKO,aAAac,QAAUrB,KAAKa,GACjCR,SAASN,KAAKC,OAGlBf,mBAAmBqB,MAAQ,SAAUyB,MACjC/B,KAAKO,aAAaY,UAAYY,MAGlCf,SAASgB,gBAAgB,aAAc,CACnC3C,UAAWJ,mBACXgD,QAAS","file":"emby-input.js","sourcesContent":["import browser from 'browser';\nimport dom from 'dom';\nimport 'css!./emby-input';\nimport 'webcomponents';\n\n/* eslint-disable indent */\n\n    const EmbyInputPrototype = Object.create(HTMLInputElement.prototype);\n\n    let inputId = 0;\n    let supportsFloatingLabel = false;\n\n    if (Object.getOwnPropertyDescriptor && Object.defineProperty) {\n        const descriptor = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, 'value');\n\n        // descriptor returning null in webos\n        if (descriptor && descriptor.configurable) {\n            const baseSetMethod = descriptor.set;\n            descriptor.set = function (value) {\n                baseSetMethod.call(this, value);\n\n                this.dispatchEvent(new CustomEvent('valueset', {\n                    bubbles: false,\n                    cancelable: false\n                }));\n            };\n\n            Object.defineProperty(HTMLInputElement.prototype, 'value', descriptor);\n            supportsFloatingLabel = true;\n        }\n    }\n\n    EmbyInputPrototype.createdCallback = function () {\n        if (!this.id) {\n            this.id = 'embyinput' + inputId;\n            inputId++;\n        }\n\n        if (this.classList.contains('emby-input')) {\n            return;\n        }\n\n        this.classList.add('emby-input');\n\n        const parentNode = this.parentNode;\n        const document = this.ownerDocument;\n        const label = document.createElement('label');\n        label.innerHTML = this.getAttribute('label') || '';\n        label.classList.add('inputLabel');\n        label.classList.add('inputLabelUnfocused');\n\n        label.htmlFor = this.id;\n        parentNode.insertBefore(label, this);\n        this.labelElement = label;\n\n        dom.addEventListener(this, 'focus', function () {\n            onChange.call(this);\n\n            // For Samsung orsay devices\n            if (document.attachIME) {\n                document.attachIME(this);\n            }\n\n            label.classList.add('inputLabelFocused');\n            label.classList.remove('inputLabelUnfocused');\n        }, {\n            passive: true\n        });\n\n        dom.addEventListener(this, 'blur', function () {\n            onChange.call(this);\n            label.classList.remove('inputLabelFocused');\n            label.classList.add('inputLabelUnfocused');\n        }, {\n            passive: true\n        });\n\n        dom.addEventListener(this, 'change', onChange, {\n            passive: true\n        });\n        dom.addEventListener(this, 'input', onChange, {\n            passive: true\n        });\n        dom.addEventListener(this, 'valueset', onChange, {\n            passive: true\n        });\n\n        if (browser.orsay) {\n            if (this === document.activeElement) {\n                //Make sure the IME pops up if this is the first/default element on the page\n                if (document.attachIME) {\n                    document.attachIME(this);\n                }\n            }\n        }\n    };\n\n    function onChange() {\n        const label = this.labelElement;\n        if (this.value) {\n            label.classList.remove('inputLabel-float');\n        } else {\n            const instanceSupportsFloat = supportsFloatingLabel && this.type !== 'date' && this.type !== 'time';\n\n            if (instanceSupportsFloat) {\n                label.classList.add('inputLabel-float');\n            }\n        }\n    }\n\n    EmbyInputPrototype.attachedCallback = function () {\n        this.labelElement.htmlFor = this.id;\n        onChange.call(this);\n    };\n\n    EmbyInputPrototype.label = function (text) {\n        this.labelElement.innerHTML = text;\n    };\n\n    document.registerElement('emby-input', {\n        prototype: EmbyInputPrototype,\n        extends: 'input'\n    });\n\n/* eslint-enable indent */\n"]}