{"version":3,"sources":["elements/emby-progressring/emby-progressring.js"],"names":["define","_require","_exports","_embyProgressring","_webcomponents","_typeof","obj","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","Object","defineProperty","value","default","EmbyProgressRing","create","HTMLDivElement","createdCallback","this","classList","add","instance","Promise","_resolve","_reject","imported","_interopRequireWildcard","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","then","_ref","template","innerHTML","window","MutationObserver","observer","mutations","forEach","mutation","setProgress","parseFloat","getAttribute","observe","attributes","childList","characterData","progress","angle","Math","floor","querySelector","style","transform","attachedCallback","detachedCallback","disconnect","document","registerElement","extends","_default"],"mappings":"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","file":"emby-progressring.js","sourcesContent":["import 'css!./emby-progressring';\nimport 'webcomponents';\n\n/* eslint-disable indent */\n\n    const EmbyProgressRing = Object.create(HTMLDivElement.prototype);\n\n    EmbyProgressRing.createdCallback = function () {\n        this.classList.add('progressring');\n        const instance = this;\n\n        import('text!./emby-progressring.template.html').then(({default: template}) => {\n            instance.innerHTML = template;\n\n            if (window.MutationObserver) {\n                // create an observer instance\n                var observer = new MutationObserver(function (mutations) {\n                    mutations.forEach(function (mutation) {\n                        instance.setProgress(parseFloat(instance.getAttribute('data-progress') || '0'));\n                    });\n                });\n\n                // configuration of the observer:\n                var config = { attributes: true, childList: false, characterData: false };\n\n                // pass in the target node, as well as the observer options\n                observer.observe(instance, config);\n\n                instance.observer = observer;\n            }\n\n            instance.setProgress(parseFloat(instance.getAttribute('data-progress') || '0'));\n        });\n    };\n\n    EmbyProgressRing.setProgress = function (progress) {\n        progress = Math.floor(progress);\n\n        let angle;\n\n        if (progress < 25) {\n            angle = -90 + (progress / 100) * 360;\n\n            this.querySelector('.animate-0-25-b').style.transform = 'rotate(' + angle + 'deg)';\n\n            this.querySelector('.animate-25-50-b').style.transform = 'rotate(-90deg)';\n            this.querySelector('.animate-50-75-b').style.transform = 'rotate(-90deg)';\n            this.querySelector('.animate-75-100-b').style.transform = 'rotate(-90deg)';\n        } else if (progress >= 25 && progress < 50) {\n            angle = -90 + ((progress - 25) / 100) * 360;\n\n            this.querySelector('.animate-0-25-b').style.transform = 'none';\n            this.querySelector('.animate-25-50-b').style.transform = 'rotate(' + angle + 'deg)';\n\n            this.querySelector('.animate-50-75-b').style.transform = 'rotate(-90deg)';\n            this.querySelector('.animate-75-100-b').style.transform = 'rotate(-90deg)';\n        } else if (progress >= 50 && progress < 75) {\n            angle = -90 + ((progress - 50) / 100) * 360;\n\n            this.querySelector('.animate-0-25-b').style.transform = 'none';\n            this.querySelector('.animate-25-50-b').style.transform = 'none';\n            this.querySelector('.animate-50-75-b').style.transform = 'rotate(' + angle + 'deg)';\n\n            this.querySelector('.animate-75-100-b').style.transform = 'rotate(-90deg)';\n        } else if (progress >= 75 && progress <= 100) {\n            angle = -90 + ((progress - 75) / 100) * 360;\n\n            this.querySelector('.animate-0-25-b').style.transform = 'none';\n            this.querySelector('.animate-25-50-b').style.transform = 'none';\n            this.querySelector('.animate-50-75-b').style.transform = 'none';\n            this.querySelector('.animate-75-100-b').style.transform = 'rotate(' + angle + 'deg)';\n        }\n\n        this.querySelector('.progressring-text').innerHTML = progress + '%';\n    };\n\n    EmbyProgressRing.attachedCallback = function () {\n\n    };\n\n    EmbyProgressRing.detachedCallback = function () {\n        const observer = this.observer;\n\n        if (observer) {\n            // later, you can stop observing\n            observer.disconnect();\n\n            this.observer = null;\n        }\n    };\n\n    document.registerElement('emby-progressring', {\n        prototype: EmbyProgressRing,\n        extends: 'div'\n    });\n\n    export default EmbyProgressRing;\n\n/* eslint-enable indent */\n"]}