{"version":3,"sources":["elements/emby-itemrefreshindicator/emby-itemrefreshindicator.js"],"names":["define","_embyProgressring","_dom","_serverNotifications","_events","_webcomponents","_interopRequireDefault","obj","__esModule","default","onRefreshProgress","e","apiClient","info","this","itemId","dom","parentWithAttribute","getAttribute","ItemId","progress","parseFloat","Progress","classList","remove","add","setAttribute","EmbyItemRefreshIndicatorPrototype","Object","create","EmbyProgressRing","createdCallback","call","addNotificationEvent","instance","name","handler","localHandler","bind","events","on","serverNotifications","attachedCallback","detachedCallback","removeNotificationEvent","off","document","registerElement","prototype","extends"],"mappings":"AAAAA,OAAO,CAAC,oBAAqB,MAAO,sBAAuB,SAAU,kBAAkB,SAAUC,kBAAmBC,KAAMC,qBAAsBC,QAASC,gBACvJ,aAOA,SAASC,uBAAuBC,KAAO,OAAOA,KAAOA,IAAIC,WAAaD,IAAM,CAAEE,QAASF,KAcrF,SAASG,kBAAkBC,EAAGC,UAAWC,MAOrC,GANkBC,KAEHC,SAFGD,KAGJC,OAASC,KAAAA,QAAIC,oBAHTH,KAGwC,WAAWI,aAAa,YAG9EL,KAAKM,SANSL,KAMYC,OAAQ,CAClC,IAAMK,SAAWC,WAAWR,KAAKS,UAE7BF,UAAYA,SAAW,IACvBN,KAAKS,UAAUC,OAAO,QAEtBV,KAAKS,UAAUE,IAAI,QAGvBX,KAAKY,aAAa,gBAAiBN,WAtC/CnB,kBAAAK,uBAAAL,mBACAC,KAAAI,uBAAAJ,MACAC,qBAAAG,uBAAAH,sBACAC,QAAAE,uBAAAF,SAuCI,IAAMuB,kCAAoCC,OAAOC,OAAOC,kBAAAA,SAExDH,kCAAkCI,gBAAkB,WAE5CD,kBAAAA,QAAiBC,iBACjBD,kBAAAA,QAAiBC,gBAAgBC,KAAKlB,MAvC9C,SAASmB,qBAAqBC,SAAUC,KAAMC,SAC1C,IAAMC,aAAeD,QAAQE,KAAKJ,UAClCK,QAAAA,QAAOC,GAAGC,qBAAAA,QAAqBN,KAAME,cACrCH,SAASC,MAAQE,aAuCjBJ,CAAqBnB,KAAM,kBAAmBJ,oBAGlDiB,kCAAkCe,iBAAmB,WAE7CZ,kBAAAA,QAAiBY,kBACjBZ,kBAAAA,QAAiBY,iBAAiBV,KAAKlB,OAI/Ca,kCAAkCgB,iBAAmB,WAE7Cb,kBAAAA,QAAiBa,kBACjBb,kBAAAA,QAAiBa,iBAAiBX,KAAKlB,MAjD/C,SAAS8B,wBAAwBV,SAAUC,MACvC,IAAMC,QAAUF,SAASC,MACrBC,UACAG,QAAAA,QAAOM,IAAIJ,qBAAAA,QAAqBN,KAAMC,SACtCF,SAASC,MAAQ,MAgDrBS,CAAwB9B,KAAM,mBAC9BA,KAAKC,OAAS,MAGlB+B,SAASC,gBAAgB,4BAA6B,CAClDC,UAAWrB,kCACXsB,QAAS","file":"emby-itemrefreshindicator.js","sourcesContent":["import EmbyProgressRing from 'emby-progressring';\nimport dom from 'dom';\nimport serverNotifications from 'serverNotifications';\nimport events from 'events';\nimport 'webcomponents';\n\n/* eslint-disable indent */\n\n    function addNotificationEvent(instance, name, handler) {\n        const localHandler = handler.bind(instance);\n        events.on(serverNotifications, name, localHandler);\n        instance[name] = localHandler;\n    }\n\n    function removeNotificationEvent(instance, name) {\n        const handler = instance[name];\n        if (handler) {\n            events.off(serverNotifications, name, handler);\n            instance[name] = null;\n        }\n    }\n\n    function onRefreshProgress(e, apiClient, info) {\n        const indicator = this;\n\n        if (!indicator.itemId) {\n            indicator.itemId = dom.parentWithAttribute(indicator, 'data-id').getAttribute('data-id');\n        }\n\n        if (info.ItemId === indicator.itemId) {\n            const progress = parseFloat(info.Progress);\n\n            if (progress && progress < 100) {\n                this.classList.remove('hide');\n            } else {\n                this.classList.add('hide');\n            }\n\n            this.setAttribute('data-progress', progress);\n        }\n    }\n\n    const EmbyItemRefreshIndicatorPrototype = Object.create(EmbyProgressRing);\n\n    EmbyItemRefreshIndicatorPrototype.createdCallback = function () {\n        // base method\n        if (EmbyProgressRing.createdCallback) {\n            EmbyProgressRing.createdCallback.call(this);\n        }\n\n        addNotificationEvent(this, 'RefreshProgress', onRefreshProgress);\n    };\n\n    EmbyItemRefreshIndicatorPrototype.attachedCallback = function () {\n        // base method\n        if (EmbyProgressRing.attachedCallback) {\n            EmbyProgressRing.attachedCallback.call(this);\n        }\n    };\n\n    EmbyItemRefreshIndicatorPrototype.detachedCallback = function () {\n        // base method\n        if (EmbyProgressRing.detachedCallback) {\n            EmbyProgressRing.detachedCallback.call(this);\n        }\n\n        removeNotificationEvent(this, 'RefreshProgress');\n        this.itemId = null;\n    };\n\n    document.registerElement('emby-itemrefreshindicator', {\n        prototype: EmbyItemRefreshIndicatorPrototype,\n        extends: 'div'\n    });\n\n/* eslint-enable indent */\n"]}