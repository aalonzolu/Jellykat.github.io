{"version":3,"sources":["elements/emby-collapse/emby-collapse.js"],"names":["define","_embyCollapse","_webcomponents","_embyButton","EmbyButtonPrototype","Object","create","HTMLDivElement","prototype","onButtonClick","e","collapseContent","this","parentNode","querySelector","expanded","slideUpToHide","button","elem","requestAnimationFrame","style","height","offsetHeight","classList","remove","setTimeout","contains","add","slideDownToShow","attachedCallback","title","getAttribute","html","insertAdjacentHTML","addEventListener","call","document","registerElement","extends"],"mappings":"AAAAA,OAAO,CAAC,sBAAuB,gBAAiB,gBAAgB,SAAUC,cAAeC,eAAgBC,aACvG,aAKE,IAAMC,oBAAsBC,OAAOC,OAAOC,eAAeC,WAkDzD,SAASC,cAAcC,GACnB,IACMC,gBADSC,KACgBC,WAAWC,cAAc,oBAEpDH,gBAAgBI,UAChBJ,gBAAgBI,UAAW,EA3BnC,SAASC,cAAcC,OAAQC,MAC3BC,uBAAsB,WAClBD,KAAKE,MAAMC,OAASH,KAAKI,aAAe,KAGtBJ,KAAKI,aACvBJ,KAAKK,UAAUC,OAAO,YACtBN,KAAKE,MAAMC,OAAS,IAEpBI,YAAW,WACHP,KAAKK,UAAUG,SAAS,YACxBR,KAAKK,UAAUC,OAAO,QAEtBN,KAAKK,UAAUI,IAAI,UAExB,KAEUV,OAAOH,cAAc,mBAC7BS,UAAUC,OAAO,uCAUtBR,CALWJ,KAKWD,mBAEtBA,gBAAgBI,UAAW,EAxDnC,SAASa,gBAAgBX,OAAQC,MAC7BC,uBAAsB,WAClBD,KAAKK,UAAUC,OAAO,QACtBN,KAAKK,UAAUI,IAAI,YACnBT,KAAKE,MAAMC,OAAS,OACpB,IAAMA,OAASH,KAAKI,aAAe,KACnCJ,KAAKE,MAAMC,OAAS,IAGFH,KAAKI,aACvBJ,KAAKE,MAAMC,OAASA,OAEpBI,YAAW,WACHP,KAAKK,UAAUG,SAAS,YACxBR,KAAKK,UAAUC,OAAO,QAEtBN,KAAKK,UAAUI,IAAI,QAEvBT,KAAKE,MAAMC,OAAS,SACrB,KAEUJ,OAAOH,cAAc,mBAC7BS,UAAUI,IAAI,uCAmCnBC,CARWhB,KAQaD,kBAIhCP,oBAAoByB,iBAAmB,WACnC,IAAIjB,KAAKW,UAAUG,SAAS,iBAA5B,CAIAd,KAAKW,UAAUI,IAAI,iBAEnB,IAAMhB,gBAAkBC,KAAKE,cAAc,oBACvCH,iBACAA,gBAAgBY,UAAUI,IAAI,QAGlC,IAAMG,MAAQlB,KAAKmB,aAAa,SAE1BC,KAAO,wKAA0KF,MAAQ,KAAOA,MAAQ,0FAE9MlB,KAAKqB,mBAAmB,aAAcD,MAEtC,IAAMf,OAASL,KAAKE,cAAc,4BAElCG,OAAOiB,iBAAiB,QAASzB,eAEU,SAAvCG,KAAKmB,aAAa,kBAClBtB,cAAc0B,KAAKlB,UAI3BmB,SAASC,gBAAgB,gBAAiB,CACtC7B,UAAWJ,oBACXkC,QAAS","file":"emby-collapse.js","sourcesContent":["import 'css!./emby-collapse';\nimport 'webcomponents';\nimport 'emby-button';\n\n/* eslint-disable indent */\n\n    const EmbyButtonPrototype = Object.create(HTMLDivElement.prototype);\n\n    function slideDownToShow(button, elem) {\n        requestAnimationFrame(() => {\n            elem.classList.remove('hide');\n            elem.classList.add('expanded');\n            elem.style.height = 'auto';\n            const height = elem.offsetHeight + 'px';\n            elem.style.height = '0';\n            // trigger reflow\n            // TODO: Find a better way to do this\n            const newHeight = elem.offsetHeight; /* eslint-disable-line no-unused-vars */\n            elem.style.height = height;\n\n            setTimeout(function () {\n                if (elem.classList.contains('expanded')) {\n                    elem.classList.remove('hide');\n                } else {\n                    elem.classList.add('hide');\n                }\n                elem.style.height = 'auto';\n            }, 300);\n\n            const icon = button.querySelector('.material-icons');\n            icon.classList.add('emby-collapse-expandIconExpanded');\n        });\n    }\n\n    function slideUpToHide(button, elem) {\n        requestAnimationFrame(() => {\n            elem.style.height = elem.offsetHeight + 'px';\n            // trigger reflow\n            // TODO: Find a better way to do this\n            const newHeight = elem.offsetHeight; /* eslint-disable-line no-unused-vars */\n            elem.classList.remove('expanded');\n            elem.style.height = '0';\n\n            setTimeout(function () {\n                if (elem.classList.contains('expanded')) {\n                    elem.classList.remove('hide');\n                } else {\n                    elem.classList.add('hide');\n                }\n            }, 300);\n\n            const icon = button.querySelector('.material-icons');\n            icon.classList.remove('emby-collapse-expandIconExpanded');\n        });\n    }\n\n    function onButtonClick(e) {\n        const button = this;\n        const collapseContent = button.parentNode.querySelector('.collapseContent');\n\n        if (collapseContent.expanded) {\n            collapseContent.expanded = false;\n            slideUpToHide(button, collapseContent);\n        } else {\n            collapseContent.expanded = true;\n            slideDownToShow(button, collapseContent);\n        }\n    }\n\n    EmbyButtonPrototype.attachedCallback = function () {\n        if (this.classList.contains('emby-collapse')) {\n            return;\n        }\n\n        this.classList.add('emby-collapse');\n\n        const collapseContent = this.querySelector('.collapseContent');\n        if (collapseContent) {\n            collapseContent.classList.add('hide');\n        }\n\n        const title = this.getAttribute('title');\n\n        const html = '<button is=\"emby-button\" type=\"button\" on-click=\"toggleExpand\" id=\"expandButton\" class=\"emby-collapsible-button iconRight\"><h3 class=\"emby-collapsible-title\" title=\"' + title + '\">' + title + '</h3><span class=\"material-icons emby-collapse-expandIcon expand_more\"></span></button>';\n\n        this.insertAdjacentHTML('afterbegin', html);\n\n        const button = this.querySelector('.emby-collapsible-button');\n\n        button.addEventListener('click', onButtonClick);\n\n        if (this.getAttribute('data-expanded') === 'true') {\n            onButtonClick.call(button);\n        }\n    };\n\n    document.registerElement('emby-collapse', {\n        prototype: EmbyButtonPrototype,\n        extends: 'div'\n    });\n\n/* eslint-enable indent */\n"]}