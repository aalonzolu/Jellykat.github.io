{"version":3,"sources":["elements/emby-itemscontainer/emby-itemscontainer.js"],"names":["define","_require","_itemShortcuts","_inputManager","_connectionManager","_playbackManager","_imageLoader","_layoutManager","_browser","_dom","_loading","_focusManager","_serverNotifications","_events","_webcomponents","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","ItemsContainerPrototype","create","HTMLDivElement","onClick","e","multiSelect","this","onContainerClick","itemShortcuts","disableEvent","preventDefault","stopPropagation","onContextMenu","target","card","dom","parentWithAttribute","getAttribute","inputManager","handleCommand","sourceElement","onUserDataChanged","apiClient","userData","itemsContainer","Promise","_resolve","_reject","imported","then","_ref3","eventsToMonitor","getEventsToMonitor","indexOf","notifyRefreshNeeded","monitor","split","onTimerCreated","data","programId","ProgramId","newTimerId","Id","_ref4","onSeriesTimerCreated","onTimerCancelled","_ref5","onSeriesTimerCancelled","_ref6","onLibraryChanged","itemsAdded","ItemsAdded","itemsRemoved","ItemsRemoved","length","parentId","foldersAddedTo","FoldersAddedTo","foldersRemovedFrom","FoldersRemovedFrom","collectionFolders","CollectionFolders","onPlaybackStopped","stopInfo","state","NowPlayingItem","MediaType","addNotificationEvent","instance","name","handler","owner","localHandler","bind","serverNotifications","events","on","removeNotificationEvent","off","clearRefreshInterval","isPausing","refreshInterval","clearInterval","refreshIntervalEndTime","resetRefreshInterval","intervalMs","parseInt","setInterval","Date","getTime","onDataFetched","result","items","Items","parentContainer","classList","remove","add","focusId","hasActiveElement","activeElement","document","contains","innerHTML","getItemsHtml","imageLoader","lazyChildren","setFocus","newElement","querySelector","focusManager","focus","err","console","error","autoFocus","afterRefresh","enableMultiSelect","enabled","current","self","_ref","MultiSelect","container","bindOnClick","destroy","enableDragReordering","sortable","_ref2","Sortable","draggable","handle","onEnd","evt","onDrop","el","item","newIndex","itemId","playlistId","serverId","connectionManager","getApiClient","loading","show","ajax","url","getUrl","type","hide","refreshItems","oldIndex","dispatchEvent","CustomEvent","detail","playlistItemId","bubbles","cancelable","createdCallback","attachedCallback","addEventListener","browser","touch","layoutManager","desktop","mobile","tv","click","playbackManager","detachedCallback","removeEventListener","fetchData","pause","paused","resume","options","remainingMs","needsRefresh","refresh","resolve","isInForeground","timeout","refreshTimeout","clearTimeout","setTimeout","registerElement","extends"],"mappings":"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","file":"emby-itemscontainer.js","sourcesContent":["import itemShortcuts from 'itemShortcuts';\nimport inputManager from 'inputManager';\nimport connectionManager from 'connectionManager';\nimport playbackManager from 'playbackManager';\nimport imageLoader from 'imageLoader';\nimport layoutManager from 'layoutManager';\nimport browser from 'browser';\nimport dom from 'dom';\nimport loading from 'loading';\nimport focusManager from 'focusManager';\nimport serverNotifications from 'serverNotifications';\nimport events from 'events';\nimport 'webcomponents';\n\n/* eslint-disable indent */\n\n    const ItemsContainerPrototype = Object.create(HTMLDivElement.prototype);\n\n    function onClick(e) {\n        const itemsContainer = this;\n        const multiSelect = itemsContainer.multiSelect;\n\n        if (multiSelect) {\n            if (multiSelect.onContainerClick.call(itemsContainer, e) === false) {\n                return;\n            }\n        }\n\n        itemShortcuts.onClick.call(itemsContainer, e);\n    }\n\n    function disableEvent(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    function onContextMenu(e) {\n        const target = e.target;\n        const card = dom.parentWithAttribute(target, 'data-id');\n\n        // check for serverId, it won't be present on selectserver\n        if (card && card.getAttribute('data-serverid')) {\n            inputManager.handleCommand('menu', {\n                sourceElement: card\n            });\n\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n        }\n    }\n\n    function getShortcutOptions() {\n        return {\n            click: false\n        };\n    }\n\n    ItemsContainerPrototype.enableMultiSelect = function (enabled) {\n        const current = this.multiSelect;\n\n        if (!enabled) {\n            if (current) {\n                current.destroy();\n                this.multiSelect = null;\n            }\n            return;\n        }\n\n        if (current) {\n            return;\n        }\n\n        const self = this;\n        import('multiSelect').then(({default: MultiSelect}) => {\n            self.multiSelect = new MultiSelect({\n                container: self,\n                bindOnClick: false\n            });\n        });\n    };\n\n    function onDrop(evt, itemsContainer) {\n        const el = evt.item;\n\n        const newIndex = evt.newIndex;\n        const itemId = el.getAttribute('data-playlistitemid');\n        const playlistId = el.getAttribute('data-playlistid');\n\n        if (!playlistId) {\n            const oldIndex = evt.oldIndex;\n            el.dispatchEvent(new CustomEvent('itemdrop', {\n                detail: {\n                    oldIndex: oldIndex,\n                    newIndex: newIndex,\n                    playlistItemId: itemId\n                },\n                bubbles: true,\n                cancelable: false\n            }));\n            return;\n        }\n\n        const serverId = el.getAttribute('data-serverid');\n        const apiClient = connectionManager.getApiClient(serverId);\n\n        loading.show();\n\n        apiClient.ajax({\n            url: apiClient.getUrl('Playlists/' + playlistId + '/Items/' + itemId + '/Move/' + newIndex),\n            type: 'POST'\n        }).then(function () {\n            loading.hide();\n        }, function () {\n            loading.hide();\n            itemsContainer.refreshItems();\n        });\n    }\n\n    ItemsContainerPrototype.enableDragReordering = function (enabled) {\n        const current = this.sortable;\n        if (!enabled) {\n            if (current) {\n                current.destroy();\n                this.sortable = null;\n            }\n            return;\n        }\n\n        if (current) {\n            return;\n        }\n\n        const self = this;\n        import('sortable').then(({default: Sortable}) => {\n            self.sortable = new Sortable(self, {\n                draggable: '.listItem',\n                handle: '.listViewDragHandle',\n\n                // dragging ended\n                onEnd: function (evt) {\n                    return onDrop(evt, self);\n                }\n            });\n        });\n    };\n\n    function onUserDataChanged(e, apiClient, userData) {\n        const itemsContainer = this;\n\n        import('cardBuilder').then(({default: cardBuilder}) => {\n            cardBuilder.onUserDataChanged(userData, itemsContainer);\n        });\n\n        const eventsToMonitor = getEventsToMonitor(itemsContainer);\n\n        // TODO: Check user data change reason?\n        if (eventsToMonitor.indexOf('markfavorite') !== -1) {\n            itemsContainer.notifyRefreshNeeded();\n        } else if (eventsToMonitor.indexOf('markplayed') !== -1) {\n            itemsContainer.notifyRefreshNeeded();\n        }\n    }\n\n    function getEventsToMonitor(itemsContainer) {\n        const monitor = itemsContainer.getAttribute('data-monitor');\n        if (monitor) {\n            return monitor.split(',');\n        }\n\n        return [];\n    }\n\n    function onTimerCreated(e, apiClient, data) {\n        const itemsContainer = this;\n\n        if (getEventsToMonitor(itemsContainer).indexOf('timers') !== -1) {\n            itemsContainer.notifyRefreshNeeded();\n            return;\n        }\n\n        const programId = data.ProgramId;\n        // This could be null, not supported by all tv providers\n        const newTimerId = data.Id;\n\n        import('cardBuilder').then(({default: cardBuilder}) => {\n            cardBuilder.onTimerCreated(programId, newTimerId, itemsContainer);\n        });\n    }\n\n    function onSeriesTimerCreated(e, apiClient, data) {\n        const itemsContainer = this;\n        if (getEventsToMonitor(itemsContainer).indexOf('seriestimers') !== -1) {\n            itemsContainer.notifyRefreshNeeded();\n            return;\n        }\n    }\n\n    function onTimerCancelled(e, apiClient, data) {\n        const itemsContainer = this;\n        if (getEventsToMonitor(itemsContainer).indexOf('timers') !== -1) {\n            itemsContainer.notifyRefreshNeeded();\n            return;\n        }\n\n        import('cardBuilder').then(({default: cardBuilder}) => {\n            cardBuilder.onTimerCancelled(data.Id, itemsContainer);\n        });\n    }\n\n    function onSeriesTimerCancelled(e, apiClient, data) {\n        const itemsContainer = this;\n        if (getEventsToMonitor(itemsContainer).indexOf('seriestimers') !== -1) {\n            itemsContainer.notifyRefreshNeeded();\n            return;\n        }\n\n        import('cardBuilder').then(({default: cardBuilder}) => {\n            cardBuilder.onSeriesTimerCancelled(data.Id, itemsContainer);\n        });\n    }\n\n    function onLibraryChanged(e, apiClient, data) {\n        const itemsContainer = this;\n\n        const eventsToMonitor = getEventsToMonitor(itemsContainer);\n        if (eventsToMonitor.indexOf('seriestimers') !== -1 || eventsToMonitor.indexOf('timers') !== -1) {\n            // yes this is an assumption\n            return;\n        }\n\n        const itemsAdded = data.ItemsAdded || [];\n        const itemsRemoved = data.ItemsRemoved || [];\n        if (!itemsAdded.length && !itemsRemoved.length) {\n            return;\n        }\n\n        const parentId = itemsContainer.getAttribute('data-parentid');\n        if (parentId) {\n            const foldersAddedTo = data.FoldersAddedTo || [];\n            const foldersRemovedFrom = data.FoldersRemovedFrom || [];\n            const collectionFolders = data.CollectionFolders || [];\n\n            if (foldersAddedTo.indexOf(parentId) === -1 && foldersRemovedFrom.indexOf(parentId) === -1 && collectionFolders.indexOf(parentId) === -1) {\n                return;\n            }\n        }\n\n        itemsContainer.notifyRefreshNeeded();\n    }\n\n    function onPlaybackStopped(e, stopInfo) {\n        const itemsContainer = this;\n        const state = stopInfo.state;\n\n        const eventsToMonitor = getEventsToMonitor(itemsContainer);\n        if (state.NowPlayingItem && state.NowPlayingItem.MediaType === 'Video') {\n            if (eventsToMonitor.indexOf('videoplayback') !== -1) {\n                itemsContainer.notifyRefreshNeeded(true);\n                return;\n            }\n        } else if (state.NowPlayingItem && state.NowPlayingItem.MediaType === 'Audio') {\n            if (eventsToMonitor.indexOf('audioplayback') !== -1) {\n                itemsContainer.notifyRefreshNeeded(true);\n                return;\n            }\n        }\n    }\n\n    function addNotificationEvent(instance, name, handler, owner) {\n        const localHandler = handler.bind(instance);\n        owner = owner || serverNotifications;\n        events.on(owner, name, localHandler);\n        instance['event_' + name] = localHandler;\n    }\n\n    function removeNotificationEvent(instance, name, owner) {\n        const handler = instance['event_' + name];\n        if (handler) {\n            owner = owner || serverNotifications;\n            events.off(owner, name, handler);\n            instance['event_' + name] = null;\n        }\n    }\n\n    ItemsContainerPrototype.createdCallback = function () {\n        this.classList.add('itemsContainer');\n    };\n\n    ItemsContainerPrototype.attachedCallback = function () {\n        this.addEventListener('click', onClick);\n\n        if (browser.touch) {\n            this.addEventListener('contextmenu', disableEvent);\n        } else {\n            if (this.getAttribute('data-contextmenu') !== 'false') {\n                this.addEventListener('contextmenu', onContextMenu);\n            }\n        }\n\n        if (layoutManager.desktop || layoutManager.mobile) {\n            if (this.getAttribute('data-multiselect') !== 'false') {\n                this.enableMultiSelect(true);\n            }\n        }\n\n        if (layoutManager.tv) {\n            this.classList.add('itemsContainer-tv');\n        }\n\n        itemShortcuts.on(this, getShortcutOptions());\n\n        addNotificationEvent(this, 'UserDataChanged', onUserDataChanged);\n        addNotificationEvent(this, 'TimerCreated', onTimerCreated);\n        addNotificationEvent(this, 'SeriesTimerCreated', onSeriesTimerCreated);\n        addNotificationEvent(this, 'TimerCancelled', onTimerCancelled);\n        addNotificationEvent(this, 'SeriesTimerCancelled', onSeriesTimerCancelled);\n        addNotificationEvent(this, 'LibraryChanged', onLibraryChanged);\n        addNotificationEvent(this, 'playbackstop', onPlaybackStopped, playbackManager);\n\n        if (this.getAttribute('data-dragreorder') === 'true') {\n            this.enableDragReordering(true);\n        }\n    };\n\n    ItemsContainerPrototype.detachedCallback = function () {\n        clearRefreshInterval(this);\n\n        this.enableMultiSelect(false);\n        this.enableDragReordering(false);\n        this.removeEventListener('click', onClick);\n        this.removeEventListener('contextmenu', onContextMenu);\n        this.removeEventListener('contextmenu', disableEvent);\n\n        itemShortcuts.off(this, getShortcutOptions());\n\n        removeNotificationEvent(this, 'UserDataChanged');\n        removeNotificationEvent(this, 'TimerCreated');\n        removeNotificationEvent(this, 'SeriesTimerCreated');\n        removeNotificationEvent(this, 'TimerCancelled');\n        removeNotificationEvent(this, 'SeriesTimerCancelled');\n        removeNotificationEvent(this, 'LibraryChanged');\n        removeNotificationEvent(this, 'playbackstop', playbackManager);\n\n        this.fetchData = null;\n        this.getItemsHtml = null;\n        this.parentContainer = null;\n    };\n\n    ItemsContainerPrototype.pause = function () {\n        clearRefreshInterval(this, true);\n        this.paused = true;\n    };\n\n    ItemsContainerPrototype.resume = function (options) {\n        this.paused = false;\n\n        const refreshIntervalEndTime = this.refreshIntervalEndTime;\n        if (refreshIntervalEndTime) {\n            const remainingMs = refreshIntervalEndTime - new Date().getTime();\n            if (remainingMs > 0 && !this.needsRefresh) {\n                resetRefreshInterval(this, remainingMs);\n            } else {\n                this.needsRefresh = true;\n                this.refreshIntervalEndTime = null;\n            }\n        }\n\n        if (this.needsRefresh || (options && options.refresh)) {\n            return this.refreshItems();\n        }\n\n        return Promise.resolve();\n    };\n\n    ItemsContainerPrototype.refreshItems = function () {\n        if (!this.fetchData) {\n            return Promise.resolve();\n        }\n\n        if (this.paused) {\n            this.needsRefresh = true;\n            return Promise.resolve();\n        }\n\n        this.needsRefresh = false;\n\n        return this.fetchData().then(onDataFetched.bind(this));\n    };\n\n    ItemsContainerPrototype.notifyRefreshNeeded = function (isInForeground) {\n        if (this.paused) {\n            this.needsRefresh = true;\n            return;\n        }\n\n        const timeout = this.refreshTimeout;\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        if (isInForeground === true) {\n            this.refreshItems();\n        } else {\n            this.refreshTimeout = setTimeout(this.refreshItems.bind(this), 10000);\n        }\n    };\n\n    function clearRefreshInterval(itemsContainer, isPausing) {\n        if (itemsContainer.refreshInterval) {\n            clearInterval(itemsContainer.refreshInterval);\n            itemsContainer.refreshInterval = null;\n\n            if (!isPausing) {\n                itemsContainer.refreshIntervalEndTime = null;\n            }\n        }\n    }\n\n    function resetRefreshInterval(itemsContainer, intervalMs) {\n        clearRefreshInterval(itemsContainer);\n\n        if (!intervalMs) {\n            intervalMs = parseInt(itemsContainer.getAttribute('data-refreshinterval') || '0');\n        }\n\n        if (intervalMs) {\n            itemsContainer.refreshInterval = setInterval(itemsContainer.notifyRefreshNeeded.bind(itemsContainer), intervalMs);\n            itemsContainer.refreshIntervalEndTime = new Date().getTime() + intervalMs;\n        }\n    }\n\n    function onDataFetched(result) {\n        const items = result.Items || result;\n\n        const parentContainer = this.parentContainer;\n        if (parentContainer) {\n            if (items.length) {\n                parentContainer.classList.remove('hide');\n            } else {\n                parentContainer.classList.add('hide');\n            }\n        }\n\n        const activeElement = document.activeElement;\n        let focusId;\n        let hasActiveElement;\n\n        if (this.contains(activeElement)) {\n            hasActiveElement = true;\n            focusId = activeElement.getAttribute('data-id');\n        }\n\n        this.innerHTML = this.getItemsHtml(items);\n\n        imageLoader.lazyChildren(this);\n\n        if (hasActiveElement) {\n            setFocus(this, focusId);\n        }\n\n        resetRefreshInterval(this);\n\n        if (this.afterRefresh) {\n            this.afterRefresh(result);\n        }\n    }\n\n    function setFocus(itemsContainer, focusId) {\n        if (focusId) {\n            const newElement = itemsContainer.querySelector('[data-id=\"' + focusId + '\"]');\n            if (newElement) {\n                try {\n                    focusManager.focus(newElement);\n                    return;\n                } catch (err) {\n                    console.error(err);\n                }\n            }\n        }\n\n        focusManager.autoFocus(itemsContainer);\n    }\n\n    document.registerElement('emby-itemscontainer', {\n        prototype: ItemsContainerPrototype,\n        extends: 'div'\n    });\n\n/* eslint-enable indent */\n"]}