{"version":3,"sources":["controllers/livetvstatus.js"],"names":["define","_require","_exports","_jQuery","_globalize","_taskbutton","_dom","_layoutManager","_loading","_browser","_listViewStyle","_flexStyles","_embyItemscontainer","_cardStyle","_materialIcons","_embyButton","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","value","_default","document","on","page","this","addDevice","button","Dashboard","navigate","submitAddDeviceForm","querySelector","close","loading","show","ApiClient","ajax","type","url","getUrl","data","JSON","stringify","Type","val","Url","contentType","then","reload","alert","message","globalize","translate","addProvider","menuItems","push","name","id","Promise","_resolve","_reject","imported","_ref5","items","positionTo","callback","getProviderConfigurationUrl","addEventListener","onDevicesListClick","mode","progressElem","taskKey","enableFocusTransform","browser","slow","edge","getDeviceHtml","device","cssClass","html","layoutManager","tv","Id","FriendlyName","getTunerName","providerId","toLowerCase","getNamedConfiguration","config","renderDevices","devices","innerHTML","map","join","TunerHosts","renderProviders","providers","length","i","provider","getProviderName","Path","ListingsId","elem","getAttribute","showProviderOptions","_ref2","deleteProvider","_ref4","confirm","mapChannels","_ref3","channelMapper","serverId","serverInfo","ListingProviders","hide","showDeviceMenu","tunerDeviceId","_ref6","deleteDevice","_ref","dom","parentWithClass","e","card","target","btnCardOptions"],"mappings":"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","file":"livetvstatus.js","sourcesContent":["import $ from 'jQuery';\nimport globalize from 'globalize';\nimport taskButton from 'scripts/taskbutton';\nimport dom from 'dom';\nimport layoutManager from 'layoutManager';\nimport loading from 'loading';\nimport browser from 'browser';\nimport 'listViewStyle';\nimport 'flexStyles';\nimport 'emby-itemscontainer';\nimport 'cardStyle';\nimport 'material-icons';\nimport 'emby-button';\n\nconst enableFocusTransform = !browser.slow && !browser.edge;\n\nfunction getDeviceHtml(device) {\n    const padderClass = 'cardPadder-backdrop';\n    let cssClass = 'card scalableCard backdropCard backdropCard-scalable';\n    const cardBoxCssClass = 'cardBox visualCardBox';\n    let html = '';\n\n    // TODO move card creation code to Card component\n\n    if (layoutManager.tv) {\n        cssClass += ' show-focus';\n\n        if (enableFocusTransform) {\n            cssClass += ' show-animation';\n        }\n    }\n\n    html += '<div type=\"button\" class=\"' + cssClass + '\" data-id=\"' + device.Id + '\">';\n    html += '<div class=\"' + cardBoxCssClass + '\">';\n    html += '<div class=\"cardScalable visualCardBox-cardScalable\">';\n    html += '<div class=\"' + padderClass + '\"></div>';\n    html += '<div class=\"cardContent searchImage\">';\n    html += '<div class=\"cardImageContainer coveredImage\"><span class=\"cardImageIcon material-icons dvr\"></span></div>';\n    html += '</div>';\n    html += '</div>';\n    html += '<div class=\"cardFooter visualCardBox-cardFooter\">';\n    html += '<button is=\"paper-icon-button-light\" class=\"itemAction btnCardOptions autoSize\" data-action=\"menu\"><span class=\"material-icons more_vert\"></span></button>';\n    html += '<div class=\"cardText\">' + (device.FriendlyName || getTunerName(device.Type)) + '</div>';\n    html += '<div class=\"cardText cardText-secondary\">';\n    html += device.Url || '&nbsp;';\n    html += '</div>';\n    html += '</div>';\n    html += '</div>';\n    return html += '</div>';\n}\n\nfunction renderDevices(page, devices) {\n    page.querySelector('.devicesList').innerHTML = devices.map(getDeviceHtml).join('');\n}\n\nfunction deleteDevice(page, id) {\n    const message = globalize.translate('MessageConfirmDeleteTunerDevice');\n\n    import('confirm').then(({default: confirm}) => {\n        confirm(message, globalize.translate('HeaderDeleteDevice')).then(function () {\n            loading.show();\n            ApiClient.ajax({\n                type: 'DELETE',\n                url: ApiClient.getUrl('LiveTv/TunerHosts', {\n                    Id: id\n                })\n            }).then(function () {\n                reload(page);\n            });\n        });\n    });\n}\n\nfunction reload(page) {\n    loading.show();\n    ApiClient.getNamedConfiguration('livetv').then(function (config) {\n        renderDevices(page, config.TunerHosts);\n        renderProviders(page, config.ListingProviders);\n    });\n    loading.hide();\n}\n\nfunction submitAddDeviceForm(page) {\n    page.querySelector('.dlgAddDevice').close();\n    loading.show();\n    ApiClient.ajax({\n        type: 'POST',\n        url: ApiClient.getUrl('LiveTv/TunerHosts'),\n        data: JSON.stringify({\n            Type: $('#selectTunerDeviceType', page).val(),\n            Url: $('#txtDevicePath', page).val()\n        }),\n        contentType: 'application/json'\n    }).then(function () {\n        reload(page);\n    }, function () {\n        Dashboard.alert({\n            message: globalize.translate('ErrorAddingTunerDevice')\n        });\n    });\n}\n\nfunction renderProviders(page, providers) {\n    let html = '';\n\n    if (providers.length) {\n        html += '<div class=\"paperList\">';\n\n        for (let i = 0, length = providers.length; i < length; i++) {\n            const provider = providers[i];\n            html += '<div class=\"listItem\">';\n            html += '<span class=\"listItemIcon material-icons dvr\"></span>';\n            html += '<div class=\"listItemBody two-line\">';\n            html += '<a is=\"emby-linkbutton\" style=\"display:block;padding:0;margin:0;text-align:left;\" class=\"clearLink\" href=\"' + getProviderConfigurationUrl(provider.Type) + '&id=' + provider.Id + '\">';\n            html += '<h3 class=\"listItemBodyText\">';\n            html += getProviderName(provider.Type);\n            html += '</h3>';\n            html += '<div class=\"listItemBodyText secondary\">';\n            html += provider.Path || provider.ListingsId || '';\n            html += '</div>';\n            html += '</a>';\n            html += '</div>';\n            html += '<button type=\"button\" is=\"paper-icon-button-light\" class=\"btnOptions\" data-id=\"' + provider.Id + '\"><span class=\"material-icons listItemAside more_vert\"></span></button>';\n            html += '</div>';\n        }\n\n        html += '</div>';\n    }\n\n    const elem = $('.providerList', page).html(html);\n    $('.btnOptions', elem).on('click', function () {\n        const id = this.getAttribute('data-id');\n        showProviderOptions(page, id, this);\n    });\n}\n\nfunction showProviderOptions(page, providerId, button) {\n    const items = [];\n    items.push({\n        name: globalize.translate('Delete'),\n        id: 'delete'\n    });\n    items.push({\n        name: globalize.translate('MapChannels'),\n        id: 'map'\n    });\n\n    import('actionsheet').then(({default: actionsheet}) => {\n        actionsheet.show({\n            items: items,\n            positionTo: button\n        }).then(function (id) {\n            switch (id) {\n                case 'delete':\n                    deleteProvider(page, providerId);\n                    break;\n\n                case 'map':\n                    mapChannels(page, providerId);\n            }\n        });\n    });\n}\n\nfunction mapChannels(page, providerId) {\n    import('components/channelMapper/channelMapper').then(({default: channelMapper}) => {\n        new channelMapper({\n            serverId: ApiClient.serverInfo().Id,\n            providerId: providerId\n        }).show();\n    });\n}\n\nfunction deleteProvider(page, id) {\n    const message = globalize.translate('MessageConfirmDeleteGuideProvider');\n\n    import('confirm').then(({default: confirm}) => {\n        confirm(message, globalize.translate('HeaderDeleteProvider')).then(function () {\n            loading.show();\n            ApiClient.ajax({\n                type: 'DELETE',\n                url: ApiClient.getUrl('LiveTv/ListingProviders', {\n                    Id: id\n                })\n            }).then(function () {\n                reload(page);\n            }, function () {\n                reload(page);\n            });\n        });\n    });\n}\n\nfunction getTunerName(providerId) {\n    switch (providerId = providerId.toLowerCase()) {\n        case 'm3u':\n            return 'M3U';\n        case 'hdhomerun':\n            return 'HDHomeRun';\n        case 'hauppauge':\n            return 'Hauppauge';\n        case 'satip':\n            return 'DVB';\n        default:\n            return 'Unknown';\n    }\n}\n\nfunction getProviderName(providerId) {\n    switch (providerId = providerId.toLowerCase()) {\n        case 'schedulesdirect':\n            return 'Schedules Direct';\n        case 'xmltv':\n            return 'XMLTV';\n        default:\n            return 'Unknown';\n    }\n}\n\nfunction getProviderConfigurationUrl(providerId) {\n    switch (providerId = providerId.toLowerCase()) {\n        case 'xmltv':\n            return 'livetvguideprovider.html?type=xmltv';\n        case 'schedulesdirect':\n            return 'livetvguideprovider.html?type=schedulesdirect';\n    }\n}\n\nfunction addProvider(button) {\n    const menuItems = [];\n    menuItems.push({\n        name: 'Schedules Direct',\n        id: 'SchedulesDirect'\n    });\n    menuItems.push({\n        name: 'XMLTV',\n        id: 'xmltv'\n    });\n\n    import('actionsheet').then(({default: actionsheet}) => {\n        actionsheet.show({\n            items: menuItems,\n            positionTo: button,\n            callback: function (id) {\n                Dashboard.navigate(getProviderConfigurationUrl(id));\n            }\n        });\n    });\n}\n\nfunction addDevice(button) {\n    Dashboard.navigate('livetvtuner.html');\n}\n\nfunction showDeviceMenu(button, tunerDeviceId) {\n    const items = [];\n    items.push({\n        name: globalize.translate('Delete'),\n        id: 'delete'\n    });\n    items.push({\n        name: globalize.translate('Edit'),\n        id: 'edit'\n    });\n\n    import('actionsheet').then(({default: actionsheet}) => {\n        actionsheet.show({\n            items: items,\n            positionTo: button\n        }).then(function (id) {\n            switch (id) {\n                case 'delete':\n                    deleteDevice(dom.parentWithClass(button, 'page'), tunerDeviceId);\n                    break;\n\n                case 'edit':\n                    Dashboard.navigate('livetvtuner.html?id=' + tunerDeviceId);\n            }\n        });\n    });\n}\n\nfunction onDevicesListClick(e) {\n    const card = dom.parentWithClass(e.target, 'card');\n\n    if (card) {\n        const id = card.getAttribute('data-id');\n        const btnCardOptions = dom.parentWithClass(e.target, 'btnCardOptions');\n\n        if (btnCardOptions) {\n            showDeviceMenu(btnCardOptions, id);\n        } else {\n            Dashboard.navigate('livetvtuner.html?id=' + id);\n        }\n    }\n}\n\nexport default function () {\n    $(document).on('pageinit', '#liveTvStatusPage', function () {\n        const page = this;\n        $('.btnAddDevice', page).on('click', function () {\n            addDevice(this);\n        });\n        $('.formAddDevice', page).on('submit', function () {\n            submitAddDeviceForm(page);\n            return false;\n        });\n        $('.btnAddProvider', page).on('click', function () {\n            addProvider(this);\n        });\n        page.querySelector('.devicesList').addEventListener('click', onDevicesListClick);\n    }).on('pageshow', '#liveTvStatusPage', function () {\n        const page = this;\n        reload(page);\n        taskButton({\n            mode: 'on',\n            progressElem: page.querySelector('.refreshGuideProgress'),\n            taskKey: 'RefreshGuide',\n            button: page.querySelector('.btnRefresh')\n        });\n    }).on('pagehide', '#liveTvStatusPage', function () {\n        const page = this;\n        taskButton({\n            mode: 'off',\n            progressElem: page.querySelector('.refreshGuideProgress'),\n            taskKey: 'RefreshGuide',\n            button: page.querySelector('.btnRefresh')\n        });\n    });\n}\n"]}