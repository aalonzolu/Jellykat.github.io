{"version":3,"sources":["controllers/movies/movietrailers.js"],"names":["define","_require","_exports","_loading","_events","_libraryBrowser","_imageLoader","_alphaPicker","_listView","_cardBuilder","userSettings","_globalize","_embyItemscontainer","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","minLen","_arrayLikeToArray","n","toString","slice","name","from","test","length","i","F","s","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","_default","view","params","tabContent","_this","this","getPageData","context","getSavedQueryKey","pageData","data","query","SortBy","SortOrder","IncludeItemTypes","Recursive","Fields","ImageTypeLimit","EnableImageTypes","StartIndex","libraryBrowser","getSavedView","libraryPageSize","loadSavedQueryValues","getQuery","savedQueryKey","reloadItems","loading","show","isLoading","ApiClient","getItems","getCurrentUserId","then","result","onNextPageClick","Limit","onPreviousPageClick","Math","max","window","scrollTo","updateFilterControls","html","pagingHtml","getQueryPagingHtml","startIndex","limit","totalRecordCount","TotalRecordCount","showLimit","updatePageSizeSetting","addLayoutButton","sortButton","filterButton","viewStyle","getCurrentViewStyle","cardBuilder","getCardsHtml","items","Items","shape","preferThumb","overlayPlayButton","cardLayout","showTitle","showYear","centerText","preferBanner","listView","getListViewHtml","sortBy","_step","elems","querySelectorAll","_iterator","innerHTML","_step2","_iterator2","addEventListener","_step3","_iterator3","globalize","translate","itemsContainer","querySelector","imageLoader","lazyChildren","saveQueryValues","hide","alphaPicker","NameStartsWithOrGreater","showFilterMenu","Promise","_resolve","_reject","imported","_ref","filterDialog","filterDialogFactory","mode","serverId","events","on","initPage","alphaPickerElement","newValue","detail","AlphaPicker","element","valueChangeEvent","classList","add","showSortMenu","id","callback","button","target","renderTab","destroy"],"mappings":"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","file":"movietrailers.js","sourcesContent":["import loading from 'loading';\nimport events from 'events';\nimport libraryBrowser from 'libraryBrowser';\nimport imageLoader from 'imageLoader';\nimport AlphaPicker from 'alphaPicker';\nimport listView from 'listView';\nimport cardBuilder from 'cardBuilder';\nimport * as userSettings from 'userSettings';\nimport globalize from 'globalize';\nimport 'emby-itemscontainer';\n\n/* eslint-disable indent */\n\n    export default function (view, params, tabContent) {\n        function getPageData(context) {\n            const key = getSavedQueryKey(context);\n            let pageData = data[key];\n\n            if (!pageData) {\n                pageData = data[key] = {\n                    query: {\n                        SortBy: 'SortName',\n                        SortOrder: 'Ascending',\n                        IncludeItemTypes: 'Trailer',\n                        Recursive: true,\n                        Fields: 'PrimaryImageAspectRatio,SortName,BasicSyncInfo',\n                        ImageTypeLimit: 1,\n                        EnableImageTypes: 'Primary,Backdrop,Banner,Thumb',\n                        StartIndex: 0\n                    },\n                    view: libraryBrowser.getSavedView(key) || 'Poster'\n                };\n\n                if (userSettings.libraryPageSize() > 0) {\n                    pageData.query['Limit'] = userSettings.libraryPageSize();\n                }\n\n                libraryBrowser.loadSavedQueryValues(key, pageData.query);\n            }\n\n            return pageData;\n        }\n\n        function getQuery(context) {\n            return getPageData(context).query;\n        }\n\n        function getSavedQueryKey(context) {\n            if (!context.savedQueryKey) {\n                context.savedQueryKey = libraryBrowser.getSavedQueryKey('trailers');\n            }\n\n            return context.savedQueryKey;\n        }\n\n        const reloadItems = () => {\n            loading.show();\n            isLoading = true;\n            const query = getQuery(tabContent);\n            ApiClient.getItems(ApiClient.getCurrentUserId(), query).then((result) => {\n                function onNextPageClick() {\n                    if (isLoading) {\n                        return;\n                    }\n\n                    if (userSettings.libraryPageSize() > 0) {\n                        query.StartIndex += query.Limit;\n                    }\n                    reloadItems();\n                }\n\n                function onPreviousPageClick() {\n                    if (isLoading) {\n                        return;\n                    }\n\n                    if (userSettings.libraryPageSize() > 0) {\n                        query.StartIndex = Math.max(0, query.StartIndex - query.Limit);\n                    }\n                    reloadItems();\n                }\n\n                window.scrollTo(0, 0);\n                updateFilterControls(tabContent);\n                const pagingHtml = libraryBrowser.getQueryPagingHtml({\n                    startIndex: query.StartIndex,\n                    limit: query.Limit,\n                    totalRecordCount: result.TotalRecordCount,\n                    showLimit: false,\n                    updatePageSizeSetting: false,\n                    addLayoutButton: false,\n                    sortButton: false,\n                    filterButton: false\n                });\n                let html;\n                const viewStyle = this.getCurrentViewStyle();\n\n                if (viewStyle == 'Thumb') {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: 'backdrop',\n                        preferThumb: true,\n                        context: 'movies',\n                        overlayPlayButton: true\n                    });\n                } else if (viewStyle == 'ThumbCard') {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: 'backdrop',\n                        preferThumb: true,\n                        context: 'movies',\n                        cardLayout: true,\n                        showTitle: true,\n                        showYear: true,\n                        centerText: true\n                    });\n                } else if (viewStyle == 'Banner') {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: 'banner',\n                        preferBanner: true,\n                        context: 'movies'\n                    });\n                } else if (viewStyle == 'List') {\n                    html = listView.getListViewHtml({\n                        items: result.Items,\n                        context: 'movies',\n                        sortBy: query.SortBy\n                    });\n                } else if (viewStyle == 'PosterCard') {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: 'portrait',\n                        context: 'movies',\n                        showTitle: true,\n                        showYear: true,\n                        cardLayout: true,\n                        centerText: true\n                    });\n                } else {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: 'portrait',\n                        context: 'movies',\n                        centerText: true,\n                        overlayPlayButton: true,\n                        showTitle: true,\n                        showYear: true\n                    });\n                }\n\n                let elems = tabContent.querySelectorAll('.paging');\n\n                for (const elem of elems) {\n                    elem.innerHTML = pagingHtml;\n                }\n\n                elems = tabContent.querySelectorAll('.btnNextPage');\n                for (const elem of elems) {\n                    elem.addEventListener('click', onNextPageClick);\n                }\n\n                elems = tabContent.querySelectorAll('.btnPreviousPage');\n                for (const elem of elems) {\n                    elem.addEventListener('click', onPreviousPageClick);\n                }\n\n                if (!result.Items.length) {\n                    html = '';\n\n                    html += '<div class=\"noItemsMessage centerMessage\">';\n                    html += '<h1>' + globalize.translate('MessageNothingHere') + '</h1>';\n                    html += '<p>' + globalize.translate('MessageNoTrailersFound') + '</p>';\n                    html += '</div>';\n                }\n\n                const itemsContainer = tabContent.querySelector('.itemsContainer');\n                itemsContainer.innerHTML = html;\n                imageLoader.lazyChildren(itemsContainer);\n                libraryBrowser.saveQueryValues(getSavedQueryKey(tabContent), query);\n                loading.hide();\n                isLoading = false;\n            });\n        };\n\n        const updateFilterControls = (tabContent) => {\n            const query = getQuery(tabContent);\n            this.alphaPicker.value(query.NameStartsWithOrGreater);\n        };\n\n        const data = {};\n        let isLoading = false;\n\n        this.showFilterMenu = function () {\n            import('components/filterdialog/filterdialog').then(({default: filterDialogFactory}) => {\n                const filterDialog = new filterDialogFactory({\n                    query: getQuery(tabContent),\n                    mode: 'movies',\n                    serverId: ApiClient.serverId()\n                });\n                events.on(filterDialog, 'filterchange', function () {\n                    getQuery(tabContent).StartIndex = 0;\n                    reloadItems();\n                });\n                filterDialog.show();\n            });\n        };\n\n        this.getCurrentViewStyle = function () {\n            return getPageData(tabContent).view;\n        };\n\n        const initPage = (tabContent) => {\n            const alphaPickerElement = tabContent.querySelector('.alphaPicker');\n            const itemsContainer = tabContent.querySelector('.itemsContainer');\n            alphaPickerElement.addEventListener('alphavaluechanged', function (e) {\n                const newValue = e.detail.value;\n                const query = getQuery(tabContent);\n                query.NameStartsWithOrGreater = newValue;\n                query.StartIndex = 0;\n                reloadItems();\n            });\n            this.alphaPicker = new AlphaPicker({\n                element: alphaPickerElement,\n                valueChangeEvent: 'click'\n            });\n\n            tabContent.querySelector('.alphaPicker').classList.add('alphabetPicker-right');\n            alphaPickerElement.classList.add('alphaPicker-fixed-right');\n            itemsContainer.classList.add('padded-right-withalphapicker');\n\n            tabContent.querySelector('.btnFilter').addEventListener('click', function () {\n                this.showFilterMenu();\n            });\n            tabContent.querySelector('.btnSort').addEventListener('click', function (e) {\n                libraryBrowser.showSortMenu({\n                    items: [{\n                        name: globalize.translate('OptionNameSort'),\n                        id: 'SortName'\n                    }, {\n                        name: globalize.translate('OptionImdbRating'),\n                        id: 'CommunityRating,SortName'\n                    }, {\n                        name: globalize.translate('OptionDateAdded'),\n                        id: 'DateCreated,SortName'\n                    }, {\n                        name: globalize.translate('OptionDatePlayed'),\n                        id: 'DatePlayed,SortName'\n                    }, {\n                        name: globalize.translate('OptionParentalRating'),\n                        id: 'OfficialRating,SortName'\n                    }, {\n                        name: globalize.translate('OptionPlayCount'),\n                        id: 'PlayCount,SortName'\n                    }, {\n                        name: globalize.translate('OptionReleaseDate'),\n                        id: 'PremiereDate,SortName'\n                    }],\n                    callback: function () {\n                        getQuery(tabContent).StartIndex = 0;\n                        reloadItems();\n                    },\n                    query: getQuery(tabContent),\n                    button: e.target\n                });\n            });\n        };\n\n        initPage(tabContent);\n\n        this.renderTab = function () {\n            reloadItems();\n            updateFilterControls(tabContent);\n        };\n\n        this.destroy = function () {};\n    }\n\n/* eslint-enable indent */\n"]}