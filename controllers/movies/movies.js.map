{"version":3,"sources":["controllers/movies/movies.js"],"names":["define","_require","_exports","_loading","userSettings","_events","_libraryBrowser","_alphaPicker","_listView","_cardBuilder","_globalize","_embyItemscontainer","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","minLen","_arrayLikeToArray","n","toString","slice","name","from","test","length","i","F","s","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","_default","view","params","tabContent","options","_this","this","onViewStyleChange","getCurrentViewStyle","itemsContainer","classList","add","remove","innerHTML","updateFilterControls","alphaPicker","query","NameStartsWithOrGreater","fetchData","isLoading","loading","show","ApiClient","getItems","getCurrentUserId","afterRefresh","result","onNextPageClick","libraryPageSize","StartIndex","Limit","refreshItems","onPreviousPageClick","Math","max","window","scrollTo","_step","pagingHtml","libraryBrowser","getQueryPagingHtml","startIndex","limit","totalRecordCount","TotalRecordCount","showLimit","updatePageSizeSetting","addLayoutButton","sortButton","filterButton","_iterator","querySelectorAll","_step2","_iterator2","addEventListener","_step3","_iterator3","hide","Promise","_resolve","_reject","imported","then","_ref","autoFocus","getItemsHtml","items","viewStyle","cardBuilder","getCardsHtml","shape","preferThumb","context","lazy","overlayPlayButton","showTitle","showYear","centerText","cardLayout","preferBanner","listView","getListViewHtml","sortBy","SortBy","querySelector","savedQueryKey","topParentId","mode","savedViewKey","SortOrder","IncludeItemTypes","Recursive","Fields","ImageTypeLimit","EnableImageTypes","ParentId","IsFavorite","loadQuerySettings","showFilterMenu","_ref2","filterDialog","filterDialogFactory","serverId","events","on","initTab","initPage","alphaPickerElement","newValue","detail","AlphaPicker","element","valueChangeEvent","btnFilter","btnSort","showSortMenu","globalize","translate","id","callback","saveQuerySettings","button","target","btnSelectView","showLayoutMenu","split","renderTab","destroy"],"mappings":"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","file":"movies.js","sourcesContent":["import loading from 'loading';\nimport * as userSettings from 'userSettings';\nimport events from 'events';\nimport libraryBrowser from 'libraryBrowser';\nimport AlphaPicker from 'alphaPicker';\nimport listView from 'listView';\nimport cardBuilder from 'cardBuilder';\nimport globalize from 'globalize';\nimport 'emby-itemscontainer';\n\n/* eslint-disable indent */\n\n    export default function (view, params, tabContent, options) {\n        const onViewStyleChange = () => {\n            if (this.getCurrentViewStyle() == 'List') {\n                itemsContainer.classList.add('vertical-list');\n                itemsContainer.classList.remove('vertical-wrap');\n            } else {\n                itemsContainer.classList.remove('vertical-list');\n                itemsContainer.classList.add('vertical-wrap');\n            }\n\n            itemsContainer.innerHTML = '';\n        };\n\n        const updateFilterControls = () => {\n            if (this.alphaPicker) {\n                this.alphaPicker.value(query.NameStartsWithOrGreater);\n            }\n        };\n\n        function fetchData() {\n            isLoading = true;\n            loading.show();\n            return ApiClient.getItems(ApiClient.getCurrentUserId(), query);\n        }\n\n        function afterRefresh(result) {\n            function onNextPageClick() {\n                if (isLoading) {\n                    return;\n                }\n\n                if (userSettings.libraryPageSize() > 0) {\n                    query.StartIndex += query.Limit;\n                }\n                itemsContainer.refreshItems();\n            }\n\n            function onPreviousPageClick() {\n                if (isLoading) {\n                    return;\n                }\n\n                if (userSettings.libraryPageSize() > 0) {\n                    query.StartIndex = Math.max(0, query.StartIndex - query.Limit);\n                }\n                itemsContainer.refreshItems();\n            }\n\n            window.scrollTo(0, 0);\n            updateFilterControls();\n            const pagingHtml = libraryBrowser.getQueryPagingHtml({\n                startIndex: query.StartIndex,\n                limit: query.Limit,\n                totalRecordCount: result.TotalRecordCount,\n                showLimit: false,\n                updatePageSizeSetting: false,\n                addLayoutButton: false,\n                sortButton: false,\n                filterButton: false\n            });\n\n            for (const elem of tabContent.querySelectorAll('.paging')) {\n                elem.innerHTML = pagingHtml;\n            }\n\n            for (const elem of tabContent.querySelectorAll('.btnNextPage')) {\n                elem.addEventListener('click', onNextPageClick);\n            }\n\n            for (const elem of tabContent.querySelectorAll('.btnPreviousPage')) {\n                elem.addEventListener('click', onPreviousPageClick);\n            }\n\n            isLoading = false;\n            loading.hide();\n\n            import('autoFocuser').then(({default: autoFocuser}) => {\n                autoFocuser.autoFocus(tabContent);\n            });\n        }\n\n        const getItemsHtml = (items) => {\n            let html;\n            const viewStyle = this.getCurrentViewStyle();\n\n            if (viewStyle == 'Thumb') {\n                html = cardBuilder.getCardsHtml({\n                    items: items,\n                    shape: 'backdrop',\n                    preferThumb: true,\n                    context: 'movies',\n                    lazy: true,\n                    overlayPlayButton: true,\n                    showTitle: true,\n                    showYear: true,\n                    centerText: true\n                });\n            } else if (viewStyle == 'ThumbCard') {\n                html = cardBuilder.getCardsHtml({\n                    items: items,\n                    shape: 'backdrop',\n                    preferThumb: true,\n                    context: 'movies',\n                    lazy: true,\n                    cardLayout: true,\n                    showTitle: true,\n                    showYear: true,\n                    centerText: true\n                });\n            } else if (viewStyle == 'Banner') {\n                html = cardBuilder.getCardsHtml({\n                    items: items,\n                    shape: 'banner',\n                    preferBanner: true,\n                    context: 'movies',\n                    lazy: true\n                });\n            } else if (viewStyle == 'List') {\n                html = listView.getListViewHtml({\n                    items: items,\n                    context: 'movies',\n                    sortBy: query.SortBy\n                });\n            } else if (viewStyle == 'PosterCard') {\n                html = cardBuilder.getCardsHtml({\n                    items: items,\n                    shape: 'portrait',\n                    context: 'movies',\n                    showTitle: true,\n                    showYear: true,\n                    centerText: true,\n                    lazy: true,\n                    cardLayout: true\n                });\n            } else {\n                html = cardBuilder.getCardsHtml({\n                    items: items,\n                    shape: 'portrait',\n                    context: 'movies',\n                    overlayPlayButton: true,\n                    showTitle: true,\n                    showYear: true,\n                    centerText: true\n                });\n            }\n\n            return html;\n        };\n\n        const initPage = (tabContent) => {\n            itemsContainer.fetchData = fetchData;\n            itemsContainer.getItemsHtml = getItemsHtml;\n            itemsContainer.afterRefresh = afterRefresh;\n            let alphaPickerElement = tabContent.querySelector('.alphaPicker');\n\n            if (alphaPickerElement) {\n                alphaPickerElement.addEventListener('alphavaluechanged', function (e) {\n                    let newValue = e.detail.value;\n                    query.NameStartsWithOrGreater = newValue;\n                    query.StartIndex = 0;\n                    itemsContainer.refreshItems();\n                });\n                this.alphaPicker = new AlphaPicker({\n                    element: alphaPickerElement,\n                    valueChangeEvent: 'click'\n                });\n\n                tabContent.querySelector('.alphaPicker').classList.add('alphabetPicker-right');\n                alphaPickerElement.classList.add('alphaPicker-fixed-right');\n                itemsContainer.classList.add('padded-right-withalphapicker');\n            }\n\n            const btnFilter = tabContent.querySelector('.btnFilter');\n\n            if (btnFilter) {\n                btnFilter.addEventListener('click', () => {\n                    this.showFilterMenu();\n                });\n            }\n            const btnSort = tabContent.querySelector('.btnSort');\n\n            if (btnSort) {\n                btnSort.addEventListener('click', function (e) {\n                    libraryBrowser.showSortMenu({\n                        items: [{\n                            name: globalize.translate('OptionNameSort'),\n                            id: 'SortName,ProductionYear'\n                        }, {\n                            name: globalize.translate('OptionImdbRating'),\n                            id: 'CommunityRating,SortName,ProductionYear'\n                        }, {\n                            name: globalize.translate('OptionCriticRating'),\n                            id: 'CriticRating,SortName,ProductionYear'\n                        }, {\n                            name: globalize.translate('OptionDateAdded'),\n                            id: 'DateCreated,SortName,ProductionYear'\n                        }, {\n                            name: globalize.translate('OptionDatePlayed'),\n                            id: 'DatePlayed,SortName,ProductionYear'\n                        }, {\n                            name: globalize.translate('OptionParentalRating'),\n                            id: 'OfficialRating,SortName,ProductionYear'\n                        }, {\n                            name: globalize.translate('OptionPlayCount'),\n                            id: 'PlayCount,SortName,ProductionYear'\n                        }, {\n                            name: globalize.translate('OptionReleaseDate'),\n                            id: 'PremiereDate,SortName,ProductionYear'\n                        }, {\n                            name: globalize.translate('OptionRuntime'),\n                            id: 'Runtime,SortName,ProductionYear'\n                        }],\n                        callback: function () {\n                            query.StartIndex = 0;\n                            userSettings.saveQuerySettings(savedQueryKey, query);\n                            itemsContainer.refreshItems();\n                        },\n                        query: query,\n                        button: e.target\n                    });\n                });\n            }\n            const btnSelectView = tabContent.querySelector('.btnSelectView');\n            btnSelectView.addEventListener('click', function (e) {\n                libraryBrowser.showLayoutMenu(e.target, this.getCurrentViewStyle, 'Banner,List,Poster,PosterCard,Thumb,ThumbCard'.split(','));\n            });\n            btnSelectView.addEventListener('layoutchange', function (e) {\n                let viewStyle = e.detail.viewStyle;\n                userSettings.set(savedViewKey, viewStyle);\n                query.StartIndex = 0;\n                onViewStyleChange();\n                itemsContainer.refreshItems();\n            });\n        };\n\n        let itemsContainer = tabContent.querySelector('.itemsContainer');\n        const savedQueryKey = params.topParentId + '-' + options.mode;\n        const savedViewKey = savedQueryKey + '-view';\n        let query = {\n            SortBy: 'SortName,ProductionYear',\n            SortOrder: 'Ascending',\n            IncludeItemTypes: 'Movie',\n            Recursive: true,\n            Fields: 'PrimaryImageAspectRatio,MediaSourceCount,BasicSyncInfo',\n            ImageTypeLimit: 1,\n            EnableImageTypes: 'Primary,Backdrop,Banner,Thumb',\n            StartIndex: 0,\n            ParentId: params.topParentId\n        };\n\n        if (userSettings.libraryPageSize() > 0) {\n            query['Limit'] = userSettings.libraryPageSize();\n        }\n\n        let isLoading = false;\n\n        if (options.mode === 'favorites') {\n            query.IsFavorite = true;\n        }\n\n        query = userSettings.loadQuerySettings(savedQueryKey, query);\n\n        this.showFilterMenu = function () {\n            import('components/filterdialog/filterdialog').then(({default: filterDialogFactory}) => {\n                let filterDialog = new filterDialogFactory({\n                    query: query,\n                    mode: 'movies',\n                    serverId: ApiClient.serverId()\n                });\n                events.on(filterDialog, 'filterchange', () => {\n                    query.StartIndex = 0;\n                    itemsContainer.refreshItems();\n                });\n                filterDialog.show();\n            });\n        };\n\n        this.getCurrentViewStyle = function () {\n            return userSettings.get(savedViewKey) || 'Poster';\n        };\n\n        this.initTab = function () {\n            initPage(tabContent);\n            onViewStyleChange();\n        };\n\n        this.renderTab = function () {\n            itemsContainer.refreshItems();\n            updateFilterControls();\n        };\n\n        this.destroy = function () {\n            itemsContainer = null;\n        };\n    }\n\n/* eslint-enable indent */\n"]}