{"version":3,"sources":["controllers/movies/moviecollections.js"],"names":["define","_require","_exports","_loading","_libraryBrowser","_imageLoader","_listView","_cardBuilder","userSettings","_globalize","_embyItemscontainer","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","minLen","_arrayLikeToArray","n","toString","slice","name","from","test","length","i","F","s","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","_default","view","params","tabContent","_this","this","getPageData","context","getSavedQueryKey","pageData","data","query","SortBy","SortOrder","IncludeItemTypes","Recursive","Fields","ImageTypeLimit","EnableImageTypes","StartIndex","libraryBrowser","getSavedView","libraryPageSize","ParentId","topParentId","loadSavedQueryValues","getQuery","savedQueryKey","onViewStyleChange","viewStyle","getCurrentViewStyle","itemsContainer","querySelector","classList","add","remove","innerHTML","reloadItems","page","loading","show","isLoading","ApiClient","getItems","getCurrentUserId","then","result","onNextPageClick","Limit","onPreviousPageClick","Math","max","html","window","scrollTo","pagingHtml","getQueryPagingHtml","startIndex","limit","totalRecordCount","TotalRecordCount","showLimit","updatePageSizeSetting","addLayoutButton","sortButton","filterButton","cardBuilder","getCardsHtml","items","Items","shape","preferThumb","overlayPlayButton","centerText","showTitle","lazy","cardLayout","preferBanner","listView","getListViewHtml","sortBy","_step","elems","querySelectorAll","_iterator","_step2","_iterator2","addEventListener","_step3","_iterator3","globalize","translate","imageLoader","lazyChildren","saveQueryValues","hide","Promise","_resolve","_reject","imported","_ref","autoFocus","initPage","showSortMenu","id","callback","button","target","btnSelectView","showLayoutMenu","split","detail","saveViewSetting","_ref2","collectionEditor","serverId","serverInfo","Id","showEditor","renderTab","destroy"],"mappings":"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","file":"moviecollections.js","sourcesContent":["import loading from 'loading';\nimport libraryBrowser from 'libraryBrowser';\nimport imageLoader from 'imageLoader';\nimport listView from 'listView';\nimport cardBuilder from 'cardBuilder';\nimport * as userSettings from 'userSettings';\nimport globalize from 'globalize';\nimport 'emby-itemscontainer';\n\n/* eslint-disable indent */\n\n    export default function (view, params, tabContent) {\n        function getPageData(context) {\n            const key = getSavedQueryKey(context);\n            let pageData = data[key];\n\n            if (!pageData) {\n                pageData = data[key] = {\n                    query: {\n                        SortBy: 'SortName',\n                        SortOrder: 'Ascending',\n                        IncludeItemTypes: 'BoxSet',\n                        Recursive: true,\n                        Fields: 'PrimaryImageAspectRatio,SortName',\n                        ImageTypeLimit: 1,\n                        EnableImageTypes: 'Primary,Backdrop,Banner,Thumb',\n                        StartIndex: 0\n                    },\n                    view: libraryBrowser.getSavedView(key) || 'Poster'\n                };\n\n                if (userSettings.libraryPageSize() > 0) {\n                    pageData.query['Limit'] = userSettings.libraryPageSize();\n                }\n\n                pageData.query.ParentId = params.topParentId;\n                libraryBrowser.loadSavedQueryValues(key, pageData.query);\n            }\n\n            return pageData;\n        }\n\n        function getQuery(context) {\n            return getPageData(context).query;\n        }\n\n        function getSavedQueryKey(context) {\n            if (!context.savedQueryKey) {\n                context.savedQueryKey = libraryBrowser.getSavedQueryKey('moviecollections');\n            }\n\n            return context.savedQueryKey;\n        }\n\n        const onViewStyleChange = () => {\n            const viewStyle = this.getCurrentViewStyle();\n            const itemsContainer = tabContent.querySelector('.itemsContainer');\n\n            if (viewStyle == 'List') {\n                itemsContainer.classList.add('vertical-list');\n                itemsContainer.classList.remove('vertical-wrap');\n            } else {\n                itemsContainer.classList.remove('vertical-list');\n                itemsContainer.classList.add('vertical-wrap');\n            }\n\n            itemsContainer.innerHTML = '';\n        };\n\n        const reloadItems = (page) => {\n            loading.show();\n            isLoading = true;\n            const query = getQuery(page);\n            ApiClient.getItems(ApiClient.getCurrentUserId(), query).then((result) => {\n                function onNextPageClick() {\n                    if (isLoading) {\n                        return;\n                    }\n\n                    if (userSettings.libraryPageSize() > 0) {\n                        query.StartIndex += query.Limit;\n                    }\n                    reloadItems(tabContent);\n                }\n\n                function onPreviousPageClick() {\n                    if (isLoading) {\n                        return;\n                    }\n\n                    if (userSettings.libraryPageSize() > 0) {\n                        query.StartIndex = Math.max(0, query.StartIndex - query.Limit);\n                    }\n                    reloadItems(tabContent);\n                }\n\n                window.scrollTo(0, 0);\n                let html;\n                const pagingHtml = libraryBrowser.getQueryPagingHtml({\n                    startIndex: query.StartIndex,\n                    limit: query.Limit,\n                    totalRecordCount: result.TotalRecordCount,\n                    showLimit: false,\n                    updatePageSizeSetting: false,\n                    addLayoutButton: false,\n                    sortButton: false,\n                    filterButton: false\n                });\n                const viewStyle = this.getCurrentViewStyle();\n                if (viewStyle == 'Thumb') {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: 'backdrop',\n                        preferThumb: true,\n                        context: 'movies',\n                        overlayPlayButton: true,\n                        centerText: true,\n                        showTitle: true\n                    });\n                } else if (viewStyle == 'ThumbCard') {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: 'backdrop',\n                        preferThumb: true,\n                        context: 'movies',\n                        lazy: true,\n                        cardLayout: true,\n                        showTitle: true\n                    });\n                } else if (viewStyle == 'Banner') {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: 'banner',\n                        preferBanner: true,\n                        context: 'movies',\n                        lazy: true\n                    });\n                } else if (viewStyle == 'List') {\n                    html = listView.getListViewHtml({\n                        items: result.Items,\n                        context: 'movies',\n                        sortBy: query.SortBy\n                    });\n                } else if (viewStyle == 'PosterCard') {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: 'auto',\n                        context: 'movies',\n                        showTitle: true,\n                        centerText: false,\n                        cardLayout: true\n                    });\n                } else {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: 'auto',\n                        context: 'movies',\n                        centerText: true,\n                        overlayPlayButton: true,\n                        showTitle: true\n                    });\n                }\n\n                let elems = tabContent.querySelectorAll('.paging');\n\n                for (const elem of elems) {\n                    elem.innerHTML = pagingHtml;\n                }\n\n                elems = tabContent.querySelectorAll('.btnNextPage');\n                for (const elem of elems) {\n                    elem.addEventListener('click', onNextPageClick);\n                }\n\n                elems = tabContent.querySelectorAll('.btnPreviousPage');\n                for (const elem of elems) {\n                    elem.addEventListener('click', onPreviousPageClick);\n                }\n\n                if (!result.Items.length) {\n                    html = '';\n\n                    html += '<div class=\"noItemsMessage centerMessage\">';\n                    html += '<h1>' + globalize.translate('MessageNothingHere') + '</h1>';\n                    html += '<p>' + globalize.translate('MessageNoCollectionsAvailable') + '</p>';\n                    html += '</div>';\n                }\n\n                const itemsContainer = tabContent.querySelector('.itemsContainer');\n                itemsContainer.innerHTML = html;\n                imageLoader.lazyChildren(itemsContainer);\n                libraryBrowser.saveQueryValues(getSavedQueryKey(page), query);\n                loading.hide();\n                isLoading = false;\n\n                import('autoFocuser').then(({default: autoFocuser}) => {\n                    autoFocuser.autoFocus(page);\n                });\n            });\n        };\n\n        const data = {};\n        let isLoading = false;\n\n        this.getCurrentViewStyle = function () {\n            return getPageData(tabContent).view;\n        };\n\n        const initPage = (tabContent) => {\n            tabContent.querySelector('.btnSort').addEventListener('click', function (e) {\n                libraryBrowser.showSortMenu({\n                    items: [{\n                        name: globalize.translate('OptionNameSort'),\n                        id: 'SortName'\n                    }, {\n                        name: globalize.translate('OptionImdbRating'),\n                        id: 'CommunityRating,SortName'\n                    }, {\n                        name: globalize.translate('OptionDateAdded'),\n                        id: 'DateCreated,SortName'\n                    }, {\n                        name: globalize.translate('OptionParentalRating'),\n                        id: 'OfficialRating,SortName'\n                    }, {\n                        name: globalize.translate('OptionReleaseDate'),\n                        id: 'PremiereDate,SortName'\n                    }],\n                    callback: function () {\n                        getQuery(tabContent).StartIndex = 0;\n                        reloadItems(tabContent);\n                    },\n                    query: getQuery(tabContent),\n                    button: e.target\n                });\n            });\n            const btnSelectView = tabContent.querySelector('.btnSelectView');\n            btnSelectView.addEventListener('click', function (e) {\n                libraryBrowser.showLayoutMenu(e.target, this.getCurrentViewStyle(), 'List,Poster,PosterCard,Thumb,ThumbCard'.split(','));\n            });\n            btnSelectView.addEventListener('layoutchange', function (e) {\n                const viewStyle = e.detail.viewStyle;\n                getPageData(tabContent).view = viewStyle;\n                libraryBrowser.saveViewSetting(getSavedQueryKey(tabContent), viewStyle);\n                getQuery(tabContent).StartIndex = 0;\n                onViewStyleChange();\n                reloadItems(tabContent);\n            });\n            tabContent.querySelector('.btnNewCollection').addEventListener('click', () => {\n                import('collectionEditor').then(({default: collectionEditor}) => {\n                    const serverId = ApiClient.serverInfo().Id;\n                    new collectionEditor.showEditor({\n                        items: [],\n                        serverId: serverId\n                    });\n                });\n            });\n        };\n\n        initPage(tabContent);\n        onViewStyleChange();\n\n        this.renderTab = function () {\n            reloadItems(tabContent);\n        };\n\n        this.destroy = function () {};\n    }\n\n/* eslint-enable indent */\n"]}