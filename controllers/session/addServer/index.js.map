{"version":3,"sources":["controllers/session/addServer/index.js"],"names":["define","_require","_exports","_appSettings","_loading","_globalize","_embyButton","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","handleConnectionResult","page","result","loading","hide","State","apiClient","ApiClient","Dashboard","onServerChanged","getCurrentUserId","accessToken","navigate","Servers","Id","alert","message","globalize","translate","title","value","_default","view","params","querySelector","addEventListener","onServerSubmit","e","submitServer","show","host","ConnectionManager","connectToAddress","enableAutoLogin","appSettings","then","preventDefault","goBack","Promise","_resolve","_reject","imported","_ref2","back","_ref","autoFocus"],"mappings":"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","file":"index.js","sourcesContent":["import appSettings from 'appSettings';\nimport loading from 'loading';\nimport globalize from 'globalize';\nimport 'emby-button';\n\n/* eslint-disable indent */\n\n    function handleConnectionResult(page, result) {\n        loading.hide();\n        switch (result.State) {\n            case 'SignedIn': {\n                const apiClient = result.ApiClient;\n                Dashboard.onServerChanged(apiClient.getCurrentUserId(), apiClient.accessToken(), apiClient);\n                Dashboard.navigate('home.html');\n                break;\n            }\n            case 'ServerSignIn':\n                Dashboard.navigate('login.html?serverid=' + result.Servers[0].Id, false, 'none');\n                break;\n            case 'ServerSelection':\n                Dashboard.navigate('selectserver.html', false, 'none');\n                break;\n            case 'ServerUpdateNeeded':\n                Dashboard.alert({\n                    message: globalize.translate('ServerUpdateNeeded', '<a href=\"https://github.com/jellyfin/jellyfin\">https://github.com/jellyfin/jellyfin</a>')\n                });\n                break;\n            case 'Unavailable':\n                Dashboard.alert({\n                    message: globalize.translate('MessageUnableToConnectToServer'),\n                    title: globalize.translate('HeaderConnectionFailure')\n                });\n        }\n    }\n\n    function submitServer(page) {\n        loading.show();\n        const host = page.querySelector('#txtServerHost').value;\n        ConnectionManager.connectToAddress(host, {\n            enableAutoLogin: appSettings.enableAutoLogin()\n        }).then(function(result) {\n            handleConnectionResult(page, result);\n        }, function() {\n            handleConnectionResult(page, {\n                State: 'Unavailable'\n            });\n        });\n    }\n\n    export default function(view, params) {\n        view.querySelector('.addServerForm').addEventListener('submit', onServerSubmit);\n        view.querySelector('.btnCancel').addEventListener('click', goBack);\n\n        import('autoFocuser').then(({default: autoFocuser}) => {\n            autoFocuser.autoFocus(view);\n        });\n\n        function onServerSubmit(e) {\n            submitServer(view);\n            e.preventDefault();\n            return false;\n        }\n\n        function goBack() {\n            import('appRouter').then(({default: appRouter}) => {\n                appRouter.back();\n            });\n        }\n    }\n\n/* eslint-enable indent */\n"]}