{"version":3,"sources":["controllers/session/login/index.js"],"names":["define","_require","_exports","_apphost","_appSettings","_dom","_connectionManager","_loading","_layoutManager","_libraryMenu","_browser","_globalize","_cardStyle","_embyCheckbox","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","value","_default","view","params","getApiClient","serverId","serverid","connectionManager","getOrCreateApiClient","ApiClient","showVisualForm","querySelector","classList","remove","add","Promise","_resolve","_reject","imported","then","_ref2","autoFocus","addEventListener","e","card","dom","parentWithClass","target","cardContent","context","id","getAttribute","name","haspw","showManualForm","authenticateUserByName","appSettings","enableAutoLogin","checked","apiClient","preventDefault","Dashboard","navigate","selectServer","loading","show","libraryMenu","setTransparentMenu","appHost","supports","getPublicUsers","users","length","loadUserList","html","i","user","cssClass","layoutManager","tv","enableFocusTransform","HasPassword","Name","Id","imgUrl","PrimaryImageTag","getUserImageUrl","width","tag","type","background","getMetroColor","innerHTML","catch","hide","getJSON","getUrl","options","textContent","LoginDisclaimer","browser","slow","edge","page","username","password","result","User","onServerChanged","AccessToken","response","includes","status","_ref","toast","messageKey","globalize","translate","alert","message","title","showCancel","focusPassword","focus","metroColors","str","character","String","substr","charCodeAt","sum","parseInt","charAt","index","getRandomMetroColor","Math","floor","random"],"mappings":"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","file":"index.js","sourcesContent":["import appHost from 'apphost';\nimport appSettings from 'appSettings';\nimport dom from 'dom';\nimport connectionManager from 'connectionManager';\nimport loading from 'loading';\nimport layoutManager from 'layoutManager';\nimport libraryMenu from 'libraryMenu';\nimport browser from 'browser';\nimport globalize from 'globalize';\nimport 'cardStyle';\nimport 'emby-checkbox';\n\n/* eslint-disable indent */\n\n    const enableFocusTransform = !browser.slow && !browser.edge;\n\n    function authenticateUserByName(page, apiClient, username, password) {\n        loading.show();\n        apiClient.authenticateUserByName(username, password).then(function (result) {\n            var user = result.User;\n            loading.hide();\n\n            Dashboard.onServerChanged(user.Id, result.AccessToken, apiClient);\n            Dashboard.navigate('home.html');\n        }, function (response) {\n            page.querySelector('#txtManualName').value = '';\n            page.querySelector('#txtManualPassword').value = '';\n            loading.hide();\n\n            const UnauthorizedOrForbidden = [401, 403];\n            if (UnauthorizedOrForbidden.includes(response.status)) {\n                import('toast').then(({default: toast}) => {\n                    const messageKey = response.status === 401 ? 'MessageInvalidUser' : 'MessageUnauthorizedUser';\n                    toast(globalize.translate(messageKey));\n                });\n            } else {\n                Dashboard.alert({\n                    message: globalize.translate('MessageUnableToConnectToServer'),\n                    title: globalize.translate('HeaderConnectionFailure')\n                });\n            }\n        });\n    }\n\n    function showManualForm(context, showCancel, focusPassword) {\n        context.querySelector('.chkRememberLogin').checked = appSettings.enableAutoLogin();\n        context.querySelector('.manualLoginForm').classList.remove('hide');\n        context.querySelector('.visualLoginForm').classList.add('hide');\n        context.querySelector('.btnManual').classList.add('hide');\n\n        if (focusPassword) {\n            context.querySelector('#txtManualPassword').focus();\n        } else {\n            context.querySelector('#txtManualName').focus();\n        }\n\n        if (showCancel) {\n            context.querySelector('.btnCancel').classList.remove('hide');\n        } else {\n            context.querySelector('.btnCancel').classList.add('hide');\n        }\n    }\n\n    const metroColors = ['#6FBD45', '#4BB3DD', '#4164A5', '#E12026', '#800080', '#E1B222', '#008040', '#0094FF', '#FF00C7', '#FF870F', '#7F0037'];\n\n    function getRandomMetroColor() {\n        const index = Math.floor(Math.random() * (metroColors.length - 1));\n        return metroColors[index];\n    }\n\n    function getMetroColor(str) {\n        if (str) {\n            const character = String(str.substr(0, 1).charCodeAt());\n            let sum = 0;\n\n            for (let i = 0; i < character.length; i++) {\n                sum += parseInt(character.charAt(i));\n            }\n\n            const index = String(sum).substr(-1);\n            return metroColors[index];\n        }\n\n        return getRandomMetroColor();\n    }\n\n    function loadUserList(context, apiClient, users) {\n        let html = '';\n\n        for (let i = 0; i < users.length; i++) {\n            const user = users[i];\n\n            // TODO move card creation code to Card component\n            let cssClass = 'card squareCard scalableCard squareCard-scalable';\n\n            if (layoutManager.tv) {\n                cssClass += ' show-focus';\n\n                if (enableFocusTransform) {\n                    cssClass += ' show-animation';\n                }\n            }\n\n            const cardBoxCssClass = 'cardBox cardBox-bottompadded';\n            html += '<button type=\"button\" class=\"' + cssClass + '\">';\n            html += '<div class=\"' + cardBoxCssClass + '\">';\n            html += '<div class=\"cardScalable\">';\n            html += '<div class=\"cardPadder cardPadder-square\"></div>';\n            html += '<div class=\"cardContent\" data-haspw=\"' + user.HasPassword + '\" data-username=\"' + user.Name + '\" data-userid=\"' + user.Id + '\">';\n            let imgUrl;\n\n            if (user.PrimaryImageTag) {\n                imgUrl = apiClient.getUserImageUrl(user.Id, {\n                    width: 300,\n                    tag: user.PrimaryImageTag,\n                    type: 'Primary'\n                });\n                html += '<div class=\"cardImageContainer coveredImage\" style=\"background-image:url(\\'' + imgUrl + \"');\\\"></div>\";\n            } else {\n                const background = getMetroColor(user.Id);\n                imgUrl = 'assets/img/avatar.png';\n                html += '<div class=\"cardImageContainer coveredImage\" style=\"background-image:url(\\'' + imgUrl + \"');background-color:\" + background + ';\"></div>';\n            }\n\n            html += '</div>';\n            html += '</div>';\n            html += '<div class=\"cardFooter visualCardBox-cardFooter\">';\n            html += '<div class=\"cardText singleCardText cardTextCentered\">' + user.Name + '</div>';\n            html += '</div>';\n            html += '</div>';\n            html += '</button>';\n        }\n\n        context.querySelector('#divUsers').innerHTML = html;\n    }\n\n    export default function (view, params) {\n        function getApiClient() {\n            const serverId = params.serverid;\n\n            if (serverId) {\n                return connectionManager.getOrCreateApiClient(serverId);\n            }\n\n            return ApiClient;\n        }\n\n        function showVisualForm() {\n            view.querySelector('.visualLoginForm').classList.remove('hide');\n            view.querySelector('.manualLoginForm').classList.add('hide');\n            view.querySelector('.btnManual').classList.remove('hide');\n\n            import('autoFocuser').then(({default: autoFocuser}) => {\n                autoFocuser.autoFocus(view);\n            });\n        }\n\n        view.querySelector('#divUsers').addEventListener('click', function (e) {\n            const card = dom.parentWithClass(e.target, 'card');\n            const cardContent = card ? card.querySelector('.cardContent') : null;\n\n            if (cardContent) {\n                const context = view;\n                const id = cardContent.getAttribute('data-userid');\n                const name = cardContent.getAttribute('data-username');\n                const haspw = cardContent.getAttribute('data-haspw');\n\n                if (id === 'manual') {\n                    context.querySelector('#txtManualName').value = '';\n                    showManualForm(context, true);\n                } else if (haspw == 'false') {\n                    authenticateUserByName(context, getApiClient(), name, '');\n                } else {\n                    context.querySelector('#txtManualName').value = name;\n                    context.querySelector('#txtManualPassword').value = '';\n                    showManualForm(context, true, true);\n                }\n            }\n        });\n        view.querySelector('.manualLoginForm').addEventListener('submit', function (e) {\n            appSettings.enableAutoLogin(view.querySelector('.chkRememberLogin').checked);\n            const apiClient = getApiClient();\n            authenticateUserByName(view, apiClient, view.querySelector('#txtManualName').value, view.querySelector('#txtManualPassword').value);\n            e.preventDefault();\n            return false;\n        });\n        view.querySelector('.btnForgotPassword').addEventListener('click', function () {\n            Dashboard.navigate('forgotpassword.html');\n        });\n        view.querySelector('.btnCancel').addEventListener('click', showVisualForm);\n        view.querySelector('.btnManual').addEventListener('click', function () {\n            view.querySelector('#txtManualName').value = '';\n            showManualForm(view, true);\n        });\n        view.querySelector('.btnSelectServer').addEventListener('click', function () {\n            Dashboard.selectServer();\n        });\n        view.addEventListener('viewshow', function (e) {\n            loading.show();\n            libraryMenu.setTransparentMenu(true);\n\n            if (!appHost.supports('multiserver')) {\n                view.querySelector('.btnSelectServer').classList.add('hide');\n            }\n\n            const apiClient = getApiClient();\n            apiClient.getPublicUsers().then(function (users) {\n                if (users.length) {\n                    showVisualForm();\n                    loadUserList(view, apiClient, users);\n                } else {\n                    view.querySelector('#txtManualName').value = '';\n                    showManualForm(view, false, false);\n                }\n            }).catch().then(function () {\n                loading.hide();\n            });\n            apiClient.getJSON(apiClient.getUrl('Branding/Configuration')).then(function (options) {\n                view.querySelector('.disclaimer').textContent = options.LoginDisclaimer || '';\n            });\n        });\n        view.addEventListener('viewhide', function (e) {\n            libraryMenu.setTransparentMenu(false);\n        });\n    }\n\n/* eslint-enable indent */\n"]}