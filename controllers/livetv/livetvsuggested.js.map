{"version":3,"sources":["controllers/livetv/livetvsuggested.js"],"names":["define","_require","_exports","_layoutManager","userSettings","_inputManager","_loading","_globalize","mainTabsManager","_cardBuilder","_imageLoader","_scrollStyles","_embyItemscontainer","_embyTabs","_embyButton","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","enableScrollX","layoutManager","desktop","getLimit","reload","page","enableFullRender","loadRecommendedPrograms","loading","show","limit","ApiClient","getLiveTvRecommendedPrograms","userId","Dashboard","getCurrentUserId","IsAiring","ImageTypeLimit","EnableImageTypes","EnableTotalRecordCount","Fields","then","result","renderItems","Items","showAirDateTime","showAirEndTime","hide","Promise","_resolve","_reject","imported","_ref","autoFocus","getLiveTvPrograms","HasAired","IsMovie","IsSports","IsKids","IsNews","IsSeries","shape","preferThumb","showParentTitle","showParentTitleOrTitle","showTitle","items","sectionClass","overlayButton","cardOptions","html","cardBuilder","getCardsHtml","assign","inheritThumb","defaultShape","centerText","coverImage","overlayText","lazy","overlayPlayButton","overlayMoreButton","overlayInfoButton","allowBottomPadding","showAirTime","elem","querySelector","innerHTML","imageLoader","lazyChildren","getTabs","name","globalize","translate","setScrollClasses","scrollX","classList","add","tv","remove","value","_default","view","params","onBeforeTabChange","evt","preLoadTab","index","getTabController","controller","renderedTabs","indexOf","preRender","parseInt","detail","selectedTabIndex","onTabChange","previousTabController","tabControllers","previousIndex","onHide","loadTab","currentTabIndex","initialTabIndex","push","renderTab","onShow","currentTabController","getTabContainers","querySelectorAll","callback","depends","concat","_ref2","tabContent","controllerFactory","self","collectionType","initTab","onInputCommand","command","preventDefault","navigate","this","tab","getDefaultTabIndex","folderId","lastFullRender","forEach","link","href","serverId","containers","i","length","Date","getTime","addEventListener","isRestored","initTabs","setTabs","inputManager","on","window","off","tabController","destroy"],"mappings":"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","file":"livetvsuggested.js","sourcesContent":["import layoutManager from 'layoutManager';\nimport * as userSettings from 'userSettings';\nimport inputManager from 'inputManager';\nimport loading from 'loading';\nimport globalize from 'globalize';\nimport * as mainTabsManager from 'mainTabsManager';\nimport cardBuilder from 'cardBuilder';\nimport imageLoader from 'imageLoader';\nimport 'scrollStyles';\nimport 'emby-itemscontainer';\nimport 'emby-tabs';\nimport 'emby-button';\n\nfunction enableScrollX() {\n    return !layoutManager.desktop;\n}\n\nfunction getBackdropShape() {\n    if (enableScrollX()) {\n        return 'overflowBackdrop';\n    }\n    return 'backdrop';\n}\n\nfunction getPortraitShape() {\n    if (enableScrollX()) {\n        return 'overflowPortrait';\n    }\n    return 'portrait';\n}\n\nfunction getLimit() {\n    if (enableScrollX()) {\n        return 12;\n    }\n\n    return 9;\n}\n\nfunction loadRecommendedPrograms(page) {\n    loading.show();\n    let limit = getLimit();\n\n    if (enableScrollX()) {\n        limit *= 2;\n    }\n\n    ApiClient.getLiveTvRecommendedPrograms({\n        userId: Dashboard.getCurrentUserId(),\n        IsAiring: true,\n        limit: limit,\n        ImageTypeLimit: 1,\n        EnableImageTypes: 'Primary,Thumb,Backdrop',\n        EnableTotalRecordCount: false,\n        Fields: 'ChannelInfo,PrimaryImageAspectRatio'\n    }).then(function (result) {\n        renderItems(page, result.Items, 'activeProgramItems', 'play', {\n            showAirDateTime: false,\n            showAirEndTime: true\n        });\n        loading.hide();\n\n        import('autoFocuser').then(({default: autoFocuser}) => {\n            autoFocuser.autoFocus(page);\n        });\n    });\n}\n\nfunction reload(page, enableFullRender) {\n    if (enableFullRender) {\n        loadRecommendedPrograms(page);\n        ApiClient.getLiveTvPrograms({\n            userId: Dashboard.getCurrentUserId(),\n            HasAired: false,\n            limit: getLimit(),\n            IsMovie: false,\n            IsSports: false,\n            IsKids: false,\n            IsNews: false,\n            IsSeries: true,\n            EnableTotalRecordCount: false,\n            Fields: 'ChannelInfo,PrimaryImageAspectRatio',\n            EnableImageTypes: 'Primary,Thumb'\n        }).then(function (result) {\n            renderItems(page, result.Items, 'upcomingEpisodeItems');\n        });\n        ApiClient.getLiveTvPrograms({\n            userId: Dashboard.getCurrentUserId(),\n            HasAired: false,\n            limit: getLimit(),\n            IsMovie: true,\n            EnableTotalRecordCount: false,\n            Fields: 'ChannelInfo',\n            EnableImageTypes: 'Primary,Thumb'\n        }).then(function (result) {\n            renderItems(page, result.Items, 'upcomingTvMovieItems', null, {\n                shape: getPortraitShape(),\n                preferThumb: null,\n                showParentTitle: false\n            });\n        });\n        ApiClient.getLiveTvPrograms({\n            userId: Dashboard.getCurrentUserId(),\n            HasAired: false,\n            limit: getLimit(),\n            IsSports: true,\n            EnableTotalRecordCount: false,\n            Fields: 'ChannelInfo,PrimaryImageAspectRatio',\n            EnableImageTypes: 'Primary,Thumb'\n        }).then(function (result) {\n            renderItems(page, result.Items, 'upcomingSportsItems');\n        });\n        ApiClient.getLiveTvPrograms({\n            userId: Dashboard.getCurrentUserId(),\n            HasAired: false,\n            limit: getLimit(),\n            IsKids: true,\n            EnableTotalRecordCount: false,\n            Fields: 'ChannelInfo,PrimaryImageAspectRatio',\n            EnableImageTypes: 'Primary,Thumb'\n        }).then(function (result) {\n            renderItems(page, result.Items, 'upcomingKidsItems');\n        });\n        ApiClient.getLiveTvPrograms({\n            userId: Dashboard.getCurrentUserId(),\n            HasAired: false,\n            limit: getLimit(),\n            IsNews: true,\n            EnableTotalRecordCount: false,\n            Fields: 'ChannelInfo,PrimaryImageAspectRatio',\n            EnableImageTypes: 'Primary,Thumb'\n        }).then(function (result) {\n            renderItems(page, result.Items, 'upcomingNewsItems', null, {\n                showParentTitleOrTitle: true,\n                showTitle: false,\n                showParentTitle: false\n            });\n        });\n    }\n}\n\nfunction renderItems(page, items, sectionClass, overlayButton, cardOptions) {\n    const html = cardBuilder.getCardsHtml(Object.assign({\n        items: items,\n        preferThumb: 'auto',\n        inheritThumb: false,\n        shape: enableScrollX() ? 'autooverflow' : 'auto',\n        defaultShape: getBackdropShape(),\n        showParentTitle: true,\n        showTitle: true,\n        centerText: true,\n        coverImage: true,\n        overlayText: false,\n        lazy: true,\n        overlayPlayButton: overlayButton === 'play',\n        overlayMoreButton: overlayButton === 'more',\n        overlayInfoButton: overlayButton === 'info',\n        allowBottomPadding: !enableScrollX(),\n        showAirTime: true,\n        showAirDateTime: true\n    }, cardOptions || {}));\n    const elem = page.querySelector('.' + sectionClass);\n    elem.innerHTML = html;\n    imageLoader.lazyChildren(elem);\n}\n\nfunction getTabs() {\n    return [{\n        name: globalize.translate('Programs')\n    }, {\n        name: globalize.translate('Guide')\n    }, {\n        name: globalize.translate('Channels')\n    }, {\n        name: globalize.translate('Recordings')\n    }, {\n        name: globalize.translate('Schedule')\n    }, {\n        name: globalize.translate('Series')\n    }];\n}\n\nfunction setScrollClasses(elem, scrollX) {\n    if (scrollX) {\n        elem.classList.add('hiddenScrollX');\n\n        if (layoutManager.tv) {\n            elem.classList.add('smoothScrollX');\n        }\n\n        elem.classList.add('scrollX');\n        elem.classList.remove('vertical-wrap');\n    } else {\n        elem.classList.remove('hiddenScrollX');\n        elem.classList.remove('smoothScrollX');\n        elem.classList.remove('scrollX');\n        elem.classList.add('vertical-wrap');\n    }\n}\n\nfunction getDefaultTabIndex(folderId) {\n    if (userSettings.get('landing-' + folderId) === 'guide') {\n        return 1;\n    }\n\n    return 0;\n}\n\nexport default function (view, params) {\n    function enableFullRender() {\n        return new Date().getTime() - lastFullRender > 3e5;\n    }\n\n    function onBeforeTabChange(evt) {\n        preLoadTab(view, parseInt(evt.detail.selectedTabIndex));\n    }\n\n    function onTabChange(evt) {\n        const previousTabController = tabControllers[parseInt(evt.detail.previousIndex)];\n\n        if (previousTabController && previousTabController.onHide) {\n            previousTabController.onHide();\n        }\n\n        loadTab(view, parseInt(evt.detail.selectedTabIndex));\n    }\n\n    function getTabContainers() {\n        return view.querySelectorAll('.pageTabContent');\n    }\n\n    function initTabs() {\n        mainTabsManager.setTabs(view, currentTabIndex, getTabs, getTabContainers, onBeforeTabChange, onTabChange);\n    }\n\n    function getTabController(page, index, callback) {\n        let depends;\n\n        // TODO int is a little hard to read\n        switch (index) {\n            case 0:\n                depends = 'controllers/livetv/livetvsuggested';\n                break;\n\n            case 1:\n                depends = 'controllers/livetv/livetvguide';\n                break;\n\n            case 2:\n                depends = 'controllers/livetv/livetvchannels';\n                break;\n\n            case 3:\n                depends = 'controllers/livetv/livetvrecordings';\n                break;\n\n            case 4:\n                depends = 'controllers/livetv/livetvschedule';\n                break;\n\n            case 5:\n                depends = 'controllers/livetv/livetvseriestimers';\n                break;\n        }\n\n        import(depends).then(({default: controllerFactory}) => {\n            let tabContent;\n\n            if (index === 0) {\n                tabContent = view.querySelector(`.pageTabContent[data-index=\"${index}\"]`);\n                self.tabContent = tabContent;\n            }\n\n            let controller = tabControllers[index];\n\n            if (!controller) {\n                tabContent = view.querySelector(`.pageTabContent[data-index=\"${index}\"]`);\n\n                if (index === 0) {\n                    controller = self;\n                } else if (index === 6) {\n                    controller = new controllerFactory(view, tabContent, {\n                        collectionType: 'livetv'\n                    });\n                } else {\n                    controller = new controllerFactory(view, params, tabContent);\n                }\n\n                tabControllers[index] = controller;\n\n                if (controller.initTab) {\n                    controller.initTab();\n                }\n            }\n\n            callback(controller);\n        });\n    }\n\n    function preLoadTab(page, index) {\n        getTabController(page, index, function (controller) {\n            if (renderedTabs.indexOf(index) === -1 && controller.preRender) {\n                controller.preRender();\n            }\n        });\n    }\n\n    function loadTab(page, index) {\n        currentTabIndex = index;\n        getTabController(page, index, function (controller) {\n            initialTabIndex = null;\n\n            if (renderedTabs.indexOf(index) === -1) {\n                if (index === 1) {\n                    renderedTabs.push(index);\n                }\n\n                controller.renderTab();\n            } else if (controller.onShow) {\n                controller.onShow();\n            }\n\n            currentTabController = controller;\n        });\n    }\n\n    function onInputCommand(evt) {\n        if (evt.detail.command === 'search') {\n            evt.preventDefault();\n            Dashboard.navigate('search.html?collectionType=livetv');\n        }\n    }\n\n    let isViewRestored;\n    const self = this;\n    let currentTabIndex = parseInt(params.tab || getDefaultTabIndex('livetv'));\n    let initialTabIndex = currentTabIndex;\n    let lastFullRender = 0;\n    [].forEach.call(view.querySelectorAll('.sectionTitleTextButton-programs'), function (link) {\n        const href = link.href;\n\n        if (href) {\n            link.href = href + '&serverId=' + ApiClient.serverId();\n        }\n    });\n\n    self.initTab = function () {\n        const tabContent = view.querySelector('.pageTabContent[data-index=\"0\"]');\n        const containers = tabContent.querySelectorAll('.itemsContainer');\n\n        for (let i = 0, length = containers.length; i < length; i++) {\n            setScrollClasses(containers[i], enableScrollX());\n        }\n    };\n\n    self.renderTab = function () {\n        const tabContent = view.querySelector('.pageTabContent[data-index=\"0\"]');\n\n        if (enableFullRender()) {\n            reload(tabContent, true);\n            lastFullRender = new Date().getTime();\n        } else {\n            reload(tabContent);\n        }\n    };\n\n    let currentTabController;\n    const tabControllers = [];\n    const renderedTabs = [];\n    view.addEventListener('viewbeforeshow', function (evt) {\n        isViewRestored = evt.detail.isRestored;\n        initTabs();\n    });\n    view.addEventListener('viewshow', function (evt) {\n        isViewRestored = evt.detail.isRestored;\n\n        if (!isViewRestored) {\n            mainTabsManager.selectedTabIndex(initialTabIndex);\n        }\n\n        inputManager.on(window, onInputCommand);\n    });\n    view.addEventListener('viewbeforehide', function () {\n        if (currentTabController && currentTabController.onHide) {\n            currentTabController.onHide();\n        }\n\n        inputManager.off(window, onInputCommand);\n    });\n    view.addEventListener('viewdestroy', function () {\n        tabControllers.forEach(function (tabController) {\n            if (tabController.destroy) {\n                tabController.destroy();\n            }\n        });\n    });\n}\n"]}