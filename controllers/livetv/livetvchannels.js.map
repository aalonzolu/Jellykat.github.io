{"version":3,"sources":["controllers/livetv/livetvchannels.js"],"names":["define","_require","_exports","_cardBuilder","_imageLoader","_libraryBrowser","_loading","_events","userSettings","_embyItemscontainer","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","value","_default","view","params","tabContent","getQuery","getPageData","pageData","query","StartIndex","Fields","libraryPageSize","renderChannels","context","result","onNextPageClick","isLoading","Limit","reloadItems","onPreviousPageClick","Math","max","querySelector","innerHTML","libraryBrowser","getQueryPagingHtml","startIndex","limit","totalRecordCount","TotalRecordCount","showLimit","updatePageSizeSetting","filterButton","i","length","elems","html","getChannelsHtml","channels","cardBuilder","getCardsHtml","items","shape","showTitle","lazy","cardLayout","showDetailsMenu","showCurrentProgram","showCurrentProgramTime","Items","elem","imageLoader","lazyChildren","querySelectorAll","addEventListener","save","loading","show","apiClient","ApiClient","UserId","getCurrentUserId","getLiveTvChannels","then","hide","Promise","_resolve","_reject","imported","_ref2","autoFocus","showFilterMenu","concat","_ref","filterDialog","FilterDialog","mode","serverId","events","on","this","renderTab"],"mappings":"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","file":"livetvchannels.js","sourcesContent":["import cardBuilder from 'cardBuilder';\nimport imageLoader from 'imageLoader';\nimport libraryBrowser from 'libraryBrowser';\nimport loading from 'loading';\nimport events from 'events';\nimport * as userSettings from 'userSettings';\nimport 'emby-itemscontainer';\n\nexport default function (view, params, tabContent) {\n    function getPageData() {\n        if (!pageData) {\n            pageData = {\n                query: {\n                    StartIndex: 0,\n                    Fields: 'PrimaryImageAspectRatio'\n                }\n            };\n        }\n\n        if (userSettings.libraryPageSize() > 0) {\n            pageData.query['Limit'] = userSettings.libraryPageSize();\n        }\n\n        return pageData;\n    }\n\n    function getQuery() {\n        return getPageData().query;\n    }\n\n    function getChannelsHtml(channels) {\n        return cardBuilder.getCardsHtml({\n            items: channels,\n            shape: 'square',\n            showTitle: true,\n            lazy: true,\n            cardLayout: true,\n            showDetailsMenu: true,\n            showCurrentProgram: true,\n            showCurrentProgramTime: true\n        });\n    }\n\n    function renderChannels(context, result) {\n        function onNextPageClick() {\n            if (isLoading) {\n                return;\n            }\n\n            if (userSettings.libraryPageSize() > 0) {\n                query.StartIndex += query.Limit;\n            }\n            reloadItems(context);\n        }\n\n        function onPreviousPageClick() {\n            if (isLoading) {\n                return;\n            }\n\n            if (userSettings.libraryPageSize() > 0) {\n                query.StartIndex = Math.max(0, query.StartIndex - query.Limit);\n            }\n            reloadItems(context);\n        }\n\n        const query = getQuery();\n        context.querySelector('.paging').innerHTML = libraryBrowser.getQueryPagingHtml({\n            startIndex: query.StartIndex,\n            limit: query.Limit,\n            totalRecordCount: result.TotalRecordCount,\n            showLimit: false,\n            updatePageSizeSetting: false,\n            filterButton: false\n        });\n        const html = getChannelsHtml(result.Items);\n        const elem = context.querySelector('#items');\n        elem.innerHTML = html;\n        imageLoader.lazyChildren(elem);\n        let i;\n        let length;\n        let elems;\n\n        for (elems = context.querySelectorAll('.btnNextPage'), i = 0, length = elems.length; i < length; i++) {\n            elems[i].addEventListener('click', onNextPageClick);\n        }\n\n        for (elems = context.querySelectorAll('.btnPreviousPage'), i = 0, length = elems.length; i < length; i++) {\n            elems[i].addEventListener('click', onPreviousPageClick);\n        }\n    }\n\n    function showFilterMenu(context) {\n        import(['components/filterdialog/filterdialog']).then(({default: FilterDialog}) => {\n            const filterDialog = new FilterDialog({\n                query: getQuery(),\n                mode: 'livetvchannels',\n                serverId: ApiClient.serverId()\n            });\n            events.on(filterDialog, 'filterchange', function () {\n                reloadItems(context);\n            });\n            filterDialog.show();\n        });\n    }\n\n    function reloadItems(context, save) {\n        loading.show();\n        isLoading = true;\n        const query = getQuery();\n        const apiClient = ApiClient;\n        query.UserId = apiClient.getCurrentUserId();\n        apiClient.getLiveTvChannels(query).then(function (result) {\n            renderChannels(context, result);\n            loading.hide();\n            isLoading = false;\n\n            import('autoFocuser').then(({default: autoFocuser}) => {\n                autoFocuser.autoFocus(view);\n            });\n        });\n    }\n\n    let pageData;\n    const self = this;\n    let isLoading = false;\n    tabContent.querySelector('.btnFilter').addEventListener('click', function () {\n        showFilterMenu(tabContent);\n    });\n\n    self.renderTab = function () {\n        reloadItems(tabContent);\n    };\n}\n"]}