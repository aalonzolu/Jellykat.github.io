{"version":3,"sources":["controllers/shows/episodes.js"],"names":["define","_require","_exports","_loading","_events","_libraryBrowser","_imageLoader","_listView","_cardBuilder","userSettings","_globalize","_embyItemscontainer","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","value","_default","view","params","tabContent","getPageData","context","getSavedQueryKey","pageData","data","query","SortBy","SortOrder","IncludeItemTypes","Recursive","Fields","IsMissing","ImageTypeLimit","EnableImageTypes","StartIndex","libraryBrowser","getSavedView","libraryPageSize","ParentId","topParentId","loadSavedQueryValues","getQuery","savedQueryKey","onViewStyleChange","viewStyle","self","getCurrentViewStyle","itemsContainer","querySelector","classList","add","remove","innerHTML","reloadItems","page","loading","show","isLoading","ApiClient","getItems","Dashboard","getCurrentUserId","then","result","onNextPageClick","Limit","onPreviousPageClick","Math","max","html","window","scrollTo","elems","pagingHtml","getQueryPagingHtml","startIndex","limit","totalRecordCount","TotalRecordCount","showLimit","updatePageSizeSetting","addLayoutButton","sortButton","filterButton","listView","getListViewHtml","items","Items","sortBy","showParentTitle","cardBuilder","getCardsHtml","shape","showTitle","scalable","cardLayout","overlayText","centerText","overlayPlayButton","i","length","querySelectorAll","addEventListener","imageLoader","lazyChildren","saveQueryValues","hide","Promise","_resolve","_reject","imported","_ref","autoFocus","this","showFilterMenu","_ref2","filterDialog","filterDialogFactory","mode","serverId","events","on","initPage","e","showSortMenu","name","globalize","translate","id","callback","button","target","btnSelectView","showLayoutMenu","split","detail","saveViewSetting","renderTab","destroy"],"mappings":"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","file":"episodes.js","sourcesContent":["import loading from 'loading';\nimport events from 'events';\nimport libraryBrowser from 'libraryBrowser';\nimport imageLoader from 'imageLoader';\nimport listView from 'listView';\nimport cardBuilder from 'cardBuilder';\nimport * as userSettings from 'userSettings';\nimport globalize from 'globalize';\nimport 'emby-itemscontainer';\n\n/* eslint-disable indent */\n\n    export default function (view, params, tabContent) {\n        function getPageData(context) {\n            const key = getSavedQueryKey(context);\n            let pageData = data[key];\n\n            if (!pageData) {\n                pageData = data[key] = {\n                    query: {\n                        SortBy: 'SeriesSortName,SortName',\n                        SortOrder: 'Ascending',\n                        IncludeItemTypes: 'Episode',\n                        Recursive: true,\n                        Fields: 'PrimaryImageAspectRatio,MediaSourceCount,UserData',\n                        IsMissing: false,\n                        ImageTypeLimit: 1,\n                        EnableImageTypes: 'Primary,Backdrop,Thumb',\n                        StartIndex: 0\n                    },\n                    view: libraryBrowser.getSavedView(key) || 'Poster'\n                };\n\n                if (userSettings.libraryPageSize() > 0) {\n                    pageData.query['Limit'] = userSettings.libraryPageSize();\n                }\n\n                pageData.query.ParentId = params.topParentId;\n                libraryBrowser.loadSavedQueryValues(key, pageData.query);\n            }\n\n            return pageData;\n        }\n\n        function getQuery(context) {\n            return getPageData(context).query;\n        }\n\n        function getSavedQueryKey(context) {\n            if (!context.savedQueryKey) {\n                context.savedQueryKey = libraryBrowser.getSavedQueryKey('episodes');\n            }\n\n            return context.savedQueryKey;\n        }\n\n        function onViewStyleChange() {\n            const viewStyle = self.getCurrentViewStyle();\n            const itemsContainer = tabContent.querySelector('.itemsContainer');\n\n            if (viewStyle == 'List') {\n                itemsContainer.classList.add('vertical-list');\n                itemsContainer.classList.remove('vertical-wrap');\n            } else {\n                itemsContainer.classList.remove('vertical-list');\n                itemsContainer.classList.add('vertical-wrap');\n            }\n\n            itemsContainer.innerHTML = '';\n        }\n\n        function reloadItems(page) {\n            loading.show();\n            isLoading = true;\n            const query = getQuery(page);\n            ApiClient.getItems(Dashboard.getCurrentUserId(), query).then(function (result) {\n                function onNextPageClick() {\n                    if (isLoading) {\n                        return;\n                    }\n\n                    if (userSettings.libraryPageSize() > 0) {\n                        query.StartIndex += query.Limit;\n                    }\n                    reloadItems(tabContent);\n                }\n\n                function onPreviousPageClick() {\n                    if (isLoading) {\n                        return;\n                    }\n\n                    if (userSettings.libraryPageSize() > 0) {\n                        query.StartIndex = Math.max(0, query.StartIndex - query.Limit);\n                    }\n                    reloadItems(tabContent);\n                }\n\n                window.scrollTo(0, 0);\n                let html;\n                const pagingHtml = libraryBrowser.getQueryPagingHtml({\n                    startIndex: query.StartIndex,\n                    limit: query.Limit,\n                    totalRecordCount: result.TotalRecordCount,\n                    showLimit: false,\n                    updatePageSizeSetting: false,\n                    addLayoutButton: false,\n                    sortButton: false,\n                    filterButton: false\n                });\n                const viewStyle = self.getCurrentViewStyle();\n                const itemsContainer = tabContent.querySelector('.itemsContainer');\n                if (viewStyle == 'List') {\n                    html = listView.getListViewHtml({\n                        items: result.Items,\n                        sortBy: query.SortBy,\n                        showParentTitle: true\n                    });\n                } else if (viewStyle == 'PosterCard') {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: 'backdrop',\n                        showTitle: true,\n                        showParentTitle: true,\n                        scalable: true,\n                        cardLayout: true\n                    });\n                } else {\n                    html = cardBuilder.getCardsHtml({\n                        items: result.Items,\n                        shape: 'backdrop',\n                        showTitle: true,\n                        showParentTitle: true,\n                        overlayText: false,\n                        centerText: true,\n                        scalable: true,\n                        overlayPlayButton: true\n                    });\n                }\n                let elems;\n\n                elems = tabContent.querySelectorAll('.paging');\n                for (let i = 0, length = elems.length; i < length; i++) {\n                    elems[i].innerHTML = pagingHtml;\n                }\n\n                elems = tabContent.querySelectorAll('.btnNextPage');\n                for (let i = 0, length = elems.length; i < length; i++) {\n                    elems[i].addEventListener('click', onNextPageClick);\n                }\n\n                elems = tabContent.querySelectorAll('.btnPreviousPage');\n                for (let i = 0, length = elems.length; i < length; i++) {\n                    elems[i].addEventListener('click', onPreviousPageClick);\n                }\n\n                itemsContainer.innerHTML = html;\n                imageLoader.lazyChildren(itemsContainer);\n                libraryBrowser.saveQueryValues(getSavedQueryKey(page), query);\n                loading.hide();\n                isLoading = false;\n\n                import('autoFocuser').then(({default: autoFocuser}) => {\n                    autoFocuser.autoFocus(page);\n                });\n            });\n        }\n\n        const self = this;\n        const data = {};\n        let isLoading = false;\n\n        self.showFilterMenu = function () {\n            import('components/filterdialog/filterdialog').then(({default: filterDialogFactory}) => {\n                const filterDialog = new filterDialogFactory({\n                    query: getQuery(tabContent),\n                    mode: 'episodes',\n                    serverId: ApiClient.serverId()\n                });\n                events.on(filterDialog, 'filterchange', function () {\n                    reloadItems(tabContent);\n                });\n                filterDialog.show();\n            });\n        };\n\n        self.getCurrentViewStyle = function () {\n            return getPageData(tabContent).view;\n        };\n\n        function initPage(tabContent) {\n            tabContent.querySelector('.btnFilter').addEventListener('click', function () {\n                self.showFilterMenu();\n            });\n            tabContent.querySelector('.btnSort').addEventListener('click', function (e) {\n                libraryBrowser.showSortMenu({\n                    items: [{\n                        name: globalize.translate('OptionNameSort'),\n                        id: 'SeriesSortName,SortName'\n                    }, {\n                        name: globalize.translate('OptionTvdbRating'),\n                        id: 'CommunityRating,SeriesSortName,SortName'\n                    }, {\n                        name: globalize.translate('OptionDateAdded'),\n                        id: 'DateCreated,SeriesSortName,SortName'\n                    }, {\n                        name: globalize.translate('OptionPremiereDate'),\n                        id: 'PremiereDate,SeriesSortName,SortName'\n                    }, {\n                        name: globalize.translate('OptionDatePlayed'),\n                        id: 'DatePlayed,SeriesSortName,SortName'\n                    }, {\n                        name: globalize.translate('OptionParentalRating'),\n                        id: 'OfficialRating,SeriesSortName,SortName'\n                    }, {\n                        name: globalize.translate('OptionPlayCount'),\n                        id: 'PlayCount,SeriesSortName,SortName'\n                    }, {\n                        name: globalize.translate('OptionRuntime'),\n                        id: 'Runtime,SeriesSortName,SortName'\n                    }],\n                    callback: function () {\n                        reloadItems(tabContent);\n                    },\n                    query: getQuery(tabContent),\n                    button: e.target\n                });\n            });\n            const btnSelectView = tabContent.querySelector('.btnSelectView');\n            btnSelectView.addEventListener('click', function (e) {\n                libraryBrowser.showLayoutMenu(e.target, self.getCurrentViewStyle(), 'List,Poster,PosterCard'.split(','));\n            });\n            btnSelectView.addEventListener('layoutchange', function (e) {\n                const viewStyle = e.detail.viewStyle;\n                getPageData(tabContent).view = viewStyle;\n                libraryBrowser.saveViewSetting(getSavedQueryKey(tabContent), viewStyle);\n                onViewStyleChange();\n                reloadItems(tabContent);\n            });\n        }\n\n        initPage(tabContent);\n        onViewStyleChange();\n\n        self.renderTab = function () {\n            reloadItems(tabContent);\n        };\n\n        self.destroy = function () {};\n    }\n\n/* eslint-enable indent */\n"]}