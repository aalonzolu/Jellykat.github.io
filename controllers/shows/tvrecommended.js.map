{"version":3,"sources":["controllers/shows/tvrecommended.js"],"names":["define","_require","_exports","_events","_inputManager","_libraryMenu","_layoutManager","_loading","_dom","userSettings","_cardBuilder","_playbackManager","mainTabsManager","_globalize","_scrollStyles","_embyItemscontainer","_embyButton","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","getTabs","name","globalize","translate","setScrollClasses","elem","scrollX","classList","add","layoutManager","tv","remove","value","_default","view","params","reload","loading","show","loadResume","parentId","libraryMenu","getTopParentId","options","SortBy","SortOrder","IncludeItemTypes","Filters","Limit","dom","getWindowSize","innerWidth","Recursive","Fields","ExcludeLocationTypes","ParentId","ImageTypeLimit","EnableImageTypes","EnableTotalRecordCount","ApiClient","getItems","getCurrentUserId","then","result","Items","length","querySelector","allowBottomPadding","enableScrollX","container","cardBuilder","buildCards","itemsContainer","preferThumb","shape","scalable","showTitle","showParentTitle","overlayText","centerText","overlayPlayButton","cardLayout","loadNextUp","query","UserId","getNextUpEpisodes","hide","Promise","_resolve","_reject","imported","_ref","autoFocus","desktop","onBeforeTabChange","e","preLoadTab","page","index","getTabController","controller","renderedTabs","indexOf","preRender","parseInt","detail","selectedTabIndex","onTabChange","newIndex","loadTab","currentTabIndex","push","renderTab","getTabContainers","querySelectorAll","callback","depends","concat","_ref2","tabContent","controllerFactory","self","tabControllers","collectionType","topParentId","initTab","onPlaybackStop","state","NowPlayingItem","MediaType","getTabsElement","triggerTabChange","onWebSocketMessage","data","msg","MessageType","Data","onInputCommand","command","preventDefault","Dashboard","navigate","this","tab","getDefaultTabIndex","folderId","addEventListener","initTabs","setTabs","getAttribute","getItem","item","setAttribute","Name","setTitle","events","on","playbackManager","inputManager","window","off","forEach","t","destroy"],"mappings":"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","file":"tvrecommended.js","sourcesContent":["import events from 'events';\nimport inputManager from 'inputManager';\nimport libraryMenu from 'libraryMenu';\nimport layoutManager from 'layoutManager';\nimport loading from 'loading';\nimport dom from 'dom';\nimport * as userSettings from 'userSettings';\nimport cardBuilder from 'cardBuilder';\nimport playbackManager from 'playbackManager';\nimport * as mainTabsManager from 'mainTabsManager';\nimport globalize from 'globalize';\nimport 'scrollStyles';\nimport 'emby-itemscontainer';\nimport 'emby-button';\n\n/* eslint-disable indent */\n\n    function getTabs() {\n        return [{\n            name: globalize.translate('Shows')\n        }, {\n            name: globalize.translate('Suggestions')\n        }, {\n            name: globalize.translate('TabLatest')\n        }, {\n            name: globalize.translate('TabUpcoming')\n        }, {\n            name: globalize.translate('Genres')\n        }, {\n            name: globalize.translate('TabNetworks')\n        }, {\n            name: globalize.translate('Episodes')\n        }];\n    }\n\n    function getDefaultTabIndex(folderId) {\n        switch (userSettings.get('landing-' + folderId)) {\n            case 'suggestions':\n                return 1;\n\n            case 'latest':\n                return 2;\n\n            case 'favorites':\n                return 1;\n\n            case 'genres':\n                return 4;\n\n            default:\n                return 0;\n        }\n    }\n\n    function setScrollClasses(elem, scrollX) {\n        if (scrollX) {\n            elem.classList.add('hiddenScrollX');\n\n            if (layoutManager.tv) {\n                elem.classList.add('smoothScrollX');\n            }\n\n            elem.classList.add('scrollX');\n            elem.classList.remove('vertical-wrap');\n        } else {\n            elem.classList.remove('hiddenScrollX');\n            elem.classList.remove('smoothScrollX');\n            elem.classList.remove('scrollX');\n            elem.classList.add('vertical-wrap');\n        }\n    }\n\n    export default function (view, params) {\n        function reload() {\n            loading.show();\n            loadResume();\n            loadNextUp();\n        }\n\n        function loadNextUp() {\n            const query = {\n                Limit: 24,\n                Fields: 'PrimaryImageAspectRatio,SeriesInfo,DateCreated,BasicSyncInfo',\n                UserId: ApiClient.getCurrentUserId(),\n                ImageTypeLimit: 1,\n                EnableImageTypes: 'Primary,Backdrop,Thumb',\n                EnableTotalRecordCount: false\n            };\n            query.ParentId = libraryMenu.getTopParentId();\n            ApiClient.getNextUpEpisodes(query).then(function (result) {\n                if (result.Items.length) {\n                    view.querySelector('.noNextUpItems').classList.add('hide');\n                } else {\n                    view.querySelector('.noNextUpItems').classList.remove('hide');\n                }\n\n                const container = view.querySelector('#nextUpItems');\n                cardBuilder.buildCards(result.Items, {\n                    itemsContainer: container,\n                    preferThumb: true,\n                    shape: 'backdrop',\n                    scalable: true,\n                    showTitle: true,\n                    showParentTitle: true,\n                    overlayText: false,\n                    centerText: true,\n                    overlayPlayButton: true,\n                    cardLayout: false\n                });\n                loading.hide();\n\n                import('autoFocuser').then(({default: autoFocuser}) => {\n                    autoFocuser.autoFocus(view);\n                });\n            });\n        }\n\n        function enableScrollX() {\n            return !layoutManager.desktop;\n        }\n\n        function getThumbShape() {\n            return enableScrollX() ? 'overflowBackdrop' : 'backdrop';\n        }\n\n        function loadResume() {\n            const parentId = libraryMenu.getTopParentId();\n            const screenWidth = dom.getWindowSize().innerWidth;\n            const limit = screenWidth >= 1600 ? 5 : 6;\n            const options = {\n                SortBy: 'DatePlayed',\n                SortOrder: 'Descending',\n                IncludeItemTypes: 'Episode',\n                Filters: 'IsResumable',\n                Limit: limit,\n                Recursive: true,\n                Fields: 'PrimaryImageAspectRatio,SeriesInfo,UserData,BasicSyncInfo',\n                ExcludeLocationTypes: 'Virtual',\n                ParentId: parentId,\n                ImageTypeLimit: 1,\n                EnableImageTypes: 'Primary,Backdrop,Thumb',\n                EnableTotalRecordCount: false\n            };\n            ApiClient.getItems(ApiClient.getCurrentUserId(), options).then(function (result) {\n                if (result.Items.length) {\n                    view.querySelector('#resumableSection').classList.remove('hide');\n                } else {\n                    view.querySelector('#resumableSection').classList.add('hide');\n                }\n\n                const allowBottomPadding = !enableScrollX();\n                const container = view.querySelector('#resumableItems');\n                cardBuilder.buildCards(result.Items, {\n                    itemsContainer: container,\n                    preferThumb: true,\n                    shape: getThumbShape(),\n                    scalable: true,\n                    showTitle: true,\n                    showParentTitle: true,\n                    overlayText: false,\n                    centerText: true,\n                    overlayPlayButton: true,\n                    allowBottomPadding: allowBottomPadding,\n                    cardLayout: false\n                });\n            });\n        }\n\n        function onBeforeTabChange(e) {\n            preLoadTab(view, parseInt(e.detail.selectedTabIndex));\n        }\n\n        function onTabChange(e) {\n            const newIndex = parseInt(e.detail.selectedTabIndex);\n            loadTab(view, newIndex);\n        }\n\n        function getTabContainers() {\n            return view.querySelectorAll('.pageTabContent');\n        }\n\n        function initTabs() {\n            mainTabsManager.setTabs(view, currentTabIndex, getTabs, getTabContainers, onBeforeTabChange, onTabChange);\n        }\n\n        function getTabController(page, index, callback) {\n            let depends;\n\n            switch (index) {\n                case 0:\n                    depends = 'controllers/shows/tvshows';\n                    break;\n\n                case 1:\n                    depends = 'controllers/shows/tvrecommended';\n                    break;\n\n                case 2:\n                    depends = 'controllers/shows/tvlatest';\n                    break;\n\n                case 3:\n                    depends = 'controllers/shows/tvupcoming';\n                    break;\n\n                case 4:\n                    depends = 'controllers/shows/tvgenres';\n                    break;\n\n                case 5:\n                    depends = 'controllers/shows/tvstudios';\n                    break;\n\n                case 6:\n                    depends = 'controllers/shows/episodes';\n                    break;\n            }\n\n            import(depends).then(({default: controllerFactory}) => {\n                let tabContent;\n\n                if (index === 1) {\n                    tabContent = view.querySelector(\".pageTabContent[data-index='\" + index + \"']\");\n                    self.tabContent = tabContent;\n                }\n\n                let controller = tabControllers[index];\n\n                if (!controller) {\n                    tabContent = view.querySelector(\".pageTabContent[data-index='\" + index + \"']\");\n\n                    if (index === 1) {\n                        controller = self;\n                    } else if (index === 7) {\n                        controller = new controllerFactory(view, tabContent, {\n                            collectionType: 'tvshows',\n                            parentId: params.topParentId\n                        });\n                    } else {\n                        controller = new controllerFactory(view, params, tabContent);\n                    }\n\n                    tabControllers[index] = controller;\n\n                    if (controller.initTab) {\n                        controller.initTab();\n                    }\n                }\n\n                callback(controller);\n            });\n        }\n\n        function preLoadTab(page, index) {\n            getTabController(page, index, function (controller) {\n                if (renderedTabs.indexOf(index) == -1 && controller.preRender) {\n                    controller.preRender();\n                }\n            });\n        }\n\n        function loadTab(page, index) {\n            currentTabIndex = index;\n            getTabController(page, index, function (controller) {\n                if (renderedTabs.indexOf(index) == -1) {\n                    renderedTabs.push(index);\n                    controller.renderTab();\n                }\n            });\n        }\n\n        function onPlaybackStop(e, state) {\n            if (state.NowPlayingItem && state.NowPlayingItem.MediaType == 'Video') {\n                renderedTabs = [];\n                mainTabsManager.getTabsElement().triggerTabChange();\n            }\n        }\n\n        function onWebSocketMessage(e, data) {\n            const msg = data;\n\n            if (msg.MessageType === 'UserDataChanged' && msg.Data.UserId == ApiClient.getCurrentUserId()) {\n                renderedTabs = [];\n            }\n        }\n\n        function onInputCommand(e) {\n            switch (e.detail.command) {\n                case 'search':\n                    e.preventDefault();\n                    Dashboard.navigate('search.html?collectionType=tv&parentId=' + params.topParentId);\n            }\n        }\n\n        const self = this;\n        let currentTabIndex = parseInt(params.tab || getDefaultTabIndex(params.topParentId));\n\n        self.initTab = function () {\n            const tabContent = self.tabContent;\n            setScrollClasses(tabContent.querySelector('#resumableItems'), enableScrollX());\n        };\n\n        self.renderTab = function () {\n            reload();\n        };\n\n        const tabControllers = [];\n        let renderedTabs = [];\n        setScrollClasses(view.querySelector('#resumableItems'), enableScrollX());\n        view.addEventListener('viewshow', function (e) {\n            initTabs();\n            if (!view.getAttribute('data-title')) {\n                const parentId = params.topParentId;\n\n                if (parentId) {\n                    ApiClient.getItem(ApiClient.getCurrentUserId(), parentId).then(function (item) {\n                        view.setAttribute('data-title', item.Name);\n                        libraryMenu.setTitle(item.Name);\n                    });\n                } else {\n                    view.setAttribute('data-title', globalize.translate('Shows'));\n                    libraryMenu.setTitle(globalize.translate('Shows'));\n                }\n            }\n\n            events.on(playbackManager, 'playbackstop', onPlaybackStop);\n            events.on(ApiClient, 'message', onWebSocketMessage);\n            inputManager.on(window, onInputCommand);\n        });\n        view.addEventListener('viewbeforehide', function (e) {\n            inputManager.off(window, onInputCommand);\n            events.off(playbackManager, 'playbackstop', onPlaybackStop);\n            events.off(ApiClient, 'message', onWebSocketMessage);\n        });\n        view.addEventListener('viewdestroy', function (e) {\n            tabControllers.forEach(function (t) {\n                if (t.destroy) {\n                    t.destroy();\n                }\n            });\n        });\n    }\n\n/* eslint-enable indent */\n"]}