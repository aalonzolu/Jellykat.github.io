{"version":3,"sources":["controllers/livetvsettings.js"],"names":["define","_require","_exports","_jQuery","_loading","_globalize","_embyButton","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","onSubmit","loading","show","form","this","ApiClient","getNamedConfiguration","then","config","GuideDays","val","recordingPath","querySelector","value","movieRecordingPath","seriesRecordingPath","recordingPathChanged","RecordingPath","MovieRecordingPath","SeriesRecordingPath","RecordingEncodingFormat","PrePaddingSeconds","PostPaddingSeconds","RecordingPostProcessor","RecordingPostProcessorArguments","updateNamedConfiguration","Dashboard","processServerConfigurationUpdateResult","showSaveMessage","msg","globalize","translate","Promise","_resolve","_reject","imported","_ref","alert","_default","document","on","page","off","_ref2","picker","directoryBrowser","callback","path","close","validateWriteable","_ref3","_ref4","_ref5","includeFiles","loadPage","hide"],"mappings":"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","file":"livetvsettings.js","sourcesContent":["import $ from 'jQuery';\nimport loading from 'loading';\nimport globalize from 'globalize';\nimport 'emby-button';\n\nfunction loadPage(page, config) {\n    $('.liveTvSettingsForm', page).show();\n    $('.noLiveTvServices', page).hide();\n    $('#selectGuideDays', page).val(config.GuideDays || '');\n    $('#txtPrePaddingMinutes', page).val(config.PrePaddingSeconds / 60);\n    $('#txtPostPaddingMinutes', page).val(config.PostPaddingSeconds / 60);\n    page.querySelector('#txtRecordingPath').value = config.RecordingPath || '';\n    page.querySelector('#txtMovieRecordingPath').value = config.MovieRecordingPath || '';\n    page.querySelector('#txtSeriesRecordingPath').value = config.SeriesRecordingPath || '';\n    page.querySelector('#txtPostProcessor').value = config.RecordingPostProcessor || '';\n    page.querySelector('#txtPostProcessorArguments').value = config.RecordingPostProcessorArguments || '';\n    loading.hide();\n}\n\nfunction onSubmit() {\n    loading.show();\n    const form = this;\n    ApiClient.getNamedConfiguration('livetv').then(function (config) {\n        config.GuideDays = $('#selectGuideDays', form).val() || null;\n        const recordingPath = form.querySelector('#txtRecordingPath').value || null;\n        const movieRecordingPath = form.querySelector('#txtMovieRecordingPath').value || null;\n        const seriesRecordingPath = form.querySelector('#txtSeriesRecordingPath').value || null;\n        const recordingPathChanged = recordingPath != config.RecordingPath || movieRecordingPath != config.MovieRecordingPath || seriesRecordingPath != config.SeriesRecordingPath;\n        config.RecordingPath = recordingPath;\n        config.MovieRecordingPath = movieRecordingPath;\n        config.SeriesRecordingPath = seriesRecordingPath;\n        config.RecordingEncodingFormat = 'mkv';\n        config.PrePaddingSeconds = 60 * $('#txtPrePaddingMinutes', form).val();\n        config.PostPaddingSeconds = 60 * $('#txtPostPaddingMinutes', form).val();\n        config.RecordingPostProcessor = $('#txtPostProcessor', form).val();\n        config.RecordingPostProcessorArguments = $('#txtPostProcessorArguments', form).val();\n        ApiClient.updateNamedConfiguration('livetv', config).then(function () {\n            Dashboard.processServerConfigurationUpdateResult();\n            showSaveMessage(recordingPathChanged);\n        });\n    });\n    return false;\n}\n\nfunction showSaveMessage(recordingPathChanged) {\n    let msg = '';\n\n    if (recordingPathChanged) {\n        msg += globalize.translate('MessageChangeRecordingPath');\n    }\n\n    if (msg) {\n        import('alert').then(({default: alert}) => {\n            alert(msg);\n        });\n    }\n}\n\nexport default function () {\n    $(document).on('pageinit', '#liveTvSettingsPage', function () {\n        const page = this;\n        $('.liveTvSettingsForm').off('submit', onSubmit).on('submit', onSubmit);\n        $('#btnSelectRecordingPath', page).on('click.selectDirectory', function () {\n            import('directorybrowser').then(({default: directoryBrowser}) => {\n                const picker = new directoryBrowser();\n                picker.show({\n                    callback: function (path) {\n                        if (path) {\n                            $('#txtRecordingPath', page).val(path);\n                        }\n\n                        picker.close();\n                    },\n                    validateWriteable: true\n                });\n            });\n        });\n        $('#btnSelectMovieRecordingPath', page).on('click.selectDirectory', function () {\n            import('directorybrowser').then(({default: directoryBrowser}) => {\n                const picker = new directoryBrowser();\n                picker.show({\n                    callback: function (path) {\n                        if (path) {\n                            $('#txtMovieRecordingPath', page).val(path);\n                        }\n\n                        picker.close();\n                    },\n                    validateWriteable: true\n                });\n            });\n        });\n        $('#btnSelectSeriesRecordingPath', page).on('click.selectDirectory', function () {\n            import('directorybrowser').then(({default: directoryBrowser}) => {\n                const picker = new directoryBrowser();\n                picker.show({\n                    callback: function (path) {\n                        if (path) {\n                            $('#txtSeriesRecordingPath', page).val(path);\n                        }\n\n                        picker.close();\n                    },\n                    validateWriteable: true\n                });\n            });\n        });\n        $('#btnSelectPostProcessorPath', page).on('click.selectDirectory', function () {\n            import('directorybrowser').then(({default: directoryBrowser}) => {\n                const picker = new directoryBrowser();\n                picker.show({\n                    includeFiles: true,\n                    callback: function (path) {\n                        if (path) {\n                            $('#txtPostProcessor', page).val(path);\n                        }\n\n                        picker.close();\n                    }\n                });\n            });\n        });\n    }).on('pageshow', '#liveTvSettingsPage', function () {\n        loading.show();\n        const page = this;\n        ApiClient.getNamedConfiguration('livetv').then(function (config) {\n            loadPage(page, config);\n        });\n    });\n}\n"]}