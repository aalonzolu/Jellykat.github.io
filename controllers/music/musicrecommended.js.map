{"version":3,"sources":["controllers/music/musicrecommended.js"],"names":["define","_require","_exports","_browser","_layoutManager","userSettings","_inputManager","_loading","_cardBuilder","_dom","_imageLoader","_libraryMenu","mainTabsManager","_globalize","_scrollStyles","_embyItemscontainer","_embyTabs","_embyButton","_flexStyles","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","itemsPerRow","screenWidth","dom","getWindowSize","innerWidth","enableScrollX","layoutManager","desktop","getSquareShape","loadLatest","page","parentId","loading","show","userId","ApiClient","getCurrentUserId","options","IncludeItemTypes","Limit","Fields","ParentId","ImageTypeLimit","EnableImageTypes","EnableTotalRecordCount","getJSON","getUrl","then","items","elem","querySelector","innerHTML","cardBuilder","getCardsHtml","showUnplayedIndicator","showLatestItemsPopup","shape","showTitle","showParentTitle","lazy","centerText","overlayPlayButton","allowBottomPadding","cardLayout","coverImage","imageLoader","lazyChildren","hide","Promise","_resolve","_reject","imported","_ref","autoFocus","loadRecentlyPlayed","SortBy","SortOrder","Recursive","Filters","getItems","result","Items","length","classList","remove","add","itemsContainer","action","overlayMoreButton","loadFrequentlyPlayed","getTabs","name","globalize","translate","value","_default","view","params","_this","this","reload","loadSuggestionsTab","tabContent","console","debug","_ref2","render","topParentId","onBeforeTabChange","e","preLoadTab","index","getTabController","controller","renderedTabs","indexOf","preRender","parseInt","detail","selectedTabIndex","onTabChange","loadTab","currentTabIndex","push","renderTab","getTabContainers","querySelectorAll","callback","depends","concat","_ref3","controllerFactory","tabControllers","collectionType","mode","initTab","onInputCommand","command","preventDefault","Dashboard","navigate","tab","getDefaultTabIndex","folderId","containers","i","browser","mobile","tv","addEventListener","initTabs","setTabs","getAttribute","getItem","item","setAttribute","Name","libraryMenu","setTitle","inputManager","on","window","off","forEach","t","destroy"],"mappings":"AAAAA,OAAO,CAAC,UAAW,UAAW,UAAW,gBAAiB,eAAgB,eAAgB,UAAW,cAAe,MAAO,cAAe,cAAe,kBAAmB,YAAa,eAAgB,sBAAuB,YAAa,cAAe,eAAe,SAAUC,SAAUC,SAAUC,SAAUC,eAAgBC,aAAcC,cAAeC,SAAUC,aAAcC,KAAMC,aAAcC,aAAcC,gBAAiBC,WAAYC,cAAeC,oBAAqBC,UAAWC,YAAaC,aACjf,aAkBA,SAASC,uBAAuBC,KAAO,OAAOA,KAAOA,IAAIC,WAAaD,IAAM,CAAEE,QAASF,KAEvF,SAASG,QAAQH,KAAmV,OAAtOG,QAArD,mBAAXC,QAAoD,iBAApBA,OAAOC,SAAmC,SAASF,QAAQH,KAAO,cAAcA,KAA2B,SAASG,QAAQH,KAAO,OAAOA,KAAyB,mBAAXI,QAAyBJ,IAAIM,cAAgBF,QAAUJ,MAAQI,OAAOG,UAAY,gBAAkBP,MAAyBA,KAEnX,SAASQ,2BAA6B,GAAuB,mBAAZC,QAAwB,OAAO,KAAM,IAAIC,MAAQ,IAAID,QAA6F,OAAlFD,yBAA2B,SAASA,2BAA6B,OAAOE,OAAiBA,MAE1M,SAASC,wBAAwBX,KAAO,GAAIA,KAAOA,IAAIC,WAAc,OAAOD,IAAO,GAAY,OAARA,KAAiC,WAAjBG,QAAQH,MAAoC,mBAARA,IAAsB,MAAO,CAAEE,QAASF,KAAS,IAAIU,MAAQF,2BAA4B,GAAIE,OAASA,MAAME,IAAIZ,KAAQ,OAAOU,MAAMG,IAAIb,KAAQ,IAAIc,OAAS,GAAQC,sBAAwBC,OAAOC,gBAAkBD,OAAOE,yBAA0B,IAAK,IAAIC,OAAOnB,IAAO,GAAIgB,OAAOT,UAAUa,eAAeC,KAAKrB,IAAKmB,KAAM,CAAE,IAAIG,KAAOP,sBAAwBC,OAAOE,yBAAyBlB,IAAKmB,KAAO,KAAUG,OAASA,KAAKT,KAAOS,KAAKC,KAAQP,OAAOC,eAAeH,OAAQK,IAAKG,MAAgBR,OAAOK,KAAOnB,IAAImB,KAAyE,OAA7DL,OAAOZ,QAAUF,IAASU,OAASA,MAAMa,IAAIvB,IAAKc,QAAkBA,OAN9tB,SAASU,cACL,IAAMC,YAAcC,KAAAA,QAAIC,gBAAgBC,WAExC,OAAIH,aAAe,KACR,EAGPA,aAAe,KACR,GAGPA,aAAe,IACR,GAGJ,EAGX,SAASI,gBACL,OAAQC,eAAAA,QAAcC,QAG1B,SAASC,iBACL,OAAOH,gBAAkB,iBAAmB,SAGhD,SAASI,WAAWC,KAAMC,UACtBC,SAAAA,QAAQC,OACR,IAAMC,OAASC,UAAUC,mBACnBC,QAAU,CACZC,iBAAkB,QAClBC,MAAOd,gBAAkB,EAAIL,cAAgB,EAAIA,cACjDoB,OAAQ,wCACRC,SAAUV,SACVW,eAAgB,EAChBC,iBAAkB,gCAClBC,wBAAwB,GAE5BT,UAAUU,QAAQV,UAAUW,OAAO,SAAWZ,OAAS,gBAAiBG,UAAUU,MAAK,SAAUC,OAC7F,IAAIC,KAAOnB,KAAKoB,cAAc,uBAC9BD,KAAKE,UAAYC,aAAAA,QAAYC,aAAa,CACtCL,MAAOA,MACPM,uBAAuB,EACvBC,sBAAsB,EACtBC,MAAO5B,iBACP6B,WAAW,EACXC,iBAAiB,EACjBC,MAAM,EACNC,YAAY,EACZC,mBAAmB,EACnBC,oBAAqBrC,gBACrBsC,YAAY,EACZC,YAAY,IAEhBC,aAAAA,QAAYC,aAAajB,MACzBjB,SAAAA,QAAQmC,OAER,IAAAC,SAAA,SAAAC,SAAAC,SAAA,OAAA7F,SAAA,CAAO,gBAAP,SAAA8F,UAAA,OAAAF,SAAA9D,wBAAAgE,aAAAD,YAAsBvB,MAAK,SAAAyB,MAA4BA,KAA1B1E,QACb2E,UAAU3C,YAKlC,SAAS4C,mBAAmB5C,KAAMC,UAC9B,IAAMM,QAAU,CACZsC,OAAQ,aACRC,UAAW,aACXtC,iBAAkB,QAClBC,MAAOnB,cACPyD,WAAW,EACXrC,OAAQ,oCACRsC,QAAS,WACTrC,SAAUV,SACVW,eAAgB,EAChBC,iBAAkB,gCAClBC,wBAAwB,GAE5BT,UAAU4C,SAAS5C,UAAUC,mBAAoBC,SAASU,MAAK,SAAUiC,QACrE,IAAM/B,KAAOnB,KAAKoB,cAAc,mBAE5B8B,OAAOC,MAAMC,OACbjC,KAAKkC,UAAUC,OAAO,QAEtBnC,KAAKkC,UAAUE,IAAI,QAGvB,IAAIC,eAAiBrC,KAAKC,cAAc,mBACxCoC,eAAenC,UAAYC,aAAAA,QAAYC,aAAa,CAChDL,MAAOgC,OAAOC,MACd3B,uBAAuB,EACvBE,MAAO5B,iBACP6B,WAAW,EACXC,iBAAiB,EACjB6B,OAAQ,aACR5B,MAAM,EACNC,YAAY,EACZ4B,mBAAmB,EACnB1B,oBAAqBrC,gBACrBsC,YAAY,EACZC,YAAY,IAEhBC,aAAAA,QAAYC,aAAaoB,mBAIjC,SAASG,qBAAqB3D,KAAMC,UAChC,IAAMM,QAAU,CACZsC,OAAQ,YACRC,UAAW,aACXtC,iBAAkB,QAClBC,MAAOnB,cACPyD,WAAW,EACXrC,OAAQ,oCACRsC,QAAS,WACTrC,SAAUV,SACVW,eAAgB,EAChBC,iBAAkB,gCAClBC,wBAAwB,GAE5BT,UAAU4C,SAAS5C,UAAUC,mBAAoBC,SAASU,MAAK,SAAUiC,QACrE,IAAM/B,KAAOnB,KAAKoB,cAAc,cAE5B8B,OAAOC,MAAMC,OACbjC,KAAKkC,UAAUC,OAAO,QAEtBnC,KAAKkC,UAAUE,IAAI,QAGvB,IAAIC,eAAiBrC,KAAKC,cAAc,mBACxCoC,eAAenC,UAAYC,aAAAA,QAAYC,aAAa,CAChDL,MAAOgC,OAAOC,MACd3B,uBAAuB,EACvBE,MAAO5B,iBACP6B,WAAW,EACXC,iBAAiB,EACjB6B,OAAQ,aACR5B,MAAM,EACNC,YAAY,EACZ4B,mBAAmB,EACnB1B,oBAAqBrC,gBACrBsC,YAAY,EACZC,YAAY,IAEhBC,aAAAA,QAAYC,aAAaoB,mBAejC,SAASI,UACL,MAAO,CAAC,CACJC,KAAMC,WAAAA,QAAUC,UAAU,gBAC3B,CACCF,KAAMC,WAAAA,QAAUC,UAAU,WAC3B,CACCF,KAAMC,WAAAA,QAAUC,UAAU,uBAC3B,CACCF,KAAMC,WAAAA,QAAUC,UAAU,YAC3B,CACCF,KAAMC,WAAAA,QAAUC,UAAU,cAC3B,CACCF,KAAMC,WAAAA,QAAUC,UAAU,UAC3B,CACCF,KAAMC,WAAAA,QAAUC,UAAU,YA5LpCjF,OAAOC,eAAenC,SAAU,aAAc,CAC5CoH,OAAO,IAETpH,SAASoB,QAsNQ,SAAAiG,SAAUC,KAAMC,QAAQ,IAAAC,MAAAC,KACnC,SAASC,SACLpE,SAAAA,QAAQC,OAxDhB,SAASoE,mBAAmBvE,KAAMwE,WAAYvE,UAC1CwE,QAAQC,MAAM,sBACd3E,WAAWyE,WAAYvE,UACvB2C,mBAAmB4B,WAAYvE,UAC/B0D,qBAAqBa,WAAYvE,UAEjC,IAAAqC,SAAA,SAAAC,SAAAC,SAAA,OAAA7F,SAAA,CAAO,6BAAP,SAAA8F,UAAA,OAAAF,SAAA9D,wBAAAgE,aAAAD,YAAmCvB,MAAK,SAAA0D,OAA8BA,MAA5B3G,QACxB4G,OAAOJ,WAAYnE,UAAUC,mBAAoBL,SAAU,CAAC,kBAAmB,iBAAkB,qBAmD/GsE,CAAmBL,EADAA,KAAK9C,cAAc,mCACD+C,OAAOU,aAyBhD,SAASC,kBAAkBC,IAsF3B,SAASC,WAAWhF,KAAMiF,OACtBC,iBAAiBlF,KAAMiF,OAAO,SAAUE,aACA,GAAhCC,aAAaC,QAAQJ,QAAgBE,WAAWG,WAChDH,WAAWG,eAxFnBN,CAAWd,KAAMqB,SAASR,EAAES,OAAOC,mBAGvC,SAASC,YAAYX,IA0FrB,SAASY,QAAQ3F,KAAMiF,OACnBW,gBAAkBX,MAClBC,iBAAiBlF,KAAMiF,OAAO,SAAUE,aACA,GAAhCC,aAAaC,QAAQJ,SACrBG,aAAaS,KAAKZ,OAClBE,WAAWW,gBA9FnBH,CAAQzB,KAAMqB,SAASR,EAAES,OAAOC,mBAGpC,SAASM,mBACL,OAAO7B,KAAK8B,iBAAiB,mBAOjC,IAAMd,iBAAmB,SAAnBA,iBAAoBlF,KAAMiF,MAAOgB,UACnC,IAAIC,QAEJ,OAAQjB,OACJ,KAAK,EACDiB,QAAU,qCACV,MAEJ,KAAK,EACDA,QAAU,gCACV,MAEJ,KAAK,EACL,KAAK,EACDA,QAAU,iCACV,MAEJ,KAAK,EACDA,QAAU,mCACV,MAEJ,KAAK,EACDA,QAAU,0BACV,MAEJ,KAAK,EACDA,QAAU,gCAIlB,IAAA5D,SAAA,SAAAC,SAAAC,SAAA,OAAA7F,SAAA,CAAA,GAAAwJ,OAAOD,WAAP,SAAAzD,UAAA,OAAAF,SAAA9D,wBAAAgE,aAAAD,YAAgBvB,MAAK,SAAAmF,OAAkC,IAC/C5B,WADwB6B,kBAAuBD,MAAhCpI,QAGN,GAATiH,QACAT,WAAaN,KAAK9C,cAAc,+BAAiC6D,MAAQ,MACzEb,MAAKI,WAAaA,YAGtB,IAAIW,WAAamB,eAAerB,OAE3BE,aACDX,WAAaN,KAAK9C,cAAc,+BAAiC6D,MAAQ,MAGrEE,WADU,IAAVF,MACab,MACI,IAAVa,MACM,IAAIoB,kBAAkBnC,KAAMM,WAAY,CACjD+B,eAAgB,QAChBtG,SAAUkE,OAAOU,cAGR,IAAIwB,kBAAkBnC,KAAMC,OAAQK,YAGxC,GAATS,MACAE,WAAWqB,KAAO,eACF,GAATvB,QACPE,WAAWqB,KAAO,WAGtBF,eAAerB,OAASE,WACpBA,WAAWsB,SACXtB,WAAWsB,WAInBR,SAASd,gBAsBjB,SAASuB,eAAe3B,GACpB,OAAQA,EAAES,OAAOmB,SACb,IAAK,SACD5B,EAAE6B,iBACFC,UAAUC,SAAS,6CAA+C3C,OAAOU,cAIrF,IAAIe,gBAAkBL,SAASpB,OAAO4C,KAtK1C,SAASC,mBAAmBC,UACxB,OAAQlK,aAAa4B,IAAI,WAAasI,WAClC,IAAK,SACD,OAAO,EAEX,IAAK,eACD,OAAO,EAEX,IAAK,UACD,OAAO,EAEX,IAAK,YACD,OAAO,EAEX,IAAK,QACD,OAAO,EAEX,IAAK,SACD,OAAO,EAEX,QACI,OAAO,GAiJ8BD,CAAmB7C,OAAOU,cAEvER,KAAKoC,QAAU,WAIX,IAHA,IArIsBtF,KAsIhB+F,WADahD,KAAK9C,cAAc,mCACR4E,iBAAiB,mBAEtCmB,EAAI,EAAG/D,OAAS8D,WAAW9D,OAAQ+D,EAAI/D,OAAQ+D,IAxIlChG,KAyID+F,WAAWC,GA5IzBC,SAAAA,QAAQC,QAKXlG,KAAKkC,UAAUE,IAAI,iBAEf3D,eAAAA,QAAc0H,IACdnG,KAAKkC,UAAUE,IAAI,iBAGvBpC,KAAKkC,UAAUE,IAAI,WACnBpC,KAAKkC,UAAUC,OAAO,mBAEtBnC,KAAKkC,UAAUC,OAAO,iBACtBnC,KAAKkC,UAAUC,OAAO,iBACtBnC,KAAKkC,UAAUC,OAAO,WACtBnC,KAAKkC,UAAUE,IAAI,mBA+H3Bc,KAAKyB,UAAY,WACbxB,UAGJ,IAAMgC,eAAiB,GACjBlB,aAAe,GACrBlB,KAAKqD,iBAAiB,YAAY,SAAUxC,GAExC,GAvHJ,SAASyC,WACLlK,gBAAgBmK,QAAQvD,KAAM0B,gBAAiBhC,QAASmC,iBAAkBjB,kBAAmBY,aAqH7F8B,IACKtD,KAAKwD,aAAa,cAAe,CAClC,IAAMzH,SAAWkE,OAAOU,YAEpB5E,SACAI,UAAUsH,QAAQtH,UAAUC,mBAAoBL,UAAUgB,MAAK,SAAU2G,MACrE1D,KAAK2D,aAAa,aAAcD,KAAKE,MACrCC,aAAAA,QAAYC,SAASJ,KAAKE,UAG9B5D,KAAK2D,aAAa,aAAc/D,WAAAA,QAAUC,UAAU,aACpDgE,aAAAA,QAAYC,SAASlE,WAAAA,QAAUC,UAAU,cAIjDkE,cAAAA,QAAaC,GAAGC,OAAQzB,mBAE5BxC,KAAKqD,iBAAiB,kBAAkB,SAAUxC,GAC9CkD,cAAAA,QAAaG,IAAID,OAAQzB,mBAE7BxC,KAAKqD,iBAAiB,eAAe,SAAUxC,GAC3CuB,eAAe+B,SAAQ,SAAUC,GACzBA,EAAEC,SACFD,EAAEC,iBAlZtB1L,SAAAgB,uBAAAhB,UACAC,eAAAe,uBAAAf,gBACAC,aAAA0B,wBAAA1B,cACAC,cAAAa,uBAAAb,eACAC,SAAAY,uBAAAZ,UACAC,aAAAW,uBAAAX,cACAC,KAAAU,uBAAAV,MACAC,aAAAS,uBAAAT,cACAC,aAAAQ,uBAAAR,cACAC,gBAAAmB,wBAAAnB,iBACAC,WAAAM,uBAAAN","file":"musicrecommended.js","sourcesContent":["import browser from 'browser';\nimport layoutManager from 'layoutManager';\nimport * as userSettings from 'userSettings';\nimport inputManager from 'inputManager';\nimport loading from 'loading';\nimport cardBuilder from 'cardBuilder';\nimport dom from 'dom';\nimport imageLoader from 'imageLoader';\nimport libraryMenu from 'libraryMenu';\nimport * as mainTabsManager from 'mainTabsManager';\nimport globalize from 'globalize';\nimport 'scrollStyles';\nimport 'emby-itemscontainer';\nimport 'emby-tabs';\nimport 'emby-button';\nimport 'flexStyles';\n\n/* eslint-disable indent */\n\n    function itemsPerRow() {\n        const screenWidth = dom.getWindowSize().innerWidth;\n\n        if (screenWidth >= 1920) {\n            return 9;\n        }\n\n        if (screenWidth >= 1200) {\n            return 12;\n        }\n\n        if (screenWidth >= 1000) {\n            return 10;\n        }\n\n        return 8;\n    }\n\n    function enableScrollX() {\n        return !layoutManager.desktop;\n    }\n\n    function getSquareShape() {\n        return enableScrollX() ? 'overflowSquare' : 'square';\n    }\n\n    function loadLatest(page, parentId) {\n        loading.show();\n        const userId = ApiClient.getCurrentUserId();\n        const options = {\n            IncludeItemTypes: 'Audio',\n            Limit: enableScrollX() ? 3 * itemsPerRow() : 2 * itemsPerRow(),\n            Fields: 'PrimaryImageAspectRatio,BasicSyncInfo',\n            ParentId: parentId,\n            ImageTypeLimit: 1,\n            EnableImageTypes: 'Primary,Backdrop,Banner,Thumb',\n            EnableTotalRecordCount: false\n        };\n        ApiClient.getJSON(ApiClient.getUrl('Users/' + userId + '/Items/Latest', options)).then(function (items) {\n            var elem = page.querySelector('#recentlyAddedSongs');\n            elem.innerHTML = cardBuilder.getCardsHtml({\n                items: items,\n                showUnplayedIndicator: false,\n                showLatestItemsPopup: false,\n                shape: getSquareShape(),\n                showTitle: true,\n                showParentTitle: true,\n                lazy: true,\n                centerText: true,\n                overlayPlayButton: true,\n                allowBottomPadding: !enableScrollX(),\n                cardLayout: false,\n                coverImage: true\n            });\n            imageLoader.lazyChildren(elem);\n            loading.hide();\n\n            import('autoFocuser').then(({default: autoFocuser}) => {\n                autoFocuser.autoFocus(page);\n            });\n        });\n    }\n\n    function loadRecentlyPlayed(page, parentId) {\n        const options = {\n            SortBy: 'DatePlayed',\n            SortOrder: 'Descending',\n            IncludeItemTypes: 'Audio',\n            Limit: itemsPerRow(),\n            Recursive: true,\n            Fields: 'PrimaryImageAspectRatio,AudioInfo',\n            Filters: 'IsPlayed',\n            ParentId: parentId,\n            ImageTypeLimit: 1,\n            EnableImageTypes: 'Primary,Backdrop,Banner,Thumb',\n            EnableTotalRecordCount: false\n        };\n        ApiClient.getItems(ApiClient.getCurrentUserId(), options).then(function (result) {\n            const elem = page.querySelector('#recentlyPlayed');\n\n            if (result.Items.length) {\n                elem.classList.remove('hide');\n            } else {\n                elem.classList.add('hide');\n            }\n\n            var itemsContainer = elem.querySelector('.itemsContainer');\n            itemsContainer.innerHTML = cardBuilder.getCardsHtml({\n                items: result.Items,\n                showUnplayedIndicator: false,\n                shape: getSquareShape(),\n                showTitle: true,\n                showParentTitle: true,\n                action: 'instantmix',\n                lazy: true,\n                centerText: true,\n                overlayMoreButton: true,\n                allowBottomPadding: !enableScrollX(),\n                cardLayout: false,\n                coverImage: true\n            });\n            imageLoader.lazyChildren(itemsContainer);\n        });\n    }\n\n    function loadFrequentlyPlayed(page, parentId) {\n        const options = {\n            SortBy: 'PlayCount',\n            SortOrder: 'Descending',\n            IncludeItemTypes: 'Audio',\n            Limit: itemsPerRow(),\n            Recursive: true,\n            Fields: 'PrimaryImageAspectRatio,AudioInfo',\n            Filters: 'IsPlayed',\n            ParentId: parentId,\n            ImageTypeLimit: 1,\n            EnableImageTypes: 'Primary,Backdrop,Banner,Thumb',\n            EnableTotalRecordCount: false\n        };\n        ApiClient.getItems(ApiClient.getCurrentUserId(), options).then(function (result) {\n            const elem = page.querySelector('#topPlayed');\n\n            if (result.Items.length) {\n                elem.classList.remove('hide');\n            } else {\n                elem.classList.add('hide');\n            }\n\n            var itemsContainer = elem.querySelector('.itemsContainer');\n            itemsContainer.innerHTML = cardBuilder.getCardsHtml({\n                items: result.Items,\n                showUnplayedIndicator: false,\n                shape: getSquareShape(),\n                showTitle: true,\n                showParentTitle: true,\n                action: 'instantmix',\n                lazy: true,\n                centerText: true,\n                overlayMoreButton: true,\n                allowBottomPadding: !enableScrollX(),\n                cardLayout: false,\n                coverImage: true\n            });\n            imageLoader.lazyChildren(itemsContainer);\n        });\n    }\n\n    function loadSuggestionsTab(page, tabContent, parentId) {\n        console.debug('loadSuggestionsTab');\n        loadLatest(tabContent, parentId);\n        loadRecentlyPlayed(tabContent, parentId);\n        loadFrequentlyPlayed(tabContent, parentId);\n\n        import('components/favoriteitems').then(({default: favoriteItems}) => {\n            favoriteItems.render(tabContent, ApiClient.getCurrentUserId(), parentId, ['favoriteArtists', 'favoriteAlbums', 'favoriteSongs']);\n        });\n    }\n\n    function getTabs() {\n        return [{\n            name: globalize.translate('Suggestions')\n        }, {\n            name: globalize.translate('Albums')\n        }, {\n            name: globalize.translate('HeaderAlbumArtists')\n        }, {\n            name: globalize.translate('Artists')\n        }, {\n            name: globalize.translate('Playlists')\n        }, {\n            name: globalize.translate('Songs')\n        }, {\n            name: globalize.translate('Genres')\n        }];\n    }\n\n    function getDefaultTabIndex(folderId) {\n        switch (userSettings.get('landing-' + folderId)) {\n            case 'albums':\n                return 1;\n\n            case 'albumartists':\n                return 2;\n\n            case 'artists':\n                return 3;\n\n            case 'playlists':\n                return 4;\n\n            case 'songs':\n                return 5;\n\n            case 'genres':\n                return 6;\n\n            default:\n                return 0;\n        }\n    }\n\n    export default function (view, params) {\n        function reload() {\n            loading.show();\n            const tabContent = view.querySelector(\".pageTabContent[data-index='0']\");\n            loadSuggestionsTab(view, tabContent, params.topParentId);\n        }\n\n        function enableScrollX() {\n            return browser.mobile;\n        }\n\n        function setScrollClasses(elem, scrollX) {\n            if (scrollX) {\n                elem.classList.add('hiddenScrollX');\n\n                if (layoutManager.tv) {\n                    elem.classList.add('smoothScrollX');\n                }\n\n                elem.classList.add('scrollX');\n                elem.classList.remove('vertical-wrap');\n            } else {\n                elem.classList.remove('hiddenScrollX');\n                elem.classList.remove('smoothScrollX');\n                elem.classList.remove('scrollX');\n                elem.classList.add('vertical-wrap');\n            }\n        }\n\n        function onBeforeTabChange(e) {\n            preLoadTab(view, parseInt(e.detail.selectedTabIndex));\n        }\n\n        function onTabChange(e) {\n            loadTab(view, parseInt(e.detail.selectedTabIndex));\n        }\n\n        function getTabContainers() {\n            return view.querySelectorAll('.pageTabContent');\n        }\n\n        function initTabs() {\n            mainTabsManager.setTabs(view, currentTabIndex, getTabs, getTabContainers, onBeforeTabChange, onTabChange);\n        }\n\n        const getTabController = (page, index, callback) => {\n            let depends;\n\n            switch (index) {\n                case 0:\n                    depends = 'controllers/music/musicrecommended';\n                    break;\n\n                case 1:\n                    depends = 'controllers/music/musicalbums';\n                    break;\n\n                case 2:\n                case 3:\n                    depends = 'controllers/music/musicartists';\n                    break;\n\n                case 4:\n                    depends = 'controllers/music/musicplaylists';\n                    break;\n\n                case 5:\n                    depends = 'controllers/music/songs';\n                    break;\n\n                case 6:\n                    depends = 'controllers/music/musicgenres';\n                    break;\n            }\n\n            import(depends).then(({default: controllerFactory}) => {\n                let tabContent;\n\n                if (index == 0) {\n                    tabContent = view.querySelector(\".pageTabContent[data-index='\" + index + \"']\");\n                    this.tabContent = tabContent;\n                }\n\n                let controller = tabControllers[index];\n\n                if (!controller) {\n                    tabContent = view.querySelector(\".pageTabContent[data-index='\" + index + \"']\");\n\n                    if (index === 0) {\n                        controller = this;\n                    } else if (index === 7) {\n                        controller = new controllerFactory(view, tabContent, {\n                            collectionType: 'music',\n                            parentId: params.topParentId\n                        });\n                    } else {\n                        controller = new controllerFactory(view, params, tabContent);\n                    }\n\n                    if (index == 2) {\n                        controller.mode = 'albumartists';\n                    } else if (index == 3) {\n                        controller.mode = 'artists';\n                    }\n\n                    tabControllers[index] = controller;\n                    if (controller.initTab) {\n                        controller.initTab();\n                    }\n                }\n\n                callback(controller);\n            });\n        };\n\n        function preLoadTab(page, index) {\n            getTabController(page, index, function (controller) {\n                if (renderedTabs.indexOf(index) == -1 && controller.preRender) {\n                    controller.preRender();\n                }\n            });\n        }\n\n        function loadTab(page, index) {\n            currentTabIndex = index;\n            getTabController(page, index, function (controller) {\n                if (renderedTabs.indexOf(index) == -1) {\n                    renderedTabs.push(index);\n                    controller.renderTab();\n                }\n            });\n        }\n\n        function onInputCommand(e) {\n            switch (e.detail.command) {\n                case 'search':\n                    e.preventDefault();\n                    Dashboard.navigate('search.html?collectionType=music&parentId=' + params.topParentId);\n            }\n        }\n\n        let currentTabIndex = parseInt(params.tab || getDefaultTabIndex(params.topParentId));\n\n        this.initTab = function () {\n            const tabContent = view.querySelector(\".pageTabContent[data-index='0']\");\n            const containers = tabContent.querySelectorAll('.itemsContainer');\n\n            for (let i = 0, length = containers.length; i < length; i++) {\n                setScrollClasses(containers[i], enableScrollX());\n            }\n        };\n\n        this.renderTab = function () {\n            reload();\n        };\n\n        const tabControllers = [];\n        const renderedTabs = [];\n        view.addEventListener('viewshow', function (e) {\n            initTabs();\n            if (!view.getAttribute('data-title')) {\n                const parentId = params.topParentId;\n\n                if (parentId) {\n                    ApiClient.getItem(ApiClient.getCurrentUserId(), parentId).then(function (item) {\n                        view.setAttribute('data-title', item.Name);\n                        libraryMenu.setTitle(item.Name);\n                    });\n                } else {\n                    view.setAttribute('data-title', globalize.translate('TabMusic'));\n                    libraryMenu.setTitle(globalize.translate('TabMusic'));\n                }\n            }\n\n            inputManager.on(window, onInputCommand);\n        });\n        view.addEventListener('viewbeforehide', function (e) {\n            inputManager.off(window, onInputCommand);\n        });\n        view.addEventListener('viewdestroy', function (e) {\n            tabControllers.forEach(function (t) {\n                if (t.destroy) {\n                    t.destroy();\n                }\n            });\n        });\n    }\n\n/* eslint-enable indent */\n"]}