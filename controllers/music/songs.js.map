{"version":3,"sources":["controllers/music/songs.js"],"names":["define","_require","_exports","_events","_libraryBrowser","_imageLoader","_listView","_loading","userSettings","_globalize","_embyItemscontainer","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","value","_default","view","params","tabContent","getPageData","context","getSavedQueryKey","pageData","data","query","SortBy","SortOrder","IncludeItemTypes","Recursive","Fields","StartIndex","ImageTypeLimit","EnableImageTypes","libraryPageSize","ParentId","topParentId","libraryBrowser","loadSavedQueryValues","getQuery","savedQueryKey","reloadItems","page","loading","show","isLoading","ApiClient","getItems","Dashboard","getCurrentUserId","then","result","onNextPageClick","Limit","onPreviousPageClick","Math","max","window","scrollTo","pagingHtml","getQueryPagingHtml","startIndex","limit","totalRecordCount","TotalRecordCount","showLimit","updatePageSizeSetting","addLayoutButton","sortButton","filterButton","html","listView","getListViewHtml","items","Items","action","smallIcon","artist","addToListButton","elems","querySelectorAll","i","length","innerHTML","addEventListener","itemsContainer","querySelector","imageLoader","lazyChildren","saveQueryValues","hide","Promise","_resolve","_reject","imported","_ref","autoFocus","self","this","showFilterMenu","_ref2","filterDialog","filterDialogFactory","mode","serverId","events","on","getCurrentViewStyle","initPage","e","showSortMenu","name","globalize","translate","id","callback","button","target","renderTab","destroy"],"mappings":"AAAAA,OAAO,CAAC,UAAW,UAAW,SAAU,iBAAkB,cAAe,WAAY,UAAW,eAAgB,YAAa,wBAAwB,SAAUC,SAAUC,SAAUC,QAASC,gBAAiBC,aAAcC,UAAWC,SAAUC,aAAcC,WAAYC,qBACxQ,aAcA,SAASC,uBAAuBC,KAAO,OAAOA,KAAOA,IAAIC,WAAaD,IAAM,CAAEE,QAASF,KAEvF,SAASG,QAAQH,KAAmV,OAAtOG,QAArD,mBAAXC,QAAoD,iBAApBA,OAAOC,SAAmC,SAASF,QAAQH,KAAO,cAAcA,KAA2B,SAASG,QAAQH,KAAO,OAAOA,KAAyB,mBAAXI,QAAyBJ,IAAIM,cAAgBF,QAAUJ,MAAQI,OAAOG,UAAY,gBAAkBP,MAAyBA,KAEnX,SAASQ,2BAA6B,GAAuB,mBAAZC,QAAwB,OAAO,KAAM,IAAIC,MAAQ,IAAID,QAA6F,OAAlFD,yBAA2B,SAASA,2BAA6B,OAAOE,OAAiBA,MAE1M,SAASC,wBAAwBX,KAAO,GAAIA,KAAOA,IAAIC,WAAc,OAAOD,IAAO,GAAY,OAARA,KAAiC,WAAjBG,QAAQH,MAAoC,mBAARA,IAAsB,MAAO,CAAEE,QAASF,KAAS,IAAIU,MAAQF,2BAA4B,GAAIE,OAASA,MAAME,IAAIZ,KAAQ,OAAOU,MAAMG,IAAIb,KAAQ,IAAIc,OAAS,GAAQC,sBAAwBC,OAAOC,gBAAkBD,OAAOE,yBAA0B,IAAK,IAAIC,OAAOnB,IAAO,GAAIgB,OAAOT,UAAUa,eAAeC,KAAKrB,IAAKmB,KAAM,CAAE,IAAIG,KAAOP,sBAAwBC,OAAOE,yBAAyBlB,IAAKmB,KAAO,KAAUG,OAASA,KAAKT,KAAOS,KAAKC,KAAQP,OAAOC,eAAeH,OAAQK,IAAKG,MAAgBR,OAAOK,KAAOnB,IAAImB,KAAyE,OAA7DL,OAAOZ,QAAUF,IAASU,OAASA,MAAMa,IAAIvB,IAAKc,QAAkBA,OAlBhuBE,OAAOC,eAAe3B,SAAU,aAAc,CAC5CkC,OAAO,IAETlC,SAASY,QAKQ,SAAAuB,SAAUC,KAAMC,OAAQC,YACnC,SAASC,YAAYC,SACjB,IAAMX,IAAMY,iBAAiBD,SACzBE,SAAWC,KAAKd,KAwBpB,OAtBKa,WACDA,SAAWC,KAAKd,KAAO,CACnBe,MAAO,CACHC,OAAQ,iBACRC,UAAW,YACXC,iBAAkB,QAClBC,WAAW,EACXC,OAAQ,qBACRC,WAAY,EACZC,eAAgB,EAChBC,iBAAkB,YAItB9C,aAAa+C,kBAAoB,IACjCX,SAASE,MAAT,MAA0BtC,aAAa+C,mBAG3CX,SAASE,MAAMU,SAAWjB,OAAOkB,YACjCC,gBAAAA,QAAeC,qBAAqB5B,IAAKa,SAASE,QAG/CF,SAGX,SAASgB,SAASlB,SACd,OAAOD,YAAYC,SAASI,MAGhC,SAASH,iBAAiBD,SAKtB,OAJKA,QAAQmB,gBACTnB,QAAQmB,cAAgBH,gBAAAA,QAAef,iBAAiB,UAGrDD,QAAQmB,cAGnB,SAASC,YAAYC,MACjBC,SAAAA,QAAQC,OACRC,WAAY,EACZ,IAAMpB,MAAQc,SAASG,MACvBI,UAAUC,SAASC,UAAUC,mBAAoBxB,OAAOyB,MAAK,SAAUC,QACnE,SAASC,kBACDP,YAIA1D,aAAa+C,kBAAoB,IACjCT,MAAMM,YAAcN,MAAM4B,OAE9BZ,YAAYtB,aAGhB,SAASmC,sBACDT,YAIA1D,aAAa+C,kBAAoB,IACjCT,MAAMM,WAAawB,KAAKC,IAAI,EAAG/B,MAAMM,WAAaN,MAAM4B,QAE5DZ,YAAYtB,aAGhBsC,OAAOC,SAAS,EAAG,GAoBnB,IAnBA,IAAMC,WAAatB,gBAAAA,QAAeuB,mBAAmB,CACjDC,WAAYpC,MAAMM,WAClB+B,MAAOrC,MAAM4B,MACbU,iBAAkBZ,OAAOa,iBACzBC,WAAW,EACXC,uBAAuB,EACvBC,iBAAiB,EACjBC,YAAY,EACZC,cAAc,IAEZC,KAAOC,UAAAA,QAASC,gBAAgB,CAClCC,MAAOtB,OAAOuB,MACdC,OAAQ,kBACRC,WAAW,EACXC,QAAQ,EACRC,iBAAiB,IAEjBC,MAAQ5D,WAAW6D,iBAAiB,WAE/BC,EAAI,EAAGC,OAASH,MAAMG,OAAQD,EAAIC,OAAQD,IAC/CF,MAAME,GAAGE,UAAYxB,WAIzB,IAAK,IAAIsB,GAAI,EAAGC,SADhBH,MAAQ5D,WAAW6D,iBAAiB,iBACLE,OAAQD,GAAIC,QAAQD,KAC/CF,MAAME,IAAGG,iBAAiB,QAAShC,iBAIvC,IAAK,IAAI6B,IAAI,EAAGC,UADhBH,MAAQ5D,WAAW6D,iBAAiB,qBACLE,OAAQD,IAAIC,SAAQD,MAC/CF,MAAME,KAAGG,iBAAiB,QAAS9B,qBAGvC,IAAM+B,eAAiBlE,WAAWmE,cAAc,mBAChDD,eAAeF,UAAYb,KAC3BiB,aAAAA,QAAYC,aAAaH,gBACzBhD,gBAAAA,QAAeoD,gBAAgBnE,iBAAiBoB,MAAOjB,OACvDkB,SAAAA,QAAQ+C,OACR7C,WAAY,EAEZ,IAAA8C,SAAA,SAAAC,SAAAC,SAAA,OAAAjH,SAAA,CAAO,gBAAP,SAAAkH,UAAA,OAAAF,SAAA1F,wBAAA4F,aAAAD,YAAsB3C,MAAK,SAAA6C,MAA4BA,KAA1BtG,QACbuG,UAAUtD,YAKlC,IAAMuD,KAAOC,KACP1E,KAAO,GACTqB,WAAY,EAEhBoD,KAAKE,eAAiB,WAClB,IAAAR,SAAA,SAAAC,SAAAC,SAAA,OAAAjH,SAAA,CAAO,yCAAP,SAAAkH,UAAA,OAAAF,SAAA1F,wBAAA4F,aAAAD,YAA+C3C,MAAK,SAAAkD,OAAoC,IAC9EC,aAAe,IAAIC,EAD2DF,MAAlC3G,SACL,CACzCgC,MAAOc,SAASpB,YAChBoF,KAAM,QACNC,SAAU1D,UAAU0D,aAExBC,QAAAA,QAAOC,GAAGL,aAAc,gBAAgB,WACpC9D,SAASpB,YAAYY,WAAa,EAClCU,YAAYtB,eAEhBkF,aAAazD,WAIrBqD,KAAKU,oBAAsB,WACvB,OAAOvF,YAAYD,YAAYF,MAGnC,SAAS2F,SAASzF,YACdA,WAAWmE,cAAc,cAAcF,iBAAiB,SAAS,WAC7Da,KAAKE,oBAEThF,WAAWmE,cAAc,YAAYF,iBAAiB,SAAS,SAAUyB,GACrExE,gBAAAA,QAAeyE,aAAa,CACxBrC,MAAO,CAAC,CACJsC,KAAMC,WAAAA,QAAUC,UAAU,mBAC1BC,GAAI,QACL,CACCH,KAAMC,WAAAA,QAAUC,UAAU,eAC1BC,GAAI,kBACL,CACCH,KAAMC,WAAAA,QAAUC,UAAU,qBAC1BC,GAAI,8BACL,CACCH,KAAMC,WAAAA,QAAUC,UAAU,gBAC1BC,GAAI,yBACL,CACCH,KAAMC,WAAAA,QAAUC,UAAU,mBAC1BC,GAAI,wBACL,CACCH,KAAMC,WAAAA,QAAUC,UAAU,oBAC1BC,GAAI,uBACL,CACCH,KAAMC,WAAAA,QAAUC,UAAU,mBAC1BC,GAAI,sBACL,CACCH,KAAMC,WAAAA,QAAUC,UAAU,qBAC1BC,GAAI,2CACL,CACCH,KAAMC,WAAAA,QAAUC,UAAU,iBAC1BC,GAAI,uCAERC,SAAU,SAAAA,WACN5E,SAASpB,YAAYY,WAAa,EAClCU,YAAYtB,aAEhBM,MAAOc,SAASpB,YAChBiG,OAAQP,EAAEQ,YAKtBT,CAASzF,YAET8E,KAAKqB,UAAY,WACb7E,YAAYtB,aAGhB8E,KAAKsB,QAAU,cAxMvBzI,QAAAQ,uBAAAR,SACAC,gBAAAO,uBAAAP,iBACAC,aAAAM,uBAAAN,cACAC,UAAAK,uBAAAL,WACAC,SAAAI,uBAAAJ,UACAC,aAAAe,wBAAAf,cACAC,WAAAE,uBAAAF","file":"songs.js","sourcesContent":["import events from 'events';\nimport libraryBrowser from 'libraryBrowser';\nimport imageLoader from 'imageLoader';\nimport listView from 'listView';\nimport loading from 'loading';\nimport * as userSettings from 'userSettings';\nimport globalize from 'globalize';\nimport 'emby-itemscontainer';\n\n/* eslint-disable indent */\n\n    export default function (view, params, tabContent) {\n        function getPageData(context) {\n            const key = getSavedQueryKey(context);\n            let pageData = data[key];\n\n            if (!pageData) {\n                pageData = data[key] = {\n                    query: {\n                        SortBy: 'Album,SortName',\n                        SortOrder: 'Ascending',\n                        IncludeItemTypes: 'Audio',\n                        Recursive: true,\n                        Fields: 'AudioInfo,ParentId',\n                        StartIndex: 0,\n                        ImageTypeLimit: 1,\n                        EnableImageTypes: 'Primary'\n                    }\n                };\n\n                if (userSettings.libraryPageSize() > 0) {\n                    pageData.query['Limit'] = userSettings.libraryPageSize();\n                }\n\n                pageData.query.ParentId = params.topParentId;\n                libraryBrowser.loadSavedQueryValues(key, pageData.query);\n            }\n\n            return pageData;\n        }\n\n        function getQuery(context) {\n            return getPageData(context).query;\n        }\n\n        function getSavedQueryKey(context) {\n            if (!context.savedQueryKey) {\n                context.savedQueryKey = libraryBrowser.getSavedQueryKey('songs');\n            }\n\n            return context.savedQueryKey;\n        }\n\n        function reloadItems(page) {\n            loading.show();\n            isLoading = true;\n            const query = getQuery(page);\n            ApiClient.getItems(Dashboard.getCurrentUserId(), query).then(function (result) {\n                function onNextPageClick() {\n                    if (isLoading) {\n                        return;\n                    }\n\n                    if (userSettings.libraryPageSize() > 0) {\n                        query.StartIndex += query.Limit;\n                    }\n                    reloadItems(tabContent);\n                }\n\n                function onPreviousPageClick() {\n                    if (isLoading) {\n                        return;\n                    }\n\n                    if (userSettings.libraryPageSize() > 0) {\n                        query.StartIndex = Math.max(0, query.StartIndex - query.Limit);\n                    }\n                    reloadItems(tabContent);\n                }\n\n                window.scrollTo(0, 0);\n                const pagingHtml = libraryBrowser.getQueryPagingHtml({\n                    startIndex: query.StartIndex,\n                    limit: query.Limit,\n                    totalRecordCount: result.TotalRecordCount,\n                    showLimit: false,\n                    updatePageSizeSetting: false,\n                    addLayoutButton: false,\n                    sortButton: false,\n                    filterButton: false\n                });\n                const html = listView.getListViewHtml({\n                    items: result.Items,\n                    action: 'playallfromhere',\n                    smallIcon: true,\n                    artist: true,\n                    addToListButton: true\n                });\n                let elems = tabContent.querySelectorAll('.paging');\n\n                for (let i = 0, length = elems.length; i < length; i++) {\n                    elems[i].innerHTML = pagingHtml;\n                }\n\n                elems = tabContent.querySelectorAll('.btnNextPage');\n                for (let i = 0, length = elems.length; i < length; i++) {\n                    elems[i].addEventListener('click', onNextPageClick);\n                }\n\n                elems = tabContent.querySelectorAll('.btnPreviousPage');\n                for (let i = 0, length = elems.length; i < length; i++) {\n                    elems[i].addEventListener('click', onPreviousPageClick);\n                }\n\n                const itemsContainer = tabContent.querySelector('.itemsContainer');\n                itemsContainer.innerHTML = html;\n                imageLoader.lazyChildren(itemsContainer);\n                libraryBrowser.saveQueryValues(getSavedQueryKey(page), query);\n                loading.hide();\n                isLoading = false;\n\n                import('autoFocuser').then(({default: autoFocuser}) => {\n                    autoFocuser.autoFocus(page);\n                });\n            });\n        }\n\n        const self = this;\n        const data = {};\n        let isLoading = false;\n\n        self.showFilterMenu = function () {\n            import('components/filterdialog/filterdialog').then(({default: filterDialogFactory}) => {\n                const filterDialog = new filterDialogFactory({\n                    query: getQuery(tabContent),\n                    mode: 'songs',\n                    serverId: ApiClient.serverId()\n                });\n                events.on(filterDialog, 'filterchange', function () {\n                    getQuery(tabContent).StartIndex = 0;\n                    reloadItems(tabContent);\n                });\n                filterDialog.show();\n            });\n        };\n\n        self.getCurrentViewStyle = function () {\n            return getPageData(tabContent).view;\n        };\n\n        function initPage(tabContent) {\n            tabContent.querySelector('.btnFilter').addEventListener('click', function () {\n                self.showFilterMenu();\n            });\n            tabContent.querySelector('.btnSort').addEventListener('click', function (e) {\n                libraryBrowser.showSortMenu({\n                    items: [{\n                        name: globalize.translate('OptionTrackName'),\n                        id: 'Name'\n                    }, {\n                        name: globalize.translate('OptionAlbum'),\n                        id: 'Album,SortName'\n                    }, {\n                        name: globalize.translate('OptionAlbumArtist'),\n                        id: 'AlbumArtist,Album,SortName'\n                    }, {\n                        name: globalize.translate('OptionArtist'),\n                        id: 'Artist,Album,SortName'\n                    }, {\n                        name: globalize.translate('OptionDateAdded'),\n                        id: 'DateCreated,SortName'\n                    }, {\n                        name: globalize.translate('OptionDatePlayed'),\n                        id: 'DatePlayed,SortName'\n                    }, {\n                        name: globalize.translate('OptionPlayCount'),\n                        id: 'PlayCount,SortName'\n                    }, {\n                        name: globalize.translate('OptionReleaseDate'),\n                        id: 'PremiereDate,AlbumArtist,Album,SortName'\n                    }, {\n                        name: globalize.translate('OptionRuntime'),\n                        id: 'Runtime,AlbumArtist,Album,SortName'\n                    }],\n                    callback: function () {\n                        getQuery(tabContent).StartIndex = 0;\n                        reloadItems(tabContent);\n                    },\n                    query: getQuery(tabContent),\n                    button: e.target\n                });\n            });\n        }\n\n        initPage(tabContent);\n\n        self.renderTab = function () {\n            reloadItems(tabContent);\n        };\n\n        self.destroy = function () {};\n    }\n\n/* eslint-enable indent */\n"]}