{"version":3,"sources":["controllers/dashboard/users/userpasswordpage.js"],"names":["define","_require","_exports","_loading","_libraryMenu","_globalize","_embyButton","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","loadUser","page","params","userid","userId","ApiClient","getUser","then","user","Dashboard","getCurrentUser","loggedInUser","libraryMenu","setTitle","Name","querySelector","innerHTML","showPasswordSection","showLocalAccessSection","ConnectLinkType","classList","add","HasConfiguredPassword","remove","Policy","IsAdministrator","EnableUserPreferenceAccess","txtEasyPassword","value","HasConfiguredEasyPassword","placeholder","removeAttribute","checked","Configuration","EnableLocalPassword","Promise","_resolve","_reject","imported","_ref","autoFocus","_default","view","onEasyPasswordSaved","updateUserConfiguration","Id","loading","hide","_ref2","toast","globalize","translate","addEventListener","onSubmit","e","this","_ref4","show","savePassword","currentPassword","newPassword","contains","updateUserPassword","_ref3","alert","title","message","preventDefault","onLocalAccessSubmit","saveEasyPassword","easyPassword","updateEasyPassword","resetEasyPassword","msg","_ref6","confirm","resetPassword","_ref5","resetUserPassword"],"mappings":"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","file":"userpasswordpage.js","sourcesContent":["import loading from 'loading';\nimport libraryMenu from 'libraryMenu';\nimport globalize from 'globalize';\nimport 'emby-button';\n\n/* eslint-disable indent */\n\n    function loadUser(page, params) {\n        const userid = params.userId;\n        ApiClient.getUser(userid).then(function (user) {\n            Dashboard.getCurrentUser().then(function (loggedInUser) {\n                libraryMenu.setTitle(user.Name);\n                page.querySelector('.username').innerHTML = user.Name;\n                let showPasswordSection = true;\n                let showLocalAccessSection = false;\n\n                if (user.ConnectLinkType == 'Guest') {\n                    page.querySelector('.localAccessSection').classList.add('hide');\n                    showPasswordSection = false;\n                } else if (user.HasConfiguredPassword) {\n                    page.querySelector('#btnResetPassword').classList.remove('hide');\n                    page.querySelector('#fldCurrentPassword').classList.remove('hide');\n                    showLocalAccessSection = true;\n                } else {\n                    page.querySelector('#btnResetPassword').classList.add('hide');\n                    page.querySelector('#fldCurrentPassword').classList.add('hide');\n                }\n\n                if (showPasswordSection && (loggedInUser.Policy.IsAdministrator || user.Policy.EnableUserPreferenceAccess)) {\n                    page.querySelector('.passwordSection').classList.remove('hide');\n                } else {\n                    page.querySelector('.passwordSection').classList.add('hide');\n                }\n\n                if (showLocalAccessSection && (loggedInUser.Policy.IsAdministrator || user.Policy.EnableUserPreferenceAccess)) {\n                    page.querySelector('.localAccessSection').classList.remove('hide');\n                } else {\n                    page.querySelector('.localAccessSection').classList.add('hide');\n                }\n\n                const txtEasyPassword = page.querySelector('#txtEasyPassword');\n                txtEasyPassword.value = '';\n\n                if (user.HasConfiguredEasyPassword) {\n                    txtEasyPassword.placeholder = '******';\n                    page.querySelector('#btnResetEasyPassword').classList.remove('hide');\n                } else {\n                    txtEasyPassword.removeAttribute('placeholder');\n                    txtEasyPassword.placeholder = '';\n                    page.querySelector('#btnResetEasyPassword').classList.add('hide');\n                }\n\n                page.querySelector('.chkEnableLocalEasyPassword').checked = user.Configuration.EnableLocalPassword;\n\n                import('autoFocuser').then(({default: autoFocuser}) => {\n                    autoFocuser.autoFocus(page);\n                });\n            });\n        });\n        page.querySelector('#txtCurrentPassword').value = '';\n        page.querySelector('#txtNewPassword').value = '';\n        page.querySelector('#txtNewPasswordConfirm').value = '';\n    }\n\n    export default function (view, params) {\n        function saveEasyPassword() {\n            const userId = params.userId;\n            const easyPassword = view.querySelector('#txtEasyPassword').value;\n\n            if (easyPassword) {\n                ApiClient.updateEasyPassword(userId, easyPassword).then(function () {\n                    onEasyPasswordSaved(userId);\n                });\n            } else {\n                onEasyPasswordSaved(userId);\n            }\n        }\n\n        function onEasyPasswordSaved(userId) {\n            ApiClient.getUser(userId).then(function (user) {\n                user.Configuration.EnableLocalPassword = view.querySelector('.chkEnableLocalEasyPassword').checked;\n                ApiClient.updateUserConfiguration(user.Id, user.Configuration).then(function () {\n                    loading.hide();\n\n                    import('toast').then(({default: toast}) => {\n                        toast(globalize.translate('SettingsSaved'));\n                    });\n\n                    loadUser(view, params);\n                });\n            });\n        }\n\n        function savePassword() {\n            const userId = params.userId;\n            let currentPassword = view.querySelector('#txtCurrentPassword').value;\n            const newPassword = view.querySelector('#txtNewPassword').value;\n\n            if (view.querySelector('#fldCurrentPassword').classList.contains('hide')) {\n                // Firefox does not respect autocomplete=off, so clear it if the field is supposed to be hidden (and blank)\n                // This should only happen when user.HasConfiguredPassword is false, but this information is not passed on\n                currentPassword = '';\n            }\n\n            ApiClient.updateUserPassword(userId, currentPassword, newPassword).then(function () {\n                loading.hide();\n\n                import('toast').then(({default: toast}) => {\n                    toast(globalize.translate('PasswordSaved'));\n                });\n\n                loadUser(view, params);\n            }, function () {\n                loading.hide();\n                Dashboard.alert({\n                    title: globalize.translate('HeaderLoginFailure'),\n                    message: globalize.translate('MessageInvalidUser')\n                });\n            });\n        }\n\n        function onSubmit(e) {\n            const form = this;\n\n            if (form.querySelector('#txtNewPassword').value != form.querySelector('#txtNewPasswordConfirm').value) {\n                import('toast').then(({default: toast}) => {\n                    toast(globalize.translate('PasswordMatchError'));\n                });\n            } else {\n                loading.show();\n                savePassword();\n            }\n\n            e.preventDefault();\n            return false;\n        }\n\n        function onLocalAccessSubmit(e) {\n            loading.show();\n            saveEasyPassword();\n            e.preventDefault();\n            return false;\n        }\n\n        function resetPassword() {\n            const msg = globalize.translate('PasswordResetConfirmation');\n            import('confirm').then(({default: confirm}) => {\n                confirm(msg, globalize.translate('HeaderResetPassword')).then(function () {\n                    const userId = params.userId;\n                    loading.show();\n                    ApiClient.resetUserPassword(userId).then(function () {\n                        loading.hide();\n                        Dashboard.alert({\n                            message: globalize.translate('PasswordResetComplete'),\n                            title: globalize.translate('HeaderResetPassword')\n                        });\n                        loadUser(view, params);\n                    });\n                });\n            });\n        }\n\n        function resetEasyPassword() {\n            const msg = globalize.translate('PinCodeResetConfirmation');\n\n            import('confirm').then(({default: confirm}) => {\n                confirm(msg, globalize.translate('HeaderPinCodeReset')).then(function () {\n                    const userId = params.userId;\n                    loading.show();\n                    ApiClient.resetEasyPassword(userId).then(function () {\n                        loading.hide();\n                        Dashboard.alert({\n                            message: globalize.translate('PinCodeResetComplete'),\n                            title: globalize.translate('HeaderPinCodeReset')\n                        });\n                        loadUser(view, params);\n                    });\n                });\n            });\n        }\n\n        view.querySelector('.updatePasswordForm').addEventListener('submit', onSubmit);\n        view.querySelector('.localAccessForm').addEventListener('submit', onLocalAccessSubmit);\n        view.querySelector('#btnResetEasyPassword').addEventListener('click', resetEasyPassword);\n        view.querySelector('#btnResetPassword').addEventListener('click', resetPassword);\n        view.addEventListener('viewshow', function () {\n            loadUser(view, params);\n        });\n    }\n\n/* eslint-enable indent */\n"]}