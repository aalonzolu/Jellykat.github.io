{"version":3,"sources":["controllers/dashboard/users/userlibraryaccess.js"],"names":["define","_require","_jQuery","_loading","_libraryMenu","_globalize","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","loadMediaFolders","page","user","mediaFolders","html","globalize","translate","i","length","folder","checkedAttribute","Policy","EnableAllFolders","EnabledFolders","indexOf","Id","Name","querySelector","innerHTML","chkEnableAllFolders","checked","triggerChange","select","evt","document","createEvent","initEvent","dispatchEvent","loadUser","loggedInUser","channels","devices","libraryMenu","setTitle","loadChannels","EnableAllChannels","EnabledChannels","show","hide","prop","loadDevices","device","EnableAllDevices","EnabledDevices","AppName","IsAdministrator","classList","add","remove","loading","onSaveComplete","Promise","_resolve","_reject","imported","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","then","_ref","toast","onSubmit","this","parents","userId","getParameterByName","ApiClient","getUser","result","saveUser","is","filter","c","map","getAttribute","BlockedChannels","BlockedMediaFolders","updateUserPolicy","on","addEventListener","off","promise1","deferred","$","Deferred","resolveWith","Configuration","promise","promise2","Dashboard","getCurrentUser","promise4","getJSON","getUrl","IsHidden","promise5","promise6","all","responses","Items"],"mappings":"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","file":"userlibraryaccess.js","sourcesContent":["import $ from 'jQuery';\nimport loading from 'loading';\nimport libraryMenu from 'libraryMenu';\nimport globalize from 'globalize';\n\n/* eslint-disable indent */\n\n    function triggerChange(select) {\n        const evt = document.createEvent('HTMLEvents');\n        evt.initEvent('change', false, true);\n        select.dispatchEvent(evt);\n    }\n\n    function loadMediaFolders(page, user, mediaFolders) {\n        let html = '';\n        html += '<h3 class=\"checkboxListLabel\">' + globalize.translate('HeaderLibraries') + '</h3>';\n        html += '<div class=\"checkboxList paperList checkboxList-paperList\">';\n\n        for (let i = 0, length = mediaFolders.length; i < length; i++) {\n            const folder = mediaFolders[i];\n            const isChecked = user.Policy.EnableAllFolders || user.Policy.EnabledFolders.indexOf(folder.Id) != -1;\n            const checkedAttribute = isChecked ? ' checked=\"checked\"' : '';\n            html += '<label><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkFolder\" data-id=\"' + folder.Id + '\" ' + checkedAttribute + '><span>' + folder.Name + '</span></label>';\n        }\n\n        html += '</div>';\n        page.querySelector('.folderAccess').innerHTML = html;\n        const chkEnableAllFolders = page.querySelector('#chkEnableAllFolders');\n        chkEnableAllFolders.checked = user.Policy.EnableAllFolders;\n        triggerChange(chkEnableAllFolders);\n    }\n\n    function loadChannels(page, user, channels) {\n        let html = '';\n        html += '<h3 class=\"checkboxListLabel\">' + globalize.translate('Channels') + '</h3>';\n        html += '<div class=\"checkboxList paperList checkboxList-paperList\">';\n\n        for (let i = 0, length = channels.length; i < length; i++) {\n            const folder = channels[i];\n            const isChecked = user.Policy.EnableAllChannels || user.Policy.EnabledChannels.indexOf(folder.Id) != -1;\n            const checkedAttribute = isChecked ? ' checked=\"checked\"' : '';\n            html += '<label><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkChannel\" data-id=\"' + folder.Id + '\" ' + checkedAttribute + '><span>' + folder.Name + '</span></label>';\n        }\n\n        html += '</div>';\n        $('.channelAccess', page).show().html(html);\n\n        if (channels.length) {\n            $('.channelAccessContainer', page).show();\n        } else {\n            $('.channelAccessContainer', page).hide();\n        }\n\n        $('#chkEnableAllChannels', page).prop('checked', user.Policy.EnableAllChannels);\n    }\n\n    function loadDevices(page, user, devices) {\n        let html = '';\n        html += '<h3 class=\"checkboxListLabel\">' + globalize.translate('HeaderDevices') + '</h3>';\n        html += '<div class=\"checkboxList paperList checkboxList-paperList\">';\n\n        for (let i = 0, length = devices.length; i < length; i++) {\n            const device = devices[i];\n            const checkedAttribute = user.Policy.EnableAllDevices || user.Policy.EnabledDevices.indexOf(device.Id) != -1 ? ' checked=\"checked\"' : '';\n            html += '<label><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkDevice\" data-id=\"' + device.Id + '\" ' + checkedAttribute + '><span>' + device.Name + ' - ' + device.AppName + '</span></label>';\n        }\n\n        html += '</div>';\n        $('.deviceAccess', page).show().html(html);\n        $('#chkEnableAllDevices', page).prop('checked', user.Policy.EnableAllDevices);\n\n        if (user.Policy.IsAdministrator) {\n            page.querySelector('.deviceAccessContainer').classList.add('hide');\n        } else {\n            page.querySelector('.deviceAccessContainer').classList.remove('hide');\n        }\n    }\n\n    function loadUser(page, user, loggedInUser, mediaFolders, channels, devices) {\n        page.querySelector('.username').innerHTML = user.Name;\n        libraryMenu.setTitle(user.Name);\n        loadChannels(page, user, channels);\n        loadMediaFolders(page, user, mediaFolders);\n        loadDevices(page, user, devices);\n        loading.hide();\n    }\n\n    function onSaveComplete(page) {\n        loading.hide();\n\n        import('toast').then(({default: toast}) => {\n            toast(globalize.translate('SettingsSaved'));\n        });\n    }\n\n    function saveUser(user, page) {\n        user.Policy.EnableAllFolders = $('#chkEnableAllFolders', page).is(':checked');\n        user.Policy.EnabledFolders = user.Policy.EnableAllFolders ? [] : $('.chkFolder', page).get().filter(function (c) {\n            return c.checked;\n        }).map(function (c) {\n            return c.getAttribute('data-id');\n        });\n        user.Policy.EnableAllChannels = $('#chkEnableAllChannels', page).is(':checked');\n        user.Policy.EnabledChannels = user.Policy.EnableAllChannels ? [] : $('.chkChannel', page).get().filter(function (c) {\n            return c.checked;\n        }).map(function (c) {\n            return c.getAttribute('data-id');\n        });\n        user.Policy.EnableAllDevices = $('#chkEnableAllDevices', page).is(':checked');\n        user.Policy.EnabledDevices = user.Policy.EnableAllDevices ? [] : $('.chkDevice', page).get().filter(function (c) {\n            return c.checked;\n        }).map(function (c) {\n            return c.getAttribute('data-id');\n        });\n        user.Policy.BlockedChannels = null;\n        user.Policy.BlockedMediaFolders = null;\n        ApiClient.updateUserPolicy(user.Id, user.Policy).then(function () {\n            onSaveComplete(page);\n        });\n    }\n\n    function onSubmit() {\n        const page = $(this).parents('.page');\n        loading.show();\n        const userId = getParameterByName('userId');\n        ApiClient.getUser(userId).then(function (result) {\n            saveUser(result, page);\n        });\n        return false;\n    }\n\n    $(document).on('pageinit', '#userLibraryAccessPage', function () {\n        const page = this;\n        $('#chkEnableAllDevices', page).on('change', function () {\n            if (this.checked) {\n                $('.deviceAccessListContainer', page).hide();\n            } else {\n                $('.deviceAccessListContainer', page).show();\n            }\n        });\n        $('#chkEnableAllChannels', page).on('change', function () {\n            if (this.checked) {\n                $('.channelAccessListContainer', page).hide();\n            } else {\n                $('.channelAccessListContainer', page).show();\n            }\n        });\n        page.querySelector('#chkEnableAllFolders').addEventListener('change', function () {\n            if (this.checked) {\n                page.querySelector('.folderAccessListContainer').classList.add('hide');\n            } else {\n                page.querySelector('.folderAccessListContainer').classList.remove('hide');\n            }\n        });\n        $('.userLibraryAccessForm').off('submit', onSubmit).on('submit', onSubmit);\n    }).on('pageshow', '#userLibraryAccessPage', function () {\n        const page = this;\n        loading.show();\n        let promise1;\n        const userId = getParameterByName('userId');\n\n        if (userId) {\n            promise1 = ApiClient.getUser(userId);\n        } else {\n            const deferred = $.Deferred();\n            deferred.resolveWith(null, [{\n                Configuration: {}\n            }]);\n            promise1 = deferred.promise();\n        }\n\n        const promise2 = Dashboard.getCurrentUser();\n        const promise4 = ApiClient.getJSON(ApiClient.getUrl('Library/MediaFolders', {\n            IsHidden: false\n        }));\n        const promise5 = ApiClient.getJSON(ApiClient.getUrl('Channels'));\n        const promise6 = ApiClient.getJSON(ApiClient.getUrl('Devices'));\n        Promise.all([promise1, promise2, promise4, promise5, promise6]).then(function (responses) {\n            loadUser(page, responses[0], responses[1], responses[2].Items, responses[3].Items, responses[4].Items);\n        });\n    });\n\n/* eslint-enable indent */\n"]}