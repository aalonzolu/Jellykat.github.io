define(["require","jQuery","loading","libraryMenu","globalize"],(function(_require,_jQuery,_loading,_libraryMenu,_globalize){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var cache=new WeakMap;return _getRequireWildcardCache=function _getRequireWildcardCache(){return cache},cache}function loadMediaFolders(page,user,mediaFolders){var html="";html+='<h3 class="checkboxListLabel">'+_globalize.default.translate("HeaderLibraries")+"</h3>",html+='<div class="checkboxList paperList checkboxList-paperList">';for(var i=0,length=mediaFolders.length;i<length;i++){var folder=mediaFolders[i],checkedAttribute=user.Policy.EnableAllFolders||-1!=user.Policy.EnabledFolders.indexOf(folder.Id)?' checked="checked"':"";html+='<label><input type="checkbox" is="emby-checkbox" class="chkFolder" data-id="'+folder.Id+'" '+checkedAttribute+"><span>"+folder.Name+"</span></label>"}html+="</div>",page.querySelector(".folderAccess").innerHTML=html;var chkEnableAllFolders=page.querySelector("#chkEnableAllFolders");chkEnableAllFolders.checked=user.Policy.EnableAllFolders,function triggerChange(select){var evt=document.createEvent("HTMLEvents");evt.initEvent("change",!1,!0),select.dispatchEvent(evt)}(chkEnableAllFolders)}function loadUser(page,user,loggedInUser,mediaFolders,channels,devices){page.querySelector(".username").innerHTML=user.Name,_libraryMenu.default.setTitle(user.Name),function loadChannels(page,user,channels){var html="";html+='<h3 class="checkboxListLabel">'+_globalize.default.translate("Channels")+"</h3>",html+='<div class="checkboxList paperList checkboxList-paperList">';for(var i=0,length=channels.length;i<length;i++){var folder=channels[i],checkedAttribute=user.Policy.EnableAllChannels||-1!=user.Policy.EnabledChannels.indexOf(folder.Id)?' checked="checked"':"";html+='<label><input type="checkbox" is="emby-checkbox" class="chkChannel" data-id="'+folder.Id+'" '+checkedAttribute+"><span>"+folder.Name+"</span></label>"}html+="</div>",(0,_jQuery.default)(".channelAccess",page).show().html(html),channels.length?(0,_jQuery.default)(".channelAccessContainer",page).show():(0,_jQuery.default)(".channelAccessContainer",page).hide(),(0,_jQuery.default)("#chkEnableAllChannels",page).prop("checked",user.Policy.EnableAllChannels)}(page,user,channels),loadMediaFolders(page,user,mediaFolders),function loadDevices(page,user,devices){var html="";html+='<h3 class="checkboxListLabel">'+_globalize.default.translate("HeaderDevices")+"</h3>",html+='<div class="checkboxList paperList checkboxList-paperList">';for(var i=0,length=devices.length;i<length;i++){var device=devices[i],checkedAttribute=user.Policy.EnableAllDevices||-1!=user.Policy.EnabledDevices.indexOf(device.Id)?' checked="checked"':"";html+='<label><input type="checkbox" is="emby-checkbox" class="chkDevice" data-id="'+device.Id+'" '+checkedAttribute+"><span>"+device.Name+" - "+device.AppName+"</span></label>"}html+="</div>",(0,_jQuery.default)(".deviceAccess",page).show().html(html),(0,_jQuery.default)("#chkEnableAllDevices",page).prop("checked",user.Policy.EnableAllDevices),user.Policy.IsAdministrator?page.querySelector(".deviceAccessContainer").classList.add("hide"):page.querySelector(".deviceAccessContainer").classList.remove("hide")}(page,user,devices),_loading.default.hide()}function onSaveComplete(page){_loading.default.hide(),new Promise((function(_resolve,_reject){return _require(["toast"],(function(imported){return _resolve(function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache();if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}(imported))}),_reject)})).then((function(_ref){(0,_ref.default)(_globalize.default.translate("SettingsSaved"))}))}function onSubmit(){var page=(0,_jQuery.default)(this).parents(".page");_loading.default.show();var userId=getParameterByName("userId");return ApiClient.getUser(userId).then((function(result){!function saveUser(user,page){user.Policy.EnableAllFolders=(0,_jQuery.default)("#chkEnableAllFolders",page).is(":checked"),user.Policy.EnabledFolders=user.Policy.EnableAllFolders?[]:(0,_jQuery.default)(".chkFolder",page).get().filter((function(c){return c.checked})).map((function(c){return c.getAttribute("data-id")})),user.Policy.EnableAllChannels=(0,_jQuery.default)("#chkEnableAllChannels",page).is(":checked"),user.Policy.EnabledChannels=user.Policy.EnableAllChannels?[]:(0,_jQuery.default)(".chkChannel",page).get().filter((function(c){return c.checked})).map((function(c){return c.getAttribute("data-id")})),user.Policy.EnableAllDevices=(0,_jQuery.default)("#chkEnableAllDevices",page).is(":checked"),user.Policy.EnabledDevices=user.Policy.EnableAllDevices?[]:(0,_jQuery.default)(".chkDevice",page).get().filter((function(c){return c.checked})).map((function(c){return c.getAttribute("data-id")})),user.Policy.BlockedChannels=null,user.Policy.BlockedMediaFolders=null,ApiClient.updateUserPolicy(user.Id,user.Policy).then((function(){onSaveComplete()}))}(result,page)})),!1}_jQuery=_interopRequireDefault(_jQuery),_loading=_interopRequireDefault(_loading),_libraryMenu=_interopRequireDefault(_libraryMenu),_globalize=_interopRequireDefault(_globalize),(0,_jQuery.default)(document).on("pageinit","#userLibraryAccessPage",(function(){var page=this;(0,_jQuery.default)("#chkEnableAllDevices",page).on("change",(function(){this.checked?(0,_jQuery.default)(".deviceAccessListContainer",page).hide():(0,_jQuery.default)(".deviceAccessListContainer",page).show()})),(0,_jQuery.default)("#chkEnableAllChannels",page).on("change",(function(){this.checked?(0,_jQuery.default)(".channelAccessListContainer",page).hide():(0,_jQuery.default)(".channelAccessListContainer",page).show()})),page.querySelector("#chkEnableAllFolders").addEventListener("change",(function(){this.checked?page.querySelector(".folderAccessListContainer").classList.add("hide"):page.querySelector(".folderAccessListContainer").classList.remove("hide")})),(0,_jQuery.default)(".userLibraryAccessForm").off("submit",onSubmit).on("submit",onSubmit)})).on("pageshow","#userLibraryAccessPage",(function(){var promise1,page=this;_loading.default.show();var userId=getParameterByName("userId");if(userId)promise1=ApiClient.getUser(userId);else{var deferred=_jQuery.default.Deferred();deferred.resolveWith(null,[{Configuration:{}}]),promise1=deferred.promise()}var promise2=Dashboard.getCurrentUser(),promise4=ApiClient.getJSON(ApiClient.getUrl("Library/MediaFolders",{IsHidden:!1})),promise5=ApiClient.getJSON(ApiClient.getUrl("Channels")),promise6=ApiClient.getJSON(ApiClient.getUrl("Devices"));Promise.all([promise1,promise2,promise4,promise5,promise6]).then((function(responses){loadUser(page,responses[0],responses[1],responses[2].Items,responses[3].Items,responses[4].Items)}))}))}));
//# sourceMappingURL=userlibraryaccess.js.map
