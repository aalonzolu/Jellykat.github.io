{"version":3,"sources":["controllers/dashboard/plugins/installed/index.js"],"names":["define","_require","_loading","_libraryMenu","_dom","_globalize","_cardStyle","_embyButton","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","renderPlugins","page","plugins","ApiClient","getJSON","getUrl","then","configPages","populateList","pluginConfigurationPages","html","sort","plugin1","plugin2","Name","map","p","getPluginCardHtml","plugin","configPage","filter","pluginConfigurationPage","PluginId","Id","configPageUrl","Dashboard","getConfigurationPageUrl","CanUninstall","DisplayName","Version","join","installedPluginsElement","querySelector","removeEventListener","onInstalledPluginsClick","addEventListener","length","classList","add","globalize","translate","innerHTML","loading","hide","showPluginMenu","elem","card","dom","parentWithClass","id","getAttribute","name","removable","configHref","menuItems","push","icon","Promise","_resolve","_reject","imported","_ref2","show","items","positionTo","callback","resultId","navigate","deletePlugin","uniqueid","msg","_ref","title","text","primary","confirmText","uninstallPlugin","reloadList","getInstalledPlugins","getTabs","href","e","target","showNoConfigurationMessage","alert","message","showConnectMessage","btnCardMenu","pageIdOn","libraryMenu","setTabs","this","window","PluginsPage"],"mappings":"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","file":"index.js","sourcesContent":["import loading from 'loading';\nimport libraryMenu from 'libraryMenu';\nimport dom from 'dom';\nimport globalize from 'globalize';\nimport 'cardStyle';\nimport 'emby-button';\n\nfunction deletePlugin(page, uniqueid, name) {\n    const msg = globalize.translate('UninstallPluginConfirmation', name);\n\n    import('confirm').then(({default: confirm}) => {\n        confirm.default({\n            title: globalize.translate('HeaderUninstallPlugin'),\n            text: msg,\n            primary: 'delete',\n            confirmText: globalize.translate('HeaderUninstallPlugin')\n        }).then(function () {\n            loading.show();\n            ApiClient.uninstallPlugin(uniqueid).then(function () {\n                reloadList(page);\n            });\n        });\n    });\n}\n\nfunction showNoConfigurationMessage() {\n    Dashboard.alert({\n        message: globalize.translate('MessageNoPluginConfiguration')\n    });\n}\n\nfunction showConnectMessage() {\n    Dashboard.alert({\n        message: globalize.translate('MessagePluginConfigurationRequiresLocalAccess')\n    });\n}\n\nfunction getPluginCardHtml(plugin, pluginConfigurationPages) {\n    const configPage = pluginConfigurationPages.filter(function (pluginConfigurationPage) {\n        return pluginConfigurationPage.PluginId == plugin.Id;\n    })[0];\n    const configPageUrl = configPage ? Dashboard.getConfigurationPageUrl(configPage.Name) : null;\n    let html = '';\n    html += \"<div data-id='\" + plugin.Id + \"' data-name='\" + plugin.Name + \"' data-removable='\" + plugin.CanUninstall + \"' class='card backdropCard'>\";\n    html += '<div class=\"cardBox visualCardBox\">';\n    html += '<div class=\"cardScalable\">';\n    html += '<div class=\"cardPadder cardPadder-backdrop\"></div>';\n    html += configPageUrl ? '<a class=\"cardContent cardImageContainer\" is=\"emby-linkbutton\" href=\"' + configPageUrl + '\">' : '<div class=\"cardContent noConfigPluginCard noHoverEffect cardImageContainer emby-button\">';\n    html += '<span class=\"cardImageIcon material-icons folder\"></span>';\n    html += configPageUrl ? '</a>' : '</div>';\n    html += '</div>';\n    html += '<div class=\"cardFooter\">';\n\n    if (configPage || plugin.CanUninstall) {\n        html += '<div style=\"text-align:right; float:right;padding-top:5px;\">';\n        html += '<button type=\"button\" is=\"paper-icon-button-light\" class=\"btnCardMenu autoSize\"><span class=\"material-icons more_vert\"></span></button>';\n        html += '</div>';\n    }\n\n    html += \"<div class='cardText'>\";\n    html += configPage && configPage.DisplayName ? configPage.DisplayName : plugin.Name;\n    html += '</div>';\n    html += \"<div class='cardText cardText-secondary'>\";\n    html += plugin.Version;\n    html += '</div>';\n    html += '</div>';\n    html += '</div>';\n    html += '</div>';\n    return html;\n}\n\nfunction renderPlugins(page, plugins) {\n    ApiClient.getJSON(ApiClient.getUrl('web/configurationpages') + '?pageType=PluginConfiguration').then(function (configPages) {\n        populateList(page, plugins, configPages);\n    });\n}\n\nfunction populateList(page, plugins, pluginConfigurationPages) {\n    plugins = plugins.sort(function (plugin1, plugin2) {\n        if (plugin1.Name > plugin2.Name) {\n            return 1;\n        }\n\n        return -1;\n    });\n\n    let html = plugins.map(function (p) {\n        return getPluginCardHtml(p, pluginConfigurationPages);\n    }).join('');\n\n    const installedPluginsElement = page.querySelector('.installedPlugins');\n    installedPluginsElement.removeEventListener('click', onInstalledPluginsClick);\n    installedPluginsElement.addEventListener('click', onInstalledPluginsClick);\n\n    if (plugins.length) {\n        installedPluginsElement.classList.add('itemsContainer');\n        installedPluginsElement.classList.add('vertical-wrap');\n    } else {\n        html += '<div class=\"centerMessage\">';\n        html += '<h1>' + globalize.translate('MessageNoPluginsInstalled') + '</h1>';\n        html += '<p><a is=\"emby-linkbutton\" class=\"button-link\" href=\"availableplugins.html\">';\n        html += globalize.translate('MessageBrowsePluginCatalog');\n        html += '</a></p>';\n        html += '</div>';\n    }\n\n    installedPluginsElement.innerHTML = html;\n    loading.hide();\n}\n\nfunction showPluginMenu(page, elem) {\n    const card = dom.parentWithClass(elem, 'card');\n    const id = card.getAttribute('data-id');\n    const name = card.getAttribute('data-name');\n    const removable = card.getAttribute('data-removable');\n    const configHref = card.querySelector('.cardContent').getAttribute('href');\n    const menuItems = [];\n\n    if (configHref) {\n        menuItems.push({\n            name: globalize.translate('ButtonSettings'),\n            id: 'open',\n            icon: 'mode_edit'\n        });\n    }\n\n    if (removable === 'true') {\n        menuItems.push({\n            name: globalize.translate('ButtonUninstall'),\n            id: 'delete',\n            icon: 'delete'\n        });\n    }\n\n    import('actionsheet').then(({default: actionsheet}) => {\n        actionsheet.show({\n            items: menuItems,\n            positionTo: elem,\n            callback: function (resultId) {\n                switch (resultId) {\n                    case 'open':\n                        Dashboard.navigate(configHref);\n                        break;\n                    case 'delete':\n                        deletePlugin(page, id, name);\n                        break;\n                }\n            }\n        });\n    });\n}\n\nfunction reloadList(page) {\n    loading.show();\n    ApiClient.getInstalledPlugins().then(function (plugins) {\n        renderPlugins(page, plugins);\n    });\n}\n\nfunction getTabs() {\n    return [{\n        href: 'installedplugins.html',\n        name: globalize.translate('TabMyPlugins')\n    }, {\n        href: 'availableplugins.html',\n        name: globalize.translate('TabCatalog')\n    }, {\n        href: 'repositories.html',\n        name: globalize.translate('TabRepositories')\n    }];\n}\n\nfunction onInstalledPluginsClick(e) {\n    if (dom.parentWithClass(e.target, 'noConfigPluginCard')) {\n        showNoConfigurationMessage();\n    } else if (dom.parentWithClass(e.target, 'connectModePluginCard')) {\n        showConnectMessage();\n    } else {\n        const btnCardMenu = dom.parentWithClass(e.target, 'btnCardMenu');\n        if (btnCardMenu) {\n            showPluginMenu(dom.parentWithClass(btnCardMenu, 'page'), btnCardMenu);\n        }\n    }\n}\n\npageIdOn('pageshow', 'pluginsPage', function () {\n    libraryMenu.setTabs('plugins', 0, getTabs);\n    reloadList(this);\n});\n\nwindow.PluginsPage = {\n    renderPlugins: renderPlugins\n};\n"]}