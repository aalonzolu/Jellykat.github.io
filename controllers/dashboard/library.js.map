{"version":3,"sources":["controllers/dashboard/library.js"],"names":["define","_require","_jQuery","_taskbutton","_loading","_libraryMenu","_globalize","_dom","_imagehelper","_cardStyle","_embyItemrefreshindicator","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","editVirtualFolder","page","virtualFolder","Promise","_resolve","_reject","imported","then","_ref2","medialibraryeditor","refresh","shouldRefreshLibraryAfterChanges","library","hasChanges","reloadLibrary","showCardMenu","elem","virtualFolders","card","dom","parentWithClass","parseInt","getAttribute","menuItems","push","name","globalize","translate","id","icon","_ref6","show","items","positionTo","callback","resultId","editImages","_ref7","itemId","ItemId","serverId","ApiClient","renameVirtualFolder","_ref5","prompt","label","confirmText","newName","Name","refreshAfterChange","deleteVirtualFolder","msg","Locations","length","join","_ref3","confirm","text","title","primary","removeVirtualFolder","refreshVirtualFolder","_ref4","refreshDialog","itemIds","mode","loading","getVirtualFolders","result","reloadVirtualFolders","html","showType","showLocations","showMenu","showNameWithIcon","i","getVirtualFolderHtml","divVirtualFolders","querySelector","innerHTML","classList","add","on","this","addEventListener","addVirtualFolder","_ref","medialibrarycreator","collectionTypeOptions","getCollectionTypeOptions","filter","f","hidden","parents","index","hide","getLink","url","value","message","style","contains","hasCardImageContainer","imgUrl","PrimaryImageItemId","getScaledImageUrl","maxWidth","Math","round","getScreenWidth","type","imageHelper","getLibraryIcon","CollectionType","RefreshProgress","RefreshStatus","typeName","t","getTabs","href","window","WizardLibraryPage","next","Dashboard","navigate","pageClassOn","pageIdOn","libraryMenu","setTabs","progressElem","taskKey","button"],"mappings":"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","file":"library.js","sourcesContent":["import $ from 'jQuery';\nimport taskButton from 'scripts/taskbutton';\nimport loading from 'loading';\nimport libraryMenu from 'libraryMenu';\nimport globalize from 'globalize';\nimport dom from 'dom';\nimport imageHelper from 'scripts/imagehelper';\nimport 'cardStyle';\nimport 'emby-itemrefreshindicator';\n\n/* eslint-disable indent */\n\n    function addVirtualFolder(page) {\n        import('medialibrarycreator').then(({default: medialibrarycreator}) => {\n            new medialibrarycreator({\n                collectionTypeOptions: getCollectionTypeOptions().filter(function (f) {\n                    return !f.hidden;\n                }),\n                refresh: shouldRefreshLibraryAfterChanges(page)\n            }).then(function (hasChanges) {\n                if (hasChanges) {\n                    reloadLibrary(page);\n                }\n            });\n        });\n    }\n\n    function editVirtualFolder(page, virtualFolder) {\n        import('medialibraryeditor').then(({default: medialibraryeditor}) => {\n            new medialibraryeditor({\n                refresh: shouldRefreshLibraryAfterChanges(page),\n                library: virtualFolder\n            }).then(function (hasChanges) {\n                if (hasChanges) {\n                    reloadLibrary(page);\n                }\n            });\n        });\n    }\n\n    function deleteVirtualFolder(page, virtualFolder) {\n        let msg = globalize.translate('MessageAreYouSureYouWishToRemoveMediaFolder');\n\n        if (virtualFolder.Locations.length) {\n            msg += '<br/><br/>' + globalize.translate('MessageTheFollowingLocationWillBeRemovedFromLibrary') + '<br/><br/>';\n            msg += virtualFolder.Locations.join('<br/>');\n        }\n\n        import('confirm').then(({default: confirm}) => {\n            confirm({\n                text: msg,\n                title: globalize.translate('HeaderRemoveMediaFolder'),\n                confirmText: globalize.translate('Delete'),\n                primary: 'delete'\n            }).then(function () {\n                const refreshAfterChange = shouldRefreshLibraryAfterChanges(page);\n                ApiClient.removeVirtualFolder(virtualFolder.Name, refreshAfterChange).then(function () {\n                    reloadLibrary(page);\n                });\n            });\n        });\n    }\n\n    function refreshVirtualFolder(page, virtualFolder) {\n        import('refreshDialog').then(({default: refreshDialog}) => {\n            new refreshDialog({\n                itemIds: [virtualFolder.ItemId],\n                serverId: ApiClient.serverId(),\n                mode: 'scan'\n            }).show();\n        });\n    }\n\n    function renameVirtualFolder(page, virtualFolder) {\n        import('prompt').then(({default: prompt}) => {\n            prompt({\n                label: globalize.translate('LabelNewName'),\n                confirmText: globalize.translate('ButtonRename')\n            }).then(function (newName) {\n                if (newName && newName != virtualFolder.Name) {\n                    const refreshAfterChange = shouldRefreshLibraryAfterChanges(page);\n                    ApiClient.renameVirtualFolder(virtualFolder.Name, newName, refreshAfterChange).then(function () {\n                        reloadLibrary(page);\n                    });\n                }\n            });\n        });\n    }\n\n    function showCardMenu(page, elem, virtualFolders) {\n        const card = dom.parentWithClass(elem, 'card');\n        const index = parseInt(card.getAttribute('data-index'));\n        const virtualFolder = virtualFolders[index];\n        const menuItems = [];\n        menuItems.push({\n            name: globalize.translate('EditImages'),\n            id: 'editimages',\n            icon: 'photo'\n        });\n        menuItems.push({\n            name: globalize.translate('ManageLibrary'),\n            id: 'edit',\n            icon: 'folder_open'\n        });\n        menuItems.push({\n            name: globalize.translate('ButtonRemove'),\n            id: 'delete',\n            icon: 'delete'\n        });\n        menuItems.push({\n            name: globalize.translate('ButtonRename'),\n            id: 'rename',\n            icon: 'mode_edit'\n        });\n        menuItems.push({\n            name: globalize.translate('ScanLibrary'),\n            id: 'refresh',\n            icon: 'refresh'\n        });\n\n        import('actionsheet').then(({default: actionsheet}) => {\n            actionsheet.show({\n                items: menuItems,\n                positionTo: elem,\n                callback: function (resultId) {\n                    switch (resultId) {\n                        case 'edit':\n                            editVirtualFolder(page, virtualFolder);\n                            break;\n\n                        case 'editimages':\n                            editImages(page, virtualFolder);\n                            break;\n\n                        case 'rename':\n                            renameVirtualFolder(page, virtualFolder);\n                            break;\n\n                        case 'delete':\n                            deleteVirtualFolder(page, virtualFolder);\n                            break;\n\n                        case 'refresh':\n                            refreshVirtualFolder(page, virtualFolder);\n                    }\n                }\n            });\n        });\n    }\n\n    function reloadLibrary(page) {\n        loading.show();\n        ApiClient.getVirtualFolders().then(function (result) {\n            reloadVirtualFolders(page, result);\n        });\n    }\n\n    function shouldRefreshLibraryAfterChanges(page) {\n        return page.id === 'mediaLibraryPage';\n    }\n\n    function reloadVirtualFolders(page, virtualFolders) {\n        let html = '';\n        virtualFolders.push({\n            Name: globalize.translate('ButtonAddMediaLibrary'),\n            icon: 'add_circle',\n            Locations: [],\n            showType: false,\n            showLocations: false,\n            showMenu: false,\n            showNameWithIcon: false\n        });\n\n        for (let i = 0; i < virtualFolders.length; i++) {\n            const virtualFolder = virtualFolders[i];\n            html += getVirtualFolderHtml(page, virtualFolder, i);\n        }\n\n        const divVirtualFolders = page.querySelector('#divVirtualFolders');\n        divVirtualFolders.innerHTML = html;\n        divVirtualFolders.classList.add('itemsContainer');\n        divVirtualFolders.classList.add('vertical-wrap');\n        $('.btnCardMenu', divVirtualFolders).on('click', function () {\n            showCardMenu(page, this, virtualFolders);\n        });\n        divVirtualFolders.querySelector('#addLibrary').addEventListener('click', function () {\n            addVirtualFolder(page);\n        });\n        $('.editLibrary', divVirtualFolders).on('click', function () {\n            const card = $(this).parents('.card')[0];\n            const index = parseInt(card.getAttribute('data-index'));\n            const virtualFolder = virtualFolders[index];\n\n            if (virtualFolder.ItemId) {\n                editVirtualFolder(page, virtualFolder);\n            }\n        });\n        loading.hide();\n    }\n\n    function editImages(page, virtualFolder) {\n        import('imageEditor').then(({default: imageEditor}) => {\n            imageEditor.show({\n                itemId: virtualFolder.ItemId,\n                serverId: ApiClient.serverId()\n            }).then(function () {\n                reloadLibrary(page);\n            });\n        });\n    }\n\n    function getLink(text, url) {\n        return globalize.translate(text, '<a is=\"emby-linkbutton\" class=\"button-link\" href=\"' + url + '\" target=\"_blank\" data-autohide=\"true\">', '</a>');\n    }\n\n    function getCollectionTypeOptions() {\n        return [{\n            name: '',\n            value: ''\n        }, {\n            name: globalize.translate('FolderTypeMovies'),\n            value: 'movies',\n            message: getLink('MovieLibraryHelp', 'https://docs.jellyfin.org/general/server/media/movies.html')\n        }, {\n            name: globalize.translate('FolderTypeMusic'),\n            value: 'music',\n            message: getLink('MusicLibraryHelp', 'https://docs.jellyfin.org/general/server/media/music.html')\n        }, {\n            name: globalize.translate('FolderTypeTvShows'),\n            value: 'tvshows',\n            message: getLink('TvLibraryHelp', 'https://docs.jellyfin.org/general/server/media/shows.html')\n        }, {\n            name: globalize.translate('FolderTypeBooks'),\n            value: 'books',\n            message: getLink('BookLibraryHelp', 'https://docs.jellyfin.org/general/server/media/books.html')\n        }, {\n            name: globalize.translate('OptionHomeVideos'),\n            value: 'homevideos'\n        }, {\n            name: globalize.translate('FolderTypeMusicVideos'),\n            value: 'musicvideos'\n        }, {\n            name: globalize.translate('FolderTypeUnset'),\n            value: 'mixed',\n            message: globalize.translate('MessageUnsetContentHelp')\n        }];\n    }\n\n    function getVirtualFolderHtml(page, virtualFolder, index) {\n        let html = '';\n        let style = '';\n\n        if (page.classList.contains('wizardPage')) {\n            style += 'min-width:33.3%;';\n        }\n\n        if (virtualFolder.Locations.length == 0) {\n            html += '<div id=\"addLibrary\" class=\"card backdropCard scalableCard backdropCard-scalable\" style=\"' + style + '\" data-index=\"' + index + '\" data-id=\"' + virtualFolder.ItemId + '\">';\n        } else {\n            html += '<div class=\"card backdropCard scalableCard backdropCard-scalable\" style=\"' + style + '\" data-index=\"' + index + '\" data-id=\"' + virtualFolder.ItemId + '\">';\n        }\n\n        html += '<div class=\"cardBox visualCardBox\">';\n        html += '<div class=\"cardScalable visualCardBox-cardScalable\">';\n        html += '<div class=\"cardPadder cardPadder-backdrop\"></div>';\n        html += '<div class=\"cardContent\">';\n        let imgUrl = '';\n\n        if (virtualFolder.PrimaryImageItemId) {\n            imgUrl = ApiClient.getScaledImageUrl(virtualFolder.PrimaryImageItemId, {\n                maxWidth: Math.round(dom.getScreenWidth() * 0.40),\n                type: 'Primary'\n            });\n        }\n\n        let hasCardImageContainer;\n\n        if (imgUrl) {\n            html += '<div class=\"cardImageContainer editLibrary\" style=\"cursor:pointer;background-image:url(\\'' + imgUrl + \"');\\\">\";\n            hasCardImageContainer = true;\n        } else if (!virtualFolder.showNameWithIcon) {\n            html += '<div class=\"cardImageContainer editLibrary\" style=\"cursor:pointer;\">';\n            html += '<span class=\"cardImageIcon-small material-icons ' + (virtualFolder.icon || imageHelper.getLibraryIcon(virtualFolder.CollectionType)) + '\"></span>';\n            hasCardImageContainer = true;\n        }\n\n        if (hasCardImageContainer) {\n            html += '<div class=\"cardIndicators backdropCardIndicators\">';\n            html += '<div is=\"emby-itemrefreshindicator\"' + (virtualFolder.RefreshProgress || virtualFolder.RefreshStatus && virtualFolder.RefreshStatus !== 'Idle' ? '' : ' class=\"hide\"') + ' data-progress=\"' + (virtualFolder.RefreshProgress || 0) + '\" data-status=\"' + virtualFolder.RefreshStatus + '\"></div>';\n            html += '</div>';\n            html += '</div>';\n        }\n\n        if (!imgUrl && virtualFolder.showNameWithIcon) {\n            html += '<h3 class=\"cardImageContainer addLibrary\" style=\"position:absolute;top:0;left:0;right:0;bottom:0;cursor:pointer;flex-direction:column;\">';\n            html += '<span class=\"cardImageIcon-small material-icons ' + (virtualFolder.icon || imageHelper.getLibraryIcon(virtualFolder.CollectionType)) + '\"></span>';\n\n            if (virtualFolder.showNameWithIcon) {\n                html += '<div style=\"margin:1em 0;position:width:100%;\">';\n                html += virtualFolder.Name;\n                html += '</div>';\n            }\n\n            html += '</h3>';\n        }\n\n        html += '</div>';\n        html += '</div>';\n        html += '<div class=\"cardFooter visualCardBox-cardFooter\">'; // always show menu unless explicitly hidden\n\n        if (virtualFolder.showMenu !== false) {\n            html += '<div style=\"text-align:right; float:right;padding-top:5px;\">';\n            html += '<button type=\"button\" is=\"paper-icon-button-light\" class=\"btnCardMenu autoSize\"><span class=\"material-icons more_vert\"></span></button>';\n            html += '</div>';\n        }\n\n        html += \"<div class='cardText'>\";\n\n        if (virtualFolder.showNameWithIcon) {\n            html += '&nbsp;';\n        } else {\n            html += virtualFolder.Name;\n        }\n\n        html += '</div>';\n        let typeName = getCollectionTypeOptions().filter(function (t) {\n            return t.value == virtualFolder.CollectionType;\n        })[0];\n        typeName = typeName ? typeName.name : globalize.translate('FolderTypeUnset');\n        html += \"<div class='cardText cardText-secondary'>\";\n\n        if (virtualFolder.showType === false) {\n            html += '&nbsp;';\n        } else {\n            html += typeName;\n        }\n\n        html += '</div>';\n\n        if (virtualFolder.showLocations === false) {\n            html += \"<div class='cardText cardText-secondary'>\";\n            html += '&nbsp;';\n            html += '</div>';\n        } else if (virtualFolder.Locations.length && virtualFolder.Locations.length === 1) {\n            html += \"<div class='cardText cardText-secondary'>\";\n            html += virtualFolder.Locations[0];\n            html += '</div>';\n        } else {\n            html += \"<div class='cardText cardText-secondary'>\";\n            html += globalize.translate('NumLocationsValue', virtualFolder.Locations.length);\n            html += '</div>';\n        }\n\n        html += '</div>';\n        html += '</div>';\n        html += '</div>';\n        return html;\n    }\n\n    function getTabs() {\n        return [{\n            href: 'library.html',\n            name: globalize.translate('HeaderLibraries')\n        }, {\n            href: 'librarydisplay.html',\n            name: globalize.translate('Display')\n        }, {\n            href: 'metadataimages.html',\n            name: globalize.translate('Metadata')\n        }, {\n            href: 'metadatanfo.html',\n            name: globalize.translate('TabNfoSettings')\n        }];\n    }\n\n    window.WizardLibraryPage = {\n        next: function () {\n            Dashboard.navigate('wizardsettings.html');\n        }\n    };\n    pageClassOn('pageshow', 'mediaLibraryPage', function () {\n        reloadLibrary(this);\n    });\n    pageIdOn('pageshow', 'mediaLibraryPage', function () {\n        libraryMenu.setTabs('librarysetup', 0, getTabs);\n\n        const page = this;\n        taskButton({\n            mode: 'on',\n            progressElem: page.querySelector('.refreshProgress'),\n            taskKey: 'RefreshLibrary',\n            button: page.querySelector('.btnRefresh')\n        });\n    });\n    pageIdOn('pagebeforehide', 'mediaLibraryPage', function () {\n        const page = this;\n        taskButton({\n            mode: 'off',\n            progressElem: page.querySelector('.refreshProgress'),\n            taskKey: 'RefreshLibrary',\n            button: page.querySelector('.btnRefresh')\n        });\n    });\n\n/* eslint-enable indent */\n"]}