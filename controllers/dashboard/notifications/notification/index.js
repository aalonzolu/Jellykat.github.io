define(["jQuery","emby-checkbox"],(function(_jQuery,_embyCheckbox){"use strict";function fillItems(elem,items,cssClass,idPrefix,currentList,isEnabledList){var html='<div class="checkboxList paperList" style="padding: .5em 1em;">';html+=items.map((function(u){var checkedHtml=(isEnabledList?-1!=currentList.indexOf(u.Id):-1==currentList.indexOf(u.Id))?' checked="checked"':"";return'<label><input is="emby-checkbox" class="'+cssClass+'" type="checkbox" data-itemid="'+u.Id+'"'+checkedHtml+"/><span>"+u.Name+"</span></label>"})).join(""),html+="</div>",elem.html(html).trigger("create")}function onSubmit(){return function save(page){var type=getParameterByName("type"),promise1=ApiClient.getNamedConfiguration(notificationsConfigurationKey),promise2=ApiClient.getJSON(ApiClient.getUrl("Notifications/Types"));Promise.all([promise1,promise2]).then((function(responses){var notificationOptions=responses[0],notificationConfig=notificationOptions.Options.filter((function(n){return n.Type==type}))[0];notificationConfig||(notificationConfig={Type:type},notificationOptions.Options.push(notificationConfig)),notificationConfig.Enabled=(0,_jQuery.default)("#chkEnabled",page).is(":checked"),notificationConfig.SendToUserMode=(0,_jQuery.default)("#selectUsers",page).val(),notificationConfig.DisabledMonitorUsers=(0,_jQuery.default)(".chkMonitor",page).get().filter((function(c){return!c.checked})).map((function(c){return c.getAttribute("data-itemid")})),notificationConfig.SendToUsers=(0,_jQuery.default)(".chkSendTo",page).get().filter((function(c){return c.checked})).map((function(c){return c.getAttribute("data-itemid")})),notificationConfig.DisabledServices=(0,_jQuery.default)(".chkService",page).get().filter((function(c){return!c.checked})).map((function(c){return c.getAttribute("data-itemid")})),ApiClient.updateNamedConfiguration(notificationsConfigurationKey,notificationOptions).then((function(r){Dashboard.processServerConfigurationUpdateResult(),Dashboard.navigate("notificationsettings.html")}))}))}((0,_jQuery.default)(this).parents(".page")),!1}_jQuery=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(_jQuery);var notificationsConfigurationKey="notifications";(0,_jQuery.default)(document).on("pageinit","#notificationSettingPage",(function(){var page=this;(0,_jQuery.default)("#selectUsers",page).on("change",(function(){"Custom"==this.value?(0,_jQuery.default)(".selectCustomUsers",page).show():(0,_jQuery.default)(".selectCustomUsers",page).hide()})),(0,_jQuery.default)(".notificationSettingForm").off("submit",onSubmit).on("submit",onSubmit)})).on("pageshow","#notificationSettingPage",(function(){!function reload(page){var type=getParameterByName("type"),promise1=ApiClient.getUsers(),promise2=ApiClient.getNamedConfiguration(notificationsConfigurationKey),promise3=ApiClient.getJSON(ApiClient.getUrl("Notifications/Types")),promise4=ApiClient.getJSON(ApiClient.getUrl("Notifications/Services"));Promise.all([promise1,promise2,promise3,promise4]).then((function(responses){var users=responses[0],notificationOptions=responses[1],types=responses[2],services=responses[3],notificationConfig=notificationOptions.Options.filter((function(n){return n.Type==type}))[0],typeInfo=types.filter((function(n){return n.Type==type}))[0]||{};typeInfo.IsBasedOnUserEvent?(0,_jQuery.default)(".monitorUsers",page).show():(0,_jQuery.default)(".monitorUsers",page).hide(),(0,_jQuery.default)(".notificationType",page).html(typeInfo.Name||"Unknown Notification"),notificationConfig||(notificationConfig={DisabledMonitorUsers:[],SendToUsers:[],DisabledServices:[],SendToUserMode:"Admins"}),fillItems((0,_jQuery.default)(".monitorUsersList",page),users,"chkMonitor",0,notificationConfig.DisabledMonitorUsers),fillItems((0,_jQuery.default)(".sendToUsersList",page),users,"chkSendTo",0,notificationConfig.SendToUsers,!0),fillItems((0,_jQuery.default)(".servicesList",page),services,"chkService",0,notificationConfig.DisabledServices),(0,_jQuery.default)("#chkEnabled",page).prop("checked",notificationConfig.Enabled||!1),(0,_jQuery.default)("#selectUsers",page).val(notificationConfig.SendToUserMode).trigger("change")}))}(this)}))}));
//# sourceMappingURL=index.js.map
