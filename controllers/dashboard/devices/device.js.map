{"version":3,"sources":["controllers/dashboard/devices/device.js"],"names":["define","_exports","_loading","_dom","_embyInput","_embyButton","_interopRequireDefault","obj","__esModule","default","loadData","page","this","loading","show","id","getParameterByName","promise1","ApiClient","getJSON","getUrl","Id","promise2","Promise","all","then","responses","load","device","deviceOptions","querySelector","value","CustomName","innerHTML","Name","hide","onSubmit","e","save","ajax","url","type","data","JSON","stringify","contentType","Dashboard","processServerConfigurationUpdateResult","dom","parentWithClass","preventDefault","Object","defineProperty","_default","view","params","addEventListener"],"mappings":"AAAAA,OAAO,CAAC,UAAW,UAAW,MAAO,aAAc,gBAAgB,SAAUC,SAAUC,SAAUC,KAAMC,WAAYC,aACjH,aASA,SAASC,uBAAuBC,KAAO,OAAOA,KAAOA,IAAIC,WAAaD,IAAM,CAAEE,QAASF,KAErF,SAASG,WACL,IAAMC,KAAOC,KACbC,SAAAA,QAAQC,OACR,IAAMC,GAAKC,mBAAmB,MACxBC,SAAWC,UAAUC,QAAQD,UAAUE,OAAO,eAAgB,CAChEC,GAAIN,MAEFO,SAAWJ,UAAUC,QAAQD,UAAUE,OAAO,kBAAmB,CACnEC,GAAIN,MAERQ,QAAQC,IAAI,CAACP,SAAUK,WAAWG,MAAK,SAAUC,YAfrD,SAASC,KAAKhB,KAAMiB,OAAQC,eACxBlB,KAAKmB,cAAc,iBAAkBnB,MAAMoB,MAAQF,cAAcG,YAAc,GAC/ErB,KAAKmB,cAAc,gBAAiBnB,MAAMsB,UAAYL,OAAOM,MAAQ,GAcjEP,CAAKhB,KAAMe,UAAU,GAAIA,UAAU,IACnCb,SAAAA,QAAQsB,UAkBhB,SAASC,SAASC,GAId,OAlBJ,SAASC,KAAK3B,MACV,IAAMI,GAAKC,mBAAmB,MAC9BE,UAAUqB,KAAK,CACXC,IAAKtB,UAAUE,OAAO,kBAAmB,CACrCC,GAAIN,KAER0B,KAAM,OACNC,KAAMC,KAAKC,UAAU,CACjBZ,WAAYrB,KAAKmB,cAAc,kBAAkBC,QAErDc,YAAa,qBACdpB,KAAKqB,UAAUC,wCAKlBT,CAAKU,KAAAA,QAAIC,gBADIrC,KACkB,SAC/ByB,EAAEa,kBACK,EA3CbC,OAAOC,eAAenD,SAAU,aAAc,CAC5C8B,OAAO,IAET9B,SAASQ,QA2CQ,SAAA4C,SAAUC,KAAMC,QAC3BD,KAAKxB,cAAc,QAAQ0B,iBAAiB,SAAUpB,UACtDkB,KAAKE,iBAAiB,WAAY9C,WAnD1CR,SAAAI,uBAAAJ,UACAC,KAAAG,uBAAAH","file":"device.js","sourcesContent":["import loading from 'loading';\nimport dom from 'dom';\nimport 'emby-input';\nimport 'emby-button';\n\n/* eslint-disable indent */\n\n    function load(page, device, deviceOptions) {\n        page.querySelector('#txtCustomName', page).value = deviceOptions.CustomName || '';\n        page.querySelector('.reportedName', page).innerHTML = device.Name || '';\n    }\n\n    function loadData() {\n        const page = this;\n        loading.show();\n        const id = getParameterByName('id');\n        const promise1 = ApiClient.getJSON(ApiClient.getUrl('Devices/Info', {\n            Id: id\n        }));\n        const promise2 = ApiClient.getJSON(ApiClient.getUrl('Devices/Options', {\n            Id: id\n        }));\n        Promise.all([promise1, promise2]).then(function (responses) {\n            load(page, responses[0], responses[1]);\n            loading.hide();\n        });\n    }\n\n    function save(page) {\n        const id = getParameterByName('id');\n        ApiClient.ajax({\n            url: ApiClient.getUrl('Devices/Options', {\n                Id: id\n            }),\n            type: 'POST',\n            data: JSON.stringify({\n                CustomName: page.querySelector('#txtCustomName').value\n            }),\n            contentType: 'application/json'\n        }).then(Dashboard.processServerConfigurationUpdateResult);\n    }\n\n    function onSubmit(e) {\n        const form = this;\n        save(dom.parentWithClass(form, 'page'));\n        e.preventDefault();\n        return false;\n    }\n\n    export default function (view, params) {\n        view.querySelector('form').addEventListener('submit', onSubmit);\n        view.addEventListener('viewshow', loadData);\n    }\n\n/* eslint-enable indent */\n"]}