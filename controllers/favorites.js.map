{"version":3,"sources":["controllers/favorites.js"],"names":["define","_exports","_appRouter","_cardBuilder","_dom","_globalize","_connectionManager","_apphost","_layoutManager","_focusManager","_embyItemscontainer","_embyScroller","_interopRequireDefault","obj","__esModule","default","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","F","s","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","getFetchDataFn","section","apiClient","this","options","SortBy","types","SortOrder","Filters","Recursive","Fields","CollapseBoxSetItems","ExcludeLocationTypes","EnableTotalRecordCount","userId","getCurrentUserId","getArtists","getPeople","IncludeItemTypes","getItems","getRouteUrl","serverId","appRouter","itemTypes","isFavorite","getItemsHtmlFn","items","appHost","preferVisualCards","autoCardLayout","showTitle","leadingButtons","layoutManager","tv","globalize","translate","id","icon","routeUrl","lines","showYear","showParentTitle","cardBuilder","getCardsHtml","preferThumb","shape","centerText","overlayText","scalable","coverImage","overlayPlayButton","overlayMoreButton","action","allowBottomPadding","cardLayout","_default","FavoritesTab","view","params","_classCallCheck","instance","Constructor","connectionManager","currentApiClient","sectionsContainer","querySelector","createSections","elem","_step","sections","html","_iterator","sectionClass","innerHTML","elems","querySelectorAll","itemsContainer","fetchData","bind","getItemsHtml","parentContainer","dom","parentWithClass","_createClass","protoProps","staticProps","onResume","_step2","promises","_iterator2","push","resume","Promise","all","then","autoFocus","focusManager","onPause","_step3","_iterator3","pause","destroy","_step4","_iterator4"],"mappings":"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","file":"favorites.js","sourcesContent":["import appRouter from 'appRouter';\nimport cardBuilder from 'cardBuilder';\nimport dom from 'dom';\nimport globalize from 'globalize';\nimport connectionManager from 'connectionManager';\nimport appHost from 'apphost';\nimport layoutManager from 'layoutManager';\nimport focusManager from 'focusManager';\nimport 'emby-itemscontainer';\nimport 'emby-scroller';\n\n/* eslint-disable indent */\n\n    function enableScrollX() {\n        return true;\n    }\n\n    function getThumbShape() {\n        return enableScrollX() ? 'overflowBackdrop' : 'backdrop';\n    }\n\n    function getPosterShape() {\n        return enableScrollX() ? 'overflowPortrait' : 'portrait';\n    }\n\n    function getSquareShape() {\n        return enableScrollX() ? 'overflowSquare' : 'square';\n    }\n\n    function getSections() {\n        return [{\n            name: 'HeaderFavoriteMovies',\n            types: 'Movie',\n            shape: getPosterShape(),\n            showTitle: true,\n            showYear: true,\n            overlayPlayButton: true,\n            overlayText: false,\n            centerText: true\n        }, {\n            name: 'HeaderFavoriteShows',\n            types: 'Series',\n            shape: getPosterShape(),\n            showTitle: true,\n            showYear: true,\n            overlayPlayButton: true,\n            overlayText: false,\n            centerText: true\n        }, {\n            name: 'HeaderFavoriteEpisodes',\n            types: 'Episode',\n            shape: getThumbShape(),\n            preferThumb: false,\n            showTitle: true,\n            showParentTitle: true,\n            overlayPlayButton: true,\n            overlayText: false,\n            centerText: true\n        }, {\n            name: 'HeaderFavoriteVideos',\n            types: 'Video',\n            shape: getThumbShape(),\n            preferThumb: true,\n            showTitle: true,\n            overlayPlayButton: true,\n            overlayText: false,\n            centerText: true\n        }, {\n            name: 'HeaderFavoriteCollections',\n            types: 'BoxSet',\n            shape: getPosterShape(),\n            showTitle: true,\n            overlayPlayButton: true,\n            overlayText: false,\n            centerText: true\n        }, {\n            name: 'HeaderFavoritePlaylists',\n            types: 'Playlist',\n            shape: getSquareShape(),\n            preferThumb: false,\n            showTitle: true,\n            overlayText: false,\n            showParentTitle: false,\n            centerText: true,\n            overlayPlayButton: true,\n            coverImage: true\n        }, {\n            name: 'HeaderFavoritePeople',\n            types: 'Person',\n            shape: getPosterShape(),\n            preferThumb: false,\n            showTitle: true,\n            overlayText: false,\n            showParentTitle: false,\n            centerText: true,\n            overlayPlayButton: true,\n            coverImage: true\n        }, {\n            name: 'HeaderFavoriteArtists',\n            types: 'MusicArtist',\n            shape: getSquareShape(),\n            preferThumb: false,\n            showTitle: true,\n            overlayText: false,\n            showParentTitle: false,\n            centerText: true,\n            overlayPlayButton: true,\n            coverImage: true\n        }, {\n            name: 'HeaderFavoriteAlbums',\n            types: 'MusicAlbum',\n            shape: getSquareShape(),\n            preferThumb: false,\n            showTitle: true,\n            overlayText: false,\n            showParentTitle: true,\n            centerText: true,\n            overlayPlayButton: true,\n            coverImage: true\n        }, {\n            name: 'HeaderFavoriteSongs',\n            types: 'Audio',\n            shape: getSquareShape(),\n            preferThumb: false,\n            showTitle: true,\n            overlayText: false,\n            showParentTitle: true,\n            centerText: true,\n            overlayMoreButton: true,\n            action: 'instantmix',\n            coverImage: true\n        }, {\n            name: 'HeaderFavoriteBooks',\n            types: 'Book',\n            shape: getPosterShape(),\n            showTitle: true,\n            showYear: true,\n            overlayPlayButton: true,\n            overlayText: false,\n            centerText: true\n        }];\n    }\n\n    function getFetchDataFn(section) {\n        return function () {\n            const apiClient = this.apiClient;\n            const options = {\n                SortBy: (section.types, 'SeriesName,SortName'),\n                SortOrder: 'Ascending',\n                Filters: 'IsFavorite',\n                Recursive: true,\n                Fields: 'PrimaryImageAspectRatio,BasicSyncInfo',\n                CollapseBoxSetItems: false,\n                ExcludeLocationTypes: 'Virtual',\n                EnableTotalRecordCount: false\n            };\n            options.Limit = 20;\n            const userId = apiClient.getCurrentUserId();\n\n            if (section.types === 'MusicArtist') {\n                return apiClient.getArtists(userId, options);\n            }\n\n            if (section.types === 'Person') {\n                return apiClient.getPeople(userId, options);\n            }\n\n            options.IncludeItemTypes = section.types;\n            return apiClient.getItems(userId, options);\n        };\n    }\n\n    function getRouteUrl(section, serverId) {\n        return appRouter.getRouteUrl('list', {\n            serverId: serverId,\n            itemTypes: section.types,\n            isFavorite: true\n        });\n    }\n\n    function getItemsHtmlFn(section) {\n        return function (items) {\n            let cardLayout = appHost.preferVisualCards && section.autoCardLayout && section.showTitle;\n            cardLayout = false;\n            const serverId = this.apiClient.serverId();\n            const leadingButtons = layoutManager.tv ? [{\n                name: globalize.translate('All'),\n                id: 'more',\n                icon: 'favorite',\n                routeUrl: getRouteUrl(section, serverId)\n            }] : null;\n            let lines = 0;\n\n            if (section.showTitle) {\n                lines++;\n            }\n\n            if (section.showYear) {\n                lines++;\n            }\n\n            if (section.showParentTitle) {\n                lines++;\n            }\n\n            return cardBuilder.getCardsHtml({\n                items: items,\n                preferThumb: section.preferThumb,\n                shape: section.shape,\n                centerText: section.centerText && !cardLayout,\n                overlayText: section.overlayText !== false,\n                showTitle: section.showTitle,\n                showYear: section.showYear,\n                showParentTitle: section.showParentTitle,\n                scalable: true,\n                coverImage: section.coverImage,\n                overlayPlayButton: section.overlayPlayButton,\n                overlayMoreButton: section.overlayMoreButton && !cardLayout,\n                action: section.action,\n                allowBottomPadding: !enableScrollX(),\n                cardLayout: cardLayout,\n                leadingButtons: leadingButtons,\n                lines: lines\n            });\n        };\n    }\n\n    function createSections(instance, elem, apiClient) {\n        const sections = getSections();\n        let html = '';\n\n        for (const section of sections) {\n            let sectionClass = 'verticalSection';\n\n            if (!section.showTitle) {\n                sectionClass += ' verticalSection-extrabottompadding';\n            }\n\n            html += '<div class=\"' + sectionClass + ' hide\">';\n            html += '<div class=\"sectionTitleContainer sectionTitleContainer-cards padded-left\">';\n\n            if (layoutManager.tv) {\n                html += '<h2 class=\"sectionTitle sectionTitle-cards\">' + globalize.translate(section.name) + '</h2>';\n            } else {\n                html += '<a is=\"emby-linkbutton\" href=\"' + getRouteUrl(section, apiClient.serverId()) + '\" class=\"more button-flat button-flat-mini sectionTitleTextButton\">';\n                html += '<h2 class=\"sectionTitle sectionTitle-cards\">';\n                html += globalize.translate(section.name);\n                html += '</h2>';\n                html += '<span class=\"material-icons chevron_right\"></span>';\n                html += '</a>';\n            }\n\n            html += '</div>';\n            html += '<div is=\"emby-scroller\" class=\"padded-top-focusscale padded-bottom-focusscale\" data-centerfocus=\"true\"><div is=\"emby-itemscontainer\" class=\"itemsContainer scrollSlider focuscontainer-x\" data-monitor=\"markfavorite\"></div></div>';\n            html += '</div>';\n        }\n\n        elem.innerHTML = html;\n        const elems = elem.querySelectorAll('.itemsContainer');\n\n        for (let i = 0, length = elems.length; i < length; i++) {\n            const itemsContainer = elems[i];\n            itemsContainer.fetchData = getFetchDataFn(sections[i]).bind(instance);\n            itemsContainer.getItemsHtml = getItemsHtmlFn(sections[i]).bind(instance);\n            itemsContainer.parentContainer = dom.parentWithClass(itemsContainer, 'verticalSection');\n        }\n    }\n\nclass FavoritesTab {\n    constructor(view, params) {\n        this.view = view;\n        this.params = params;\n        this.apiClient = connectionManager.currentApiClient();\n        this.sectionsContainer = view.querySelector('.sections');\n        createSections(this, this.sectionsContainer, this.apiClient);\n    }\n\n    onResume(options) {\n        const promises = (this.apiClient, []);\n        const view = this.view;\n        const elems = this.sectionsContainer.querySelectorAll('.itemsContainer');\n\n        for (const elem of elems) {\n            promises.push(elem.resume(options));\n        }\n\n        Promise.all(promises).then(function () {\n            if (options.autoFocus) {\n                focusManager.autoFocus(view);\n            }\n        });\n    }\n\n    onPause() {\n        const elems = this.sectionsContainer.querySelectorAll('.itemsContainer');\n\n        for (const elem of elems) {\n            elem.pause();\n        }\n    }\n\n    destroy() {\n        this.view = null;\n        this.params = null;\n        this.apiClient = null;\n        const elems = this.sectionsContainer.querySelectorAll('.itemsContainer');\n\n        for (const elem of elems) {\n            elem.fetchData = null;\n            elem.getItemsHtml = null;\n            elem.parentContainer = null;\n        }\n\n        this.sectionsContainer = null;\n    }\n}\n\nexport default FavoritesTab;\n\n/* eslint-enable indent */\n"]}