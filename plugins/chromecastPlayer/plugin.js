define(["require","exports","appSettings","userSettings","playbackManager","connectionManager","globalize","events","castSenderApiLoader"],(function(_require,_exports,_appSettings,userSettings,_playbackManager,_connectionManager,_globalize,_events,_castSenderApiLoader){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var cache=new WeakMap;return _getRequireWildcardCache=function _getRequireWildcardCache(){return cache},cache}function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache();if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}var currentResolve,currentReject;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_appSettings=_interopRequireDefault(_appSettings),userSettings=_interopRequireWildcard(userSettings),_playbackManager=_interopRequireDefault(_playbackManager),_connectionManager=_interopRequireDefault(_connectionManager),_globalize=_interopRequireDefault(_globalize),_events=_interopRequireDefault(_events),_castSenderApiLoader=_interopRequireDefault(_castSenderApiLoader);function sendConnectionResult(isOk){var resolve=currentResolve,reject=currentReject;currentResolve=null,currentReject=null,isOk?resolve&&resolve():reject?reject():_playbackManager.default.removeActivePlayer("Google Cast")}var DEVICE_STATE_IDLE=0,DEVICE_STATE_ACTIVE=1,DEVICE_STATE_ERROR=3,PLAYER_STATE_IDLE="IDLE",PLAYER_STATE_PLAYING="PLAYING",CastPlayer=function(){function CastPlayer(){_classCallCheck(this,CastPlayer),this.deviceState=DEVICE_STATE_IDLE,this.currentMediaSession=null,this.session=null,this.castPlayerState=PLAYER_STATE_IDLE,this.hasReceivers=!1,this.errorHandler=this.onError.bind(this),this.mediaStatusUpdateHandler=this.onMediaStatusUpdate.bind(this),this.initializeCastPlayer()}return _createClass(CastPlayer,[{key:"initializeCastPlayer",value:function initializeCastPlayer(){var chrome=window.chrome;if(chrome)if(chrome.cast&&chrome.cast.isAvailable){var applicationID="F007D354";"unstable"===userSettings.chromecastVersion()&&(applicationID="6F511C87");var sessionRequest=new chrome.cast.SessionRequest(applicationID),apiConfig=new chrome.cast.ApiConfig(sessionRequest,this.sessionListener.bind(this),this.receiverListener.bind(this));console.debug("chromecast.initialize"),chrome.cast.initialize(apiConfig,this.onInitSuccess.bind(this),this.errorHandler)}else setTimeout(this.initializeCastPlayer.bind(this),1e3)}},{key:"onInitSuccess",value:function onInitSuccess(){this.isInitialized=!0,console.debug("chromecast init success")}},{key:"onError",value:function onError(){console.debug("chromecast error")}},{key:"sessionListener",value:function sessionListener(e){this.session=e,this.session&&(this.session.media[0]&&this.onMediaDiscovered("activeSession",this.session.media[0]),this.onSessionConnected(e))}},{key:"messageListener",value:function messageListener(namespace,message){if("string"==typeof message&&(message=JSON.parse(message)),"playbackerror"===message.type){var errorCode=message.data;setTimeout((function(){alertText(_globalize.default.translate("MessagePlaybackError"+errorCode),_globalize.default.translate("HeaderPlaybackError"))}),300)}else"connectionerror"===message.type?setTimeout((function(){alertText(_globalize.default.translate("MessageChromecastConnectionError"),_globalize.default.translate("HeaderError"))}),300):message.type&&_events.default.trigger(this,message.type,[message.data])}},{key:"receiverListener",value:function receiverListener(e){"available"===e?(console.debug("chromecast receiver found"),this.hasReceivers=!0):(console.debug("chromecast receiver list empty"),this.hasReceivers=!1)}},{key:"sessionUpdateListener",value:function sessionUpdateListener(isAlive){isAlive?console.debug("sessionUpdateListener: already alive"):(this.session=null,this.deviceState=DEVICE_STATE_IDLE,this.castPlayerState=PLAYER_STATE_IDLE,document.removeEventListener("volumeupbutton",onVolumeUpKeyDown,!1),document.removeEventListener("volumedownbutton",onVolumeDownKeyDown,!1),console.debug("sessionUpdateListener: setting currentMediaSession to null"),this.currentMediaSession=null,sendConnectionResult(!1))}},{key:"launchApp",value:function launchApp(){console.debug("chromecast launching app..."),chrome.cast.requestSession(this.onRequestSessionSuccess.bind(this),this.onLaunchError.bind(this))}},{key:"onRequestSessionSuccess",value:function onRequestSessionSuccess(e){console.debug("chromecast session success: "+e.sessionId),this.onSessionConnected(e)}},{key:"onSessionConnected",value:function onSessionConnected(session){this.session=session,this.deviceState=DEVICE_STATE_ACTIVE,this.session.addMessageListener("urn:x-cast:com.connectsdk",this.messageListener.bind(this)),this.session.addMediaListener(this.sessionMediaListener.bind(this)),this.session.addUpdateListener(this.sessionUpdateListener.bind(this)),document.addEventListener("volumeupbutton",onVolumeUpKeyDown,!1),document.addEventListener("volumedownbutton",onVolumeDownKeyDown,!1),_events.default.trigger(this,"connect"),this.sendMessage({options:{},command:"Identify"})}},{key:"sessionMediaListener",value:function sessionMediaListener(e){this.currentMediaSession=e,this.currentMediaSession.addUpdateListener(this.mediaStatusUpdateHandler)}},{key:"onLaunchError",value:function onLaunchError(){console.debug("chromecast launch error"),this.deviceState=DEVICE_STATE_ERROR,sendConnectionResult(!1)}},{key:"stopApp",value:function stopApp(){this.session&&this.session.stop(this.onStopAppSuccess.bind(this,"Session stopped"),this.errorHandler)}},{key:"onStopAppSuccess",value:function onStopAppSuccess(message){console.debug(message),this.deviceState=DEVICE_STATE_IDLE,this.castPlayerState=PLAYER_STATE_IDLE,document.removeEventListener("volumeupbutton",onVolumeUpKeyDown,!1),document.removeEventListener("volumedownbutton",onVolumeDownKeyDown,!1),this.currentMediaSession=null}},{key:"loadMedia",value:function loadMedia(options,command){return this.session?(options.items=options.items.map((function(i){return{Id:i.Id,ServerId:i.ServerId,Name:i.Name,Type:i.Type,MediaType:i.MediaType,IsFolder:i.IsFolder}})),this.sendMessage({options:options,command:command})):(console.debug("no session"),Promise.reject())}},{key:"sendMessage",value:function sendMessage(message){var apiClient,player=this,receiverName=null,session=player.session;session&&session.receiver&&session.receiver.friendlyName&&(receiverName=session.receiver.friendlyName),apiClient=message.options&&message.options.ServerId?_connectionManager.default.getApiClient(message.options.ServerId):message.options&&message.options.items&&message.options.items.length?_connectionManager.default.getApiClient(message.options.items[0].ServerId):_connectionManager.default.currentApiClient(),message=Object.assign(message,{userId:apiClient.getCurrentUserId(),deviceId:apiClient.deviceId(),accessToken:apiClient.accessToken(),serverAddress:apiClient.serverAddress(),serverId:apiClient.serverId(),serverVersion:apiClient.serverVersion(),receiverName:receiverName});var bitrateSetting=_appSettings.default.maxChromecastBitrate();return bitrateSetting&&(message.maxBitrate=bitrateSetting),message.options&&message.options.items&&(message.subtitleAppearance=userSettings.getSubtitleAppearanceSettings(),message.subtitleBurnIn=_appSettings.default.get("subtitleburnin")||""),new Promise((function(resolve,reject){new Promise((function(_resolve,_reject){return _require(["./chromecastHelper"],(function(imported){return _resolve(_interopRequireWildcard(imported))}),_reject)})).then((function(_ref){_ref.default.getServerAddress(apiClient).then((function(serverAddress){message.serverAddress=serverAddress,player.sendMessageInternal(message).then(resolve,reject)}),reject)}))}))}},{key:"sendMessageInternal",value:function sendMessageInternal(message){return message=JSON.stringify(message),this.session.sendMessage("urn:x-cast:com.connectsdk",message,this.onPlayCommandSuccess.bind(this),this.errorHandler),Promise.resolve()}},{key:"onPlayCommandSuccess",value:function onPlayCommandSuccess(){console.debug("Message was sent to receiver ok.")}},{key:"onMediaDiscovered",value:function onMediaDiscovered(how,mediaSession){console.debug("chromecast new media session ID:"+mediaSession.mediaSessionId+" ("+how+")"),this.currentMediaSession=mediaSession,"loadMedia"===how&&(this.castPlayerState=PLAYER_STATE_PLAYING),"activeSession"===how&&(this.castPlayerState=mediaSession.playerState),this.currentMediaSession.addUpdateListener(this.mediaStatusUpdateHandler)}},{key:"onMediaStatusUpdate",value:function onMediaStatusUpdate(e){console.debug("chromecast updating media: "+e),!1===e&&(this.castPlayerState=PLAYER_STATE_IDLE)}},{key:"setReceiverVolume",value:function setReceiverVolume(mute,vol){this.currentMediaSession?mute?this.session.setReceiverMuted(!0,this.mediaCommandSuccessCallback.bind(this),this.errorHandler):this.session.setReceiverVolumeLevel(vol||1,this.mediaCommandSuccessCallback.bind(this),this.errorHandler):console.debug("this.currentMediaSession is null")}},{key:"mute",value:function mute(){this.setReceiverVolume(!0)}},{key:"mediaCommandSuccessCallback",value:function mediaCommandSuccessCallback(info,e){console.debug(info)}}]),CastPlayer}();function alertText(text,title){new Promise((function(_resolve,_reject){return _require(["alert"],(function(imported){return _resolve(_interopRequireWildcard(imported))}),_reject)})).then((function(_ref2){(0,_ref2.default)({text:text,title:title})}))}function onVolumeUpKeyDown(){_playbackManager.default.volumeUp()}function onVolumeDownKeyDown(){_playbackManager.default.volumeDown()}function bindEventForRelay(instance,eventName){_events.default.on(instance._castPlayer,eventName,(function(e,data){console.debug("cc: "+eventName);var state=instance.getPlayerStateInternal(data);_events.default.trigger(instance,eventName,[state])}))}function initializeChromecast(){var instance=this;instance._castPlayer=new CastPlayer,document.dispatchEvent(new CustomEvent("chromecastloaded",{detail:{player:instance}})),_events.default.on(instance._castPlayer,"connect",(function(e){currentResolve?sendConnectionResult(!0):_playbackManager.default.setActivePlayer("Google Cast",instance.getCurrentTargetInfo()),console.debug("cc: connect"),instance.lastPlayerData=null})),_events.default.on(instance._castPlayer,"playbackstart",(function(e,data){console.debug("cc: playbackstart"),instance._castPlayer.initializeCastPlayer();var state=instance.getPlayerStateInternal(data);_events.default.trigger(instance,"playbackstart",[state])})),_events.default.on(instance._castPlayer,"playbackstop",(function(e,data){console.debug("cc: playbackstop");var state=instance.getPlayerStateInternal(data);_events.default.trigger(instance,"playbackstop",[state]);var volume=(state=instance.lastPlayerData.PlayState||{}).VolumeLevel||.5,mute=state.IsMuted||!1;instance.lastPlayerData={},instance.lastPlayerData.PlayState={},instance.lastPlayerData.PlayState.VolumeLevel=volume,instance.lastPlayerData.PlayState.IsMuted=mute})),_events.default.on(instance._castPlayer,"playbackprogress",(function(e,data){console.debug("cc: positionchange");var state=instance.getPlayerStateInternal(data);_events.default.trigger(instance,"timeupdate",[state])})),bindEventForRelay(instance,"timeupdate"),bindEventForRelay(instance,"pause"),bindEventForRelay(instance,"unpause"),bindEventForRelay(instance,"volumechange"),bindEventForRelay(instance,"repeatmodechange"),bindEventForRelay(instance,"shufflequeuemodechange"),_events.default.on(instance._castPlayer,"playstatechange",(function(e,data){console.debug("cc: playstatechange");var state=instance.getPlayerStateInternal(data);_events.default.trigger(instance,"pause",[state])}))}var _default=function(){function ChromecastPlayer(){_classCallCheck(this,ChromecastPlayer),this.name="Google Cast",this.type="mediaplayer",this.id="chromecast",this.isLocalPlayer=!1,this.lastPlayerData={},(new _castSenderApiLoader.default).load().then(initializeChromecast.bind(this))}return _createClass(ChromecastPlayer,[{key:"tryPair",value:function tryPair(target){var castPlayer=this._castPlayer;return castPlayer.deviceState!==DEVICE_STATE_ACTIVE&&castPlayer.isInitialized?new Promise((function(resolve,reject){currentResolve=resolve,currentReject=reject,castPlayer.launchApp()})):(currentResolve=null,currentReject=null,Promise.reject())}},{key:"getTargets",value:function getTargets(){var targets=[];return this._castPlayer&&this._castPlayer.hasReceivers&&targets.push(this.getCurrentTargetInfo()),Promise.resolve(targets)}},{key:"getCurrentTargetInfo",value:function getCurrentTargetInfo(){var appName=null,castPlayer=this._castPlayer;return castPlayer.session&&castPlayer.session.receiver&&castPlayer.session.receiver.friendlyName&&(appName=castPlayer.session.receiver.friendlyName),{name:"Google Cast",id:"Google Cast",playerName:"Google Cast",playableMediaTypes:["Audio","Video"],isLocalPlayer:!1,appName:"Google Cast",deviceName:appName,supportedCommands:["VolumeUp","VolumeDown","Mute","Unmute","ToggleMute","SetVolume","SetAudioStreamIndex","SetSubtitleStreamIndex","DisplayContent","SetRepeatMode","SetShuffleQueue","EndSession","PlayMediaSource","PlayTrailers"]}}},{key:"getPlayerStateInternal",value:function getPlayerStateInternal(data){var triggerStateChange=!1;return data&&!this.lastPlayerData&&(triggerStateChange=!0),data=data||this.lastPlayerData,this.lastPlayerData=data,function normalizeImages(state){if(state&&state.NowPlayingItem){var item=state.NowPlayingItem;item.ImageTags&&item.ImageTags.Primary||item.PrimaryImageTag&&(item.ImageTags=item.ImageTags||{},item.ImageTags.Primary=item.PrimaryImageTag),item.BackdropImageTag&&item.BackdropItemId===item.Id&&(item.BackdropImageTags=[item.BackdropImageTag]),item.BackdropImageTag&&item.BackdropItemId!==item.Id&&(item.ParentBackdropImageTags=[item.BackdropImageTag],item.ParentBackdropItemId=item.BackdropItemId)}}(data),console.debug(JSON.stringify(data)),triggerStateChange&&_events.default.trigger(this,"statechange",[data]),data}},{key:"playWithCommand",value:function playWithCommand(options,command){if(!options.items){var apiClient=_connectionManager.default.getApiClient(options.serverId),instance=this;return apiClient.getItem(apiClient.getCurrentUserId(),options.ids[0]).then((function(item){return options.items=[item],instance.playWithCommand(options,command)}))}return options.items.length>1&&options&&options.ids&&options.items.sort((function(a,b){return options.ids.indexOf(a.Id)-options.ids.indexOf(b.Id)})),this._castPlayer.loadMedia(options,command)}},{key:"seek",value:function seek(position){position=parseInt(position),position/=1e7,this._castPlayer.sendMessage({options:{position:position},command:"Seek"})}},{key:"setAudioStreamIndex",value:function setAudioStreamIndex(index){this._castPlayer.sendMessage({options:{index:index},command:"SetAudioStreamIndex"})}},{key:"setSubtitleStreamIndex",value:function setSubtitleStreamIndex(index){this._castPlayer.sendMessage({options:{index:index},command:"SetSubtitleStreamIndex"})}},{key:"setMaxStreamingBitrate",value:function setMaxStreamingBitrate(options){this._castPlayer.sendMessage({options:options,command:"SetMaxStreamingBitrate"})}},{key:"isFullscreen",value:function isFullscreen(){var state=this.lastPlayerData||{};return(state=state.PlayState||{}).IsFullscreen}},{key:"nextTrack",value:function nextTrack(){this._castPlayer.sendMessage({options:{},command:"NextTrack"})}},{key:"previousTrack",value:function previousTrack(){this._castPlayer.sendMessage({options:{},command:"PreviousTrack"})}},{key:"volumeDown",value:function volumeDown(){var vol=this._castPlayer.session.receiver.volume.level;null==vol&&(vol=.5),vol-=.05,vol=Math.max(vol,0),this._castPlayer.session.setReceiverVolumeLevel(vol)}},{key:"endSession",value:function endSession(){var instance=this;this.stop().then((function(){setTimeout((function(){instance._castPlayer.stopApp()}),1e3)}))}},{key:"volumeUp",value:function volumeUp(){var vol=this._castPlayer.session.receiver.volume.level;null==vol&&(vol=.5),vol+=.05,vol=Math.min(vol,1),this._castPlayer.session.setReceiverVolumeLevel(vol)}},{key:"setVolume",value:function setVolume(vol){vol=Math.min(vol,100),vol=Math.max(vol,0),vol/=100,this._castPlayer.session.setReceiverVolumeLevel(vol)}},{key:"unpause",value:function unpause(){this._castPlayer.sendMessage({options:{},command:"Unpause"})}},{key:"playPause",value:function playPause(){this._castPlayer.sendMessage({options:{},command:"PlayPause"})}},{key:"pause",value:function pause(){this._castPlayer.sendMessage({options:{},command:"Pause"})}},{key:"stop",value:function stop(){return this._castPlayer.sendMessage({options:{},command:"Stop"})}},{key:"displayContent",value:function displayContent(options){this._castPlayer.sendMessage({options:options,command:"DisplayContent"})}},{key:"setMute",value:function setMute(isMuted){var castPlayer=this._castPlayer;isMuted?castPlayer.sendMessage({options:{},command:"Mute"}):castPlayer.sendMessage({options:{},command:"Unmute"})}},{key:"getRepeatMode",value:function getRepeatMode(){var state=this.lastPlayerData||{};return(state=state.PlayState||{}).RepeatMode}},{key:"getQueueShuffleMode",value:function getQueueShuffleMode(){var state=this.lastPlayerData||{};return(state=state.PlayState||{}).ShuffleMode}},{key:"playTrailers",value:function playTrailers(item){this._castPlayer.sendMessage({options:{ItemId:item.Id,ServerId:item.ServerId},command:"PlayTrailers"})}},{key:"setRepeatMode",value:function setRepeatMode(mode){this._castPlayer.sendMessage({options:{RepeatMode:mode},command:"SetRepeatMode"})}},{key:"setQueueShuffleMode",value:function setQueueShuffleMode(value){this._castPlayer.sendMessage({options:{ShuffleMode:value},command:"SetShuffleQueue"})}},{key:"toggleMute",value:function toggleMute(){this._castPlayer.sendMessage({options:{},command:"ToggleMute"})}},{key:"audioTracks",value:function audioTracks(){var state=this.lastPlayerData||{};return((state=state.NowPlayingItem||{}).MediaStreams||[]).filter((function(s){return"Audio"===s.Type}))}},{key:"getAudioStreamIndex",value:function getAudioStreamIndex(){var state=this.lastPlayerData||{};return(state=state.PlayState||{}).AudioStreamIndex}},{key:"subtitleTracks",value:function subtitleTracks(){var state=this.lastPlayerData||{};return((state=state.NowPlayingItem||{}).MediaStreams||[]).filter((function(s){return"Subtitle"===s.Type}))}},{key:"getSubtitleStreamIndex",value:function getSubtitleStreamIndex(){var state=this.lastPlayerData||{};return(state=state.PlayState||{}).SubtitleStreamIndex}},{key:"getMaxStreamingBitrate",value:function getMaxStreamingBitrate(){var state=this.lastPlayerData||{};return(state=state.PlayState||{}).MaxStreamingBitrate}},{key:"getVolume",value:function getVolume(){var state=this.lastPlayerData||{};return null==(state=state.PlayState||{}).VolumeLevel?100:state.VolumeLevel}},{key:"isPlaying",value:function isPlaying(mediaType){var state=this.lastPlayerData||{};return null!=state.NowPlayingItem&&(state.NowPlayingItem.MediaType===mediaType||!mediaType)}},{key:"isPlayingVideo",value:function isPlayingVideo(){var state=this.lastPlayerData||{};return"Video"===(state=state.NowPlayingItem||{}).MediaType}},{key:"isPlayingAudio",value:function isPlayingAudio(){var state=this.lastPlayerData||{};return"Audio"===(state=state.NowPlayingItem||{}).MediaType}},{key:"currentTime",value:function currentTime(val){if(null!=val)return this.seek(val);var state=this.lastPlayerData||{};return(state=state.PlayState||{}).PositionTicks}},{key:"duration",value:function duration(){var state=this.lastPlayerData||{};return(state=state.NowPlayingItem||{}).RunTimeTicks}},{key:"getBufferedRanges",value:function getBufferedRanges(){var state=this.lastPlayerData||{};return(state=state.PlayState||{}).BufferedRanges||[]}},{key:"paused",value:function paused(){var state=this.lastPlayerData||{};return(state=state.PlayState||{}).IsPaused}},{key:"isMuted",value:function isMuted(){var state=this.lastPlayerData||{};return(state=state.PlayState||{}).IsMuted}},{key:"shuffle",value:function shuffle(item){var apiClient=_connectionManager.default.getApiClient(item.ServerId),userId=apiClient.getCurrentUserId(),instance=this;apiClient.getItem(userId,item.Id).then((function(item){instance.playWithCommand({items:[item]},"Shuffle")}))}},{key:"instantMix",value:function instantMix(item){var apiClient=_connectionManager.default.getApiClient(item.ServerId),userId=apiClient.getCurrentUserId(),instance=this;apiClient.getItem(userId,item.Id).then((function(item){instance.playWithCommand({items:[item]},"InstantMix")}))}},{key:"canPlayMediaType",value:function canPlayMediaType(mediaType){return"audio"===(mediaType=(mediaType||"").toLowerCase())||"video"===mediaType}},{key:"canQueueMediaType",value:function canQueueMediaType(mediaType){return this.canPlayMediaType(mediaType)}},{key:"queue",value:function queue(options){this.playWithCommand(options,"PlayLast")}},{key:"queueNext",value:function queueNext(options){this.playWithCommand(options,"PlayNext")}},{key:"play",value:function play(options){if(options.items)return this.playWithCommand(options,"PlayNow");if(!options.serverId)throw new Error("serverId required!");var instance=this;return function getItemsForPlayback(apiClient,query){var userId=apiClient.getCurrentUserId();return query.Ids&&1===query.Ids.split(",").length?apiClient.getItem(userId,query.Ids.split(",")).then((function(item){return{Items:[item],TotalRecordCount:1}})):(query.Limit=query.Limit||100,query.ExcludeLocationTypes="Virtual",query.EnableTotalRecordCount=!1,apiClient.getItems(userId,query))}(_connectionManager.default.getApiClient(options.serverId),{Ids:options.ids.join(",")}).then((function(result){return options.items=result.Items,instance.playWithCommand(options,"PlayNow")}))}},{key:"toggleFullscreen",value:function toggleFullscreen(){}},{key:"beginPlayerUpdates",value:function beginPlayerUpdates(){}},{key:"endPlayerUpdates",value:function endPlayerUpdates(){}},{key:"getPlaylist",value:function getPlaylist(){return Promise.resolve([])}},{key:"getCurrentPlaylistItemId",value:function getCurrentPlaylistItemId(){}},{key:"setCurrentPlaylistItem",value:function setCurrentPlaylistItem(playlistItemId){return Promise.resolve()}},{key:"removeFromPlaylist",value:function removeFromPlaylist(playlistItemIds){return Promise.resolve()}},{key:"getPlayerState",value:function getPlayerState(){return this.getPlayerStateInternal()||{}}}]),ChromecastPlayer}();_exports.default=_default}));
//# sourceMappingURL=plugin.js.map
