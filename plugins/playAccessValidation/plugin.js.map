{"version":3,"sources":["plugins/playAccessValidation/plugin.js"],"names":["define","_require","_exports","_connectionManager","_globalize","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_getRequireWildcardCache","WeakMap","cache","showErrorMessage","Promise","_resolve","_reject","imported","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","call","desc","set","then","_ref","alert","globalize","translate","value","_default","PlayAccessValidation","_classCallCheck","instance","Constructor","TypeError","this","name","type","id","order","_createClass","protoProps","staticProps","intercept","options","item","resolve","serverId","ServerId","connectionManager","getApiClient","getCurrentUser","user","Policy","EnableMediaPlayback","fullscreen","reject"],"mappings":"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","file":"plugin.js","sourcesContent":["import connectionManager from 'connectionManager';\nimport globalize from 'globalize';\n\nfunction showErrorMessage() {\n    return import('alert').then(({default: alert}) => {\n        return alert(globalize.translate('MessagePlayAccessRestricted'));\n    });\n}\n\nclass PlayAccessValidation {\n    constructor() {\n        this.name = 'Playback validation';\n        this.type = 'preplayintercept';\n        this.id = 'playaccessvalidation';\n        this.order = -2;\n    }\n\n    intercept(options) {\n        const item = options.item;\n        if (!item) {\n            return Promise.resolve();\n        }\n        const serverId = item.ServerId;\n        if (!serverId) {\n            return Promise.resolve();\n        }\n\n        return connectionManager.getApiClient(serverId).getCurrentUser().then(function (user) {\n            if (user.Policy.EnableMediaPlayback) {\n                return Promise.resolve();\n            }\n\n            // reject but don't show an error message\n            if (!options.fullscreen) {\n                return Promise.reject();\n            }\n\n            return showErrorMessage();\n        });\n    }\n}\n\nexport default PlayAccessValidation;\n"]}