{"version":3,"sources":["plugins/youtubePlayer/plugin.js"],"names":["define","_require","_exports","_events","_browser","_appRouter","_loading","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","call","desc","set","onVideoResize","player","this","currentYoutubePlayer","dlg","videoDialog","setSize","offsetWidth","offsetHeight","clearTimeUpdateInterval","instance","timeUpdateInterval","clearInterval","onEndedInternal","resizeListener","window","removeEventListener","stopInfo","src","_currentSrc","events","trigger","destroy","onPlayerReady","event","playVideo","onTimeUpdate","e","onPlaying","playOptions","resolve","started","setInterval","bind","fullscreen","appRouter","showVideoOsd","then","classList","remove","setTransparency","Promise","_resolve","_reject","imported","_ref","hide","value","_default","YoutubePlayer","_classCallCheck","Constructor","TypeError","name","type","id","priority","_createClass","protoProps","staticProps","play","options","createMediaElement","reject","document","querySelector","loading","show","createElement","add","innerHTML","videoElement","body","insertBefore","firstChild","animate","browser","slow","zoomIn","elem","iterations","timing","duration","transform","opacity","offset","onfinish","setCurrentSrc","_ref2","queryString","url","params","parse","split","onYouTubeIframeAPIReady","YT","Player","height","width","videoId","v","onReady","onStateChange","data","PlayerState","PLAYING","ENDED","PAUSED","playerVars","controls","enablejsapi","modestbranding","rel","showinfo","fs","playsinline","addEventListener","tag","firstScriptTag","getElementsByTagName","parentNode","stop","destroyPlayer","stopVideo","removeChild","canPlayMediaType","mediaType","toLowerCase","canPlayItem","item","canPlayUrl","indexOf","getDeviceProfile","currentSrc","setSubtitleStreamIndex","index","canSetAudioStreamIndex","setAudioStreamIndex","currentTime","val","seekTo","getCurrentTime","getDuration","pause","pauseVideo","setTimeout","unpause","paused","getPlayerState","volume","setVolume","getVolume","setMute","mute","unMute","isMuted"],"mappings":"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","file":"plugin.js","sourcesContent":["import events from 'events';\nimport browser from 'browser';\nimport appRouter from 'appRouter';\nimport loading from 'loading';\n\n/* globals YT */\n\nfunction zoomIn(elem, iterations) {\n    const keyframes = [\n        { transform: 'scale3d(.2, .2, .2)  ', opacity: '.6', offset: 0 },\n        { transform: 'none', opacity: '1', offset: 1 }\n    ];\n\n    const timing = { duration: 240, iterations: iterations };\n    return elem.animate(keyframes, timing);\n}\n\nfunction createMediaElement(instance, options) {\n    return new Promise(function (resolve, reject) {\n        const dlg = document.querySelector('.youtubePlayerContainer');\n\n        if (!dlg) {\n            import('css!./style').then(() => {\n                loading.show();\n\n                const dlg = document.createElement('div');\n\n                dlg.classList.add('youtubePlayerContainer');\n\n                if (options.fullscreen) {\n                    dlg.classList.add('onTop');\n                }\n\n                dlg.innerHTML = '<div id=\"player\"></div>';\n                const videoElement = dlg.querySelector('#player');\n\n                document.body.insertBefore(dlg, document.body.firstChild);\n                instance.videoDialog = dlg;\n\n                if (options.fullscreen && dlg.animate && !browser.slow) {\n                    zoomIn(dlg, 1).onfinish = function () {\n                        resolve(videoElement);\n                    };\n                } else {\n                    resolve(videoElement);\n                }\n            });\n        } else {\n            resolve(dlg.querySelector('#player'));\n        }\n    });\n}\n\nfunction onVideoResize() {\n    const instance = this;\n    const player = instance.currentYoutubePlayer;\n    const dlg = instance.videoDialog;\n    if (player && dlg) {\n        player.setSize(dlg.offsetWidth, dlg.offsetHeight);\n    }\n}\n\nfunction clearTimeUpdateInterval(instance) {\n    if (instance.timeUpdateInterval) {\n        clearInterval(instance.timeUpdateInterval);\n    }\n    instance.timeUpdateInterval = null;\n}\n\nfunction onEndedInternal(instance) {\n    clearTimeUpdateInterval(instance);\n    const resizeListener = instance.resizeListener;\n    if (resizeListener) {\n        window.removeEventListener('resize', resizeListener);\n        window.removeEventListener('orientationChange', resizeListener);\n        instance.resizeListener = null;\n    }\n\n    const stopInfo = {\n        src: instance._currentSrc\n    };\n\n    events.trigger(instance, 'stopped', [stopInfo]);\n\n    instance._currentSrc = null;\n    if (instance.currentYoutubePlayer) {\n        instance.currentYoutubePlayer.destroy();\n    }\n    instance.currentYoutubePlayer = null;\n}\n\n// 4. The API will call this function when the video player is ready.\nfunction onPlayerReady(event) {\n    event.target.playVideo();\n}\n\nfunction onTimeUpdate(e) {\n    events.trigger(this, 'timeupdate');\n}\n\nfunction onPlaying(instance, playOptions, resolve) {\n    if (!instance.started) {\n        instance.started = true;\n        resolve();\n        clearTimeUpdateInterval(instance);\n        instance.timeUpdateInterval = setInterval(onTimeUpdate.bind(instance), 500);\n\n        if (playOptions.fullscreen) {\n            appRouter.showVideoOsd().then(function () {\n                instance.videoDialog.classList.remove('onTop');\n            });\n        } else {\n            appRouter.setTransparency('backdrop');\n            instance.videoDialog.classList.remove('onTop');\n        }\n\n        import('loading').then(({default: loading}) => {\n            loading.hide();\n        });\n    }\n}\n\nfunction setCurrentSrc(instance, elem, options) {\n    return new Promise(function (resolve, reject) {\n        import('queryString').then(({default: queryString}) => {\n            instance._currentSrc = options.url;\n            const params = queryString.parse(options.url.split('?')[1]);\n            // 3. This function creates an <iframe> (and YouTube player)\n            //    after the API code downloads.\n            window.onYouTubeIframeAPIReady = function () {\n                instance.currentYoutubePlayer = new YT.Player('player', {\n                    height: instance.videoDialog.offsetHeight,\n                    width: instance.videoDialog.offsetWidth,\n                    videoId: params.v,\n                    events: {\n                        'onReady': onPlayerReady,\n                        'onStateChange': function (event) {\n                            if (event.data === YT.PlayerState.PLAYING) {\n                                onPlaying(instance, options, resolve);\n                            } else if (event.data === YT.PlayerState.ENDED) {\n                                onEndedInternal(instance);\n                            } else if (event.data === YT.PlayerState.PAUSED) {\n                                events.trigger(instance, 'pause');\n                            }\n                        }\n                    },\n                    playerVars: {\n                        controls: 0,\n                        enablejsapi: 1,\n                        modestbranding: 1,\n                        rel: 0,\n                        showinfo: 0,\n                        fs: 0,\n                        playsinline: 1\n                    }\n                });\n\n                let resizeListener = instance.resizeListener;\n                if (resizeListener) {\n                    window.removeEventListener('resize', resizeListener);\n                    window.addEventListener('resize', resizeListener);\n                } else {\n                    resizeListener = instance.resizeListener = onVideoResize.bind(instance);\n                    window.addEventListener('resize', resizeListener);\n                }\n                window.removeEventListener('orientationChange', resizeListener);\n                window.addEventListener('orientationChange', resizeListener);\n            };\n\n            if (!window.YT) {\n                const tag = document.createElement('script');\n                tag.src = 'https://www.youtube.com/iframe_api';\n                const firstScriptTag = document.getElementsByTagName('script')[0];\n                firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n            } else {\n                window.onYouTubeIframeAPIReady();\n            }\n        });\n    });\n}\n\nclass YoutubePlayer {\n    constructor() {\n        this.name = 'Youtube Player';\n        this.type = 'mediaplayer';\n        this.id = 'youtubeplayer';\n\n        // Let any players created by plugins take priority\n        this.priority = 1;\n    }\n    play(options) {\n        this.started = false;\n        const instance = this;\n\n        return createMediaElement(this, options).then(function (elem) {\n            return setCurrentSrc(instance, elem, options);\n        });\n    }\n    stop(destroyPlayer) {\n        const src = this._currentSrc;\n\n        if (src) {\n            if (this.currentYoutubePlayer) {\n                this.currentYoutubePlayer.stopVideo();\n            }\n            onEndedInternal(this);\n\n            if (destroyPlayer) {\n                this.destroy();\n            }\n        }\n\n        return Promise.resolve();\n    }\n    destroy() {\n        appRouter.setTransparency('none');\n\n        const dlg = this.videoDialog;\n        if (dlg) {\n            this.videoDialog = null;\n\n            dlg.parentNode.removeChild(dlg);\n        }\n    }\n    canPlayMediaType(mediaType) {\n        mediaType = (mediaType || '').toLowerCase();\n\n        return mediaType === 'audio' || mediaType === 'video';\n    }\n    canPlayItem(item) {\n        // Does not play server items\n        return false;\n    }\n    canPlayUrl(url) {\n        return url.toLowerCase().indexOf('youtube.com') !== -1;\n    }\n    getDeviceProfile() {\n        return Promise.resolve({});\n    }\n    currentSrc() {\n        return this._currentSrc;\n    }\n    setSubtitleStreamIndex(index) {\n    }\n    canSetAudioStreamIndex() {\n        return false;\n    }\n    setAudioStreamIndex(index) {\n    }\n    // Save this for when playback stops, because querying the time at that point might return 0\n    currentTime(val) {\n        const currentYoutubePlayer = this.currentYoutubePlayer;\n\n        if (currentYoutubePlayer) {\n            if (val != null) {\n                currentYoutubePlayer.seekTo(val / 1000, true);\n                return;\n            }\n\n            return currentYoutubePlayer.getCurrentTime() * 1000;\n        }\n    }\n    duration(val) {\n        const currentYoutubePlayer = this.currentYoutubePlayer;\n\n        if (currentYoutubePlayer) {\n            return currentYoutubePlayer.getDuration() * 1000;\n        }\n        return null;\n    }\n    pause() {\n        const currentYoutubePlayer = this.currentYoutubePlayer;\n\n        if (currentYoutubePlayer) {\n            currentYoutubePlayer.pauseVideo();\n\n            const instance = this;\n\n            // This needs a delay before the youtube player will report the correct player state\n            setTimeout(function () {\n                events.trigger(instance, 'pause');\n            }, 200);\n        }\n    }\n    unpause() {\n        const currentYoutubePlayer = this.currentYoutubePlayer;\n\n        if (currentYoutubePlayer) {\n            currentYoutubePlayer.playVideo();\n\n            const instance = this;\n\n            // This needs a delay before the youtube player will report the correct player state\n            setTimeout(function () {\n                events.trigger(instance, 'unpause');\n            }, 200);\n        }\n    }\n    paused() {\n        const currentYoutubePlayer = this.currentYoutubePlayer;\n\n        if (currentYoutubePlayer) {\n            return currentYoutubePlayer.getPlayerState() === 2;\n        }\n\n        return false;\n    }\n    volume(val) {\n        if (val != null) {\n            return this.setVolume(val);\n        }\n\n        return this.getVolume();\n    }\n    setVolume(val) {\n        const currentYoutubePlayer = this.currentYoutubePlayer;\n\n        if (currentYoutubePlayer) {\n            if (val != null) {\n                currentYoutubePlayer.setVolume(val);\n            }\n        }\n    }\n    getVolume() {\n        const currentYoutubePlayer = this.currentYoutubePlayer;\n\n        if (currentYoutubePlayer) {\n            return currentYoutubePlayer.getVolume();\n        }\n    }\n    setMute(mute) {\n        const currentYoutubePlayer = this.currentYoutubePlayer;\n\n        if (mute) {\n            if (currentYoutubePlayer) {\n                currentYoutubePlayer.mute();\n            }\n        } else {\n            if (currentYoutubePlayer) {\n                currentYoutubePlayer.unMute();\n            }\n        }\n    }\n    isMuted() {\n        const currentYoutubePlayer = this.currentYoutubePlayer;\n\n        if (currentYoutubePlayer) {\n            return currentYoutubePlayer.isMuted();\n        }\n    }\n}\n\nexport default YoutubePlayer;\n"]}