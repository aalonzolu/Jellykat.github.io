{"version":3,"sources":["plugins/htmlVideoPlayer/plugin.js"],"names":["define","_require","_exports","_browser","_events","_apphost","_loading","_dom","_playbackManager","_appRouter","_connectionManager","_htmlMediaHelper","_itemHelper","_screenfull","_globalize","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_slicedToArray","arr","i","_arrayWithHoles","Array","isArray","_iterableToArrayLimit","Object","_arr","_n","_d","_e","undefined","_s","_i","next","push","length","err","_unsupportedIterableToArray","_nonIterableRest","TypeError","_createForOfIteratorHelper","o","allowArrayLike","it","F","s","n","e","_e2","f","normalCompletion","didErr","step","_e3","return","minLen","_arrayLikeToArray","toString","call","slice","name","from","test","len","arr2","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_defineProperty","_classPrivateFieldSet","receiver","privateMap","get","set","_classPrivateFieldGet","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","desc","hidePrePlaybackPage","document","querySelector","classList","add","body","remove","normalizeTrackEventText","text","useHtml","result","replace","getTextTrackUrl","track","item","format","itemHelper","isLocalItem","Path","url","playbackManager","getSubtitleUrl","ServerId","HtmlVideoPlayer","_videoDialog","_subtitleTrackIndexToSetOnPlaying","_audioTrackIndexToSetOnPlaying","_currentClock","_currentSubtitlesOctopus","_currentAssRenderer","_customTrackIndex","_showTrackOffset","_currentTrackOffset","_videoSubtitlesElem","_currentTrackEvents","_supportedFeatures","_mediaElement","_fetchQueue","_currentSrc","_started","_timeUpdated","_currentTime","_flvPlayer","_lastProfile","_resizeObserver","_this","this","_classCallCheck","instance","Constructor","elem","destroyCustomTrack","onEndedInternal","onError","time","currentTime","ensureValidVideo","currentPlayOptions","_currentPlayOptions","timeMs","transcodingOffsetTicks","updateSubtitleText","events","trigger","saveVolume","volume","dlg","onStartedAndNavigatedToOsd","removeAttribute","loading","hide","seekOnPlaybackStart","playerStartPositionTicks","timeOffset","resize","resetRenderAheadCache","fullscreen","appRouter","showVideoOsd","onNavigatedToOsd","setTransparency","type","errorCode","code","errorMessage","message","console","concat","_hlsPlayer","handleHlsJsMediaError","onErrorInternal","browser","edgeUwp","_fetchSubtitles","_createClass","protoProps","staticProps","currentSrc","incrementFetchQueue","isFetching","decrementFetchQueue","updateVideoUrl","streamInfo","isHls","toLowerCase","includes","mediaSource","RunTimeTicks","playMethod","iOS","osx","hlsPlaylistUrl","show","debug","connectionManager","getApiClient","ajax","play","options","_this2","resetSubtitleOffset","createMediaElement","setCurrentSrc","setSrcWithFlvJs","_this3","_resolve","_reject","imported","_ref3","flvPlayer","createPlayer","seekType","lazyLoad","attachMediaElement","load","setSrcWithHlsJs","_this4","requireHlsPlayer","callback","_ref","hls","window","Hls","manifestLoadingTimeOut","xhrSetup","xhr","withCredentials","loadSource","attachMedia","bindEventsToHlsPlayer","_this5","removeEventListener","val","seconds","destroyHlsPlayer","destroyFlvPlayer","destroyCastPlayer","DefaultSubtitleStreamIndex","initialSubtitleStream","MediaStreams","DeliveryMethod","DefaultAudioStreamIndex","crossOrigin","getCrossOriginValue","enableHlsJsPlayer","Container","autoplay","applySrc","playWithPromise","setSubtitleStreamIndex","index","setCurrentTrackElement","enableShowingSubtitleOffset","disableShowingSubtitleOffset","isShowingSubtitleOffsetEnabled","getTextTrack","videoElement","textTracks","find","trackElement","mode","setSubtitleOffset","offset","offsetValue","parseFloat","updateCurrentTrackOffset","setTextTrackSubtitleOffset","setTrackEventsSubtitleOffset","relativeOffset","newTrackOffset","currentTrack","cues","forEach","cue","startTime","endTime","trackEvents","trackEvent","StartPositionTicks","EndPositionTicks","getSubtitleOffset","isAudioStreamSupported","stream","deviceProfile","codec","Codec","DirectPlayProfiles","filter","p","Type","AudioCodec","getSupportedAudioStreams","_this6","profile","getMediaStreamAudioTracks","setAudioStreamIndex","streams","_step","audioIndex","_iterator","Index","elemAudioTracks","audioTracks","_step2","_iterator2","entries","_step2$value","audioTrack","enabled","stop","destroyPlayer","src","pause","destroy","onTimeUpdate","onEnded","onVolumeChange","onPause","onPlaying","onPlay","onClick","onDblClick","onWaiting","parentNode","removeChild","screenfull","isEnabled","exit","webkitIsFullScreen","webkitCancelFullscreen","canSetAudioStreamIndex","videoWidth","videoHeight","disconnect","subtitlesContainer","tryRemoveElement","_step3","_iterator3","label","_currentAspectRatio","octopus","dispose","renderer","setEnabled","fetchSubtitlesUwp","Windows","Storage","StorageFile","getFileFromPathAsync","storageFile","FileIO","readTextAsync","JSON","parse","_asyncToGenerator","fn","self","args","arguments","apply","regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","abrupt","fetch","sent","ok","Error","json","finish","fetchSubtitles","_x","_x2","setTrackForDisplay","renderTracksEvents","renderSsaAss","_this7","attachments","MediaAttachments","apiClient","htmlVideoPlayer","video","subUrl","fonts","map","getUrl","DeliveryUrl","workerUrl","baseUrl","legacyWorkerUrl","renderMode","dropAllAnimations","libassMemoryLimit","libassGlyphLimit","targetFps","prescaleTradeoff","softHeightLimit","hardHeightLimit","resizeVariation","renderAhead","_ref4","SubtitlesOctopus","requiresCustomSubtitlesElement","ps4","firefox","web0s","edge","userAgent","navigator","renderSubtitlesWithCustomElement","_this8","data","createElement","innerHTML","setSubtitleAppearance","appendChild","TrackEvents","innerElem","all","_ref5","_ref6","userSettings","applyStyles","getSubtitleAppearanceSettings","getCueCss","appearance","selector","join","setCueAppearance","_this9","_ref7","_ref8","subtitleAppearanceHelper","elementId","id","styleElem","getElementsByTagName","getStyles","IsExternal","removeCue","addTextTrack","_step4","subtitleAppearance","cueLine","parseInt","verticalPosition","_iterator4","VTTCue","TextTrackCue","Text","line","addCue","clock","seek","subtitleTextElement","selectedTrackEvent","_step5","ticks","_iterator5","streamIndex","mediaStreamTextTracks","getMediaStreamTextTracks","t","enableNativeTrackSupport","iosVersion","_this10","html","appHost","supports","getSavedVolume","addEventListener","backdropUrl","poster","insertBefore","firstChild","supportsCssAnimation","slow","zoomIn","style","animation","dom","whichAnimationEvent","once","canPlayMediaType","mediaType","supportsPlayMethod","getDeviceProfile","_this11","getDeviceProfileInternal","feature","getSupportedFeatures","mediaElement","duration","isValidDuration","tizen","orsay","setPictureInPictureEnabled","pictureInPictureEnabled","requestPictureInPicture","catch","onPictureInPictureError","exitPictureInPicture","isPip","UI","ViewManagement","ApplicationView","getForCurrentView","tryEnterViewModeAsync","ApplicationViewMode","compactOverlay","webkitSupportsPresentationMode","webkitSetPresentationMode","isPictureInPictureEnabled","pictureInPictureElement","webkitPresentationMode","setAirPlayEnabled","AirPlayEnabled","requestAirPlay","exitAirPLay","webkitShowPlaybackTargetPicker","setBrightness","Math","max","rawValue","min","cssValue","brightnessValue","getBrightness","seekable","start","end","resume","unpause","paused","setPlaybackRate","playbackRate","getPlaybackRate","getSupportedPlaybackRates","setVolume","getVolume","round","volumeUp","volumeDown","setMute","mute","muted","isMuted","setAspectRatio","removeProperty","getAspectRatio","getSupportedAspectRatios","togglePictureInPicture","toggleAirPlay","isAirPlayEnabled","getBufferedRanges","getStats","playOptions","categories","mediaCategory","stats","link","setAttribute","protocol","globalize","translate","videoCategory","rect","getBoundingClientRect","height","width","tv","getVideoPlaybackQuality","playbackQuality","droppedVideoFrames","corruptedVideoFrames","audioCategory","sinkId","getDefaultProfile","_ref2","profileBuilder","list","isViewModeSupported","safari","iPad","AirplayElement","_default"],"mappings":"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","file":"plugin.js","sourcesContent":["import browser from 'browser';\nimport events from 'events';\nimport appHost from 'apphost';\nimport loading from 'loading';\nimport dom from 'dom';\nimport playbackManager from 'playbackManager';\nimport appRouter from 'appRouter';\nimport connectionManager from 'connectionManager';\nimport {\n    bindEventsToHlsPlayer,\n    destroyHlsPlayer,\n    destroyFlvPlayer,\n    destroyCastPlayer,\n    getCrossOriginValue,\n    enableHlsJsPlayer,\n    applySrc,\n    playWithPromise,\n    onEndedInternal,\n    saveVolume,\n    seekOnPlaybackStart,\n    onErrorInternal,\n    handleHlsJsMediaError,\n    getSavedVolume,\n    isValidDuration,\n    getBufferedRanges\n} from 'htmlMediaHelper';\nimport itemHelper from 'itemHelper';\nimport screenfull from 'screenfull';\nimport globalize from 'globalize';\n\n/* eslint-disable indent */\n\nfunction tryRemoveElement(elem) {\n        const parentNode = elem.parentNode;\n        if (parentNode) {\n            // Seeing crashes in edge webview\n            try {\n                parentNode.removeChild(elem);\n            } catch (err) {\n                console.error(`error removing dialog element: ${err}`);\n            }\n        }\n    }\n\n    function enableNativeTrackSupport(currentSrc, track) {\n        if (track) {\n            if (track.DeliveryMethod === 'Embed') {\n                return true;\n            }\n        }\n\n        if (browser.firefox) {\n            if ((currentSrc || '').toLowerCase().includes('.m3u8')) {\n                return false;\n            }\n        }\n\n        if (browser.ps4) {\n            return false;\n        }\n\n        if (browser.web0s) {\n            return false;\n        }\n\n        // Edge is randomly not rendering subtitles\n        if (browser.edge) {\n            return false;\n        }\n\n        if (browser.iOS) {\n            // works in the browser but not the native app\n            if ((browser.iosVersion || 10) < 10) {\n                return false;\n            }\n        }\n\n        if (track) {\n            const format = (track.Codec || '').toLowerCase();\n            if (format === 'ssa' || format === 'ass') {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function requireHlsPlayer(callback) {\n        import('hlsjs').then(({default: hls}) => {\n            window.Hls = hls;\n            callback();\n        });\n    }\n\n    function getMediaStreamAudioTracks(mediaSource) {\n        return mediaSource.MediaStreams.filter(function (s) {\n            return s.Type === 'Audio';\n        });\n    }\n\n    function getMediaStreamTextTracks(mediaSource) {\n        return mediaSource.MediaStreams.filter(function (s) {\n            return s.Type === 'Subtitle';\n        });\n    }\n\n    function hidePrePlaybackPage() {\n        const animatedPage = document.querySelector('.page:not(.hide)');\n        animatedPage.classList.add('hide');\n        // At this point, we must hide the scrollbar placeholder, so it's not being displayed while the item is being loaded\n        document.body.classList.remove('force-scroll');\n    }\n\n    function zoomIn(elem) {\n        return new Promise(resolve => {\n            const duration = 240;\n            elem.style.animation = `htmlvideoplayer-zoomin ${duration}ms ease-in normal`;\n            hidePrePlaybackPage();\n            dom.addEventListener(elem, dom.whichAnimationEvent(), resolve, {\n                once: true\n            });\n        });\n    }\n\n    function normalizeTrackEventText(text, useHtml) {\n        const result = text.replace(/\\\\N/gi, '\\n').replace(/\\r/gi, '');\n        return useHtml ? result.replace(/\\n/gi, '<br>') : result;\n    }\n\n    function getTextTrackUrl(track, item, format) {\n        if (itemHelper.isLocalItem(item) && track.Path) {\n            return track.Path;\n        }\n\n        let url = playbackManager.getSubtitleUrl(track, item.ServerId);\n        if (format) {\n            url = url.replace('.vtt', format);\n        }\n\n        return url;\n    }\n\n    function getDefaultProfile() {\n        return import('browserdeviceprofile').then(({default: profileBuilder}) => {\n            return profileBuilder({});\n        });\n    }\n\n    export class HtmlVideoPlayer {\n        /**\n         * @type {string}\n         */\n        name;\n        /**\n         * @type {string}\n         */\n        type = 'mediaplayer';\n        /**\n         * @type {string}\n         */\n        id = 'htmlvideoplayer';\n        /**\n         * Let any players created by plugins take priority\n         *\n         * @type {number}\n         */\n        priority = 1;\n        /**\n         * @type {boolean}\n         */\n        isFetching = false;\n\n        /**\n         * @type {HTMLDivElement | null | undefined}\n         */\n        #videoDialog;\n        /**\n         * @type {number | undefined}\n         */\n        #subtitleTrackIndexToSetOnPlaying;\n        /**\n         * @type {number | null}\n         */\n        #audioTrackIndexToSetOnPlaying;\n        /**\n         * @type {null | undefined}\n         */\n        #currentClock;\n        /**\n         * @type {any | null | undefined}\n         */\n        #currentSubtitlesOctopus;\n        /**\n         * @type {null | undefined}\n         */\n        #currentAssRenderer;\n        /**\n         * @type {number | undefined}\n         */\n        #customTrackIndex;\n        /**\n         * @type {boolean | undefined}\n         */\n        #showTrackOffset;\n        /**\n         * @type {number | undefined}\n         */\n        #currentTrackOffset;\n        /**\n         * @type {HTMLElement | null | undefined}\n         */\n        #videoSubtitlesElem;\n        /**\n         * @type {any | null | undefined}\n         */\n        #currentTrackEvents;\n        /**\n         * @type {string[] | undefined}\n         */\n        #supportedFeatures;\n        /**\n         * @type {HTMLVideoElement | null | undefined}\n         */\n        #mediaElement;\n        /**\n         * @type {number}\n         */\n        #fetchQueue = 0;\n        /**\n         * @type {string | undefined}\n         */\n        #currentSrc;\n        /**\n         * @type {boolean | undefined}\n         */\n        #started;\n        /**\n         * @type {boolean | undefined}\n         */\n        #timeUpdated;\n        /**\n         * @type {number | null | undefined}\n         */\n        #currentTime;\n        /**\n         * @type {any | undefined}\n         */\n        #flvPlayer;\n        /**\n         * @private (used in other files)\n         * @type {any | undefined}\n         */\n        _hlsPlayer;\n        /**\n         * @private (used in other files)\n         * @type {any | null | undefined}\n         */\n        _castPlayer;\n        /**\n         * @private (used in other files)\n         * @type {any | undefined}\n         */\n        _currentPlayOptions;\n        /**\n         * @type {any | undefined}\n         */\n        #lastProfile;\n        /**\n         * @type {MutationObserver | IntersectionObserver | undefined} (Unclear observer typing)\n         */\n        #resizeObserver;\n\n        constructor() {\n            if (browser.edgeUwp) {\n                this.name = 'Windows Video Player';\n            } else {\n                this.name = 'Html Video Player';\n            }\n        }\n\n        currentSrc() {\n            return this.#currentSrc;\n        }\n\n        /**\n         * @private\n         */\n        incrementFetchQueue() {\n            if (this.#fetchQueue <= 0) {\n                this.isFetching = true;\n                events.trigger(this, 'beginFetch');\n            }\n\n            this.#fetchQueue++;\n        }\n\n        /**\n         * @private\n         */\n        decrementFetchQueue() {\n            this.#fetchQueue--;\n\n            if (this.#fetchQueue <= 0) {\n                this.isFetching = false;\n                events.trigger(this, 'endFetch');\n            }\n        }\n\n        /**\n         * @private\n         */\n        updateVideoUrl(streamInfo) {\n            const isHls = streamInfo.url.toLowerCase().includes('.m3u8');\n\n            const mediaSource = streamInfo.mediaSource;\n            const item = streamInfo.item;\n\n            // Huge hack alert. Safari doesn't seem to like if the segments aren't available right away when playback starts\n            // This will start the transcoding process before actually feeding the video url into the player\n            // Edit: Also seeing stalls from hls.js\n            if (mediaSource && item && !mediaSource.RunTimeTicks && isHls && streamInfo.playMethod === 'Transcode' && (browser.iOS || browser.osx)) {\n                const hlsPlaylistUrl = streamInfo.url.replace('master.m3u8', 'live.m3u8');\n\n                loading.show();\n\n                console.debug(`prefetching hls playlist: ${hlsPlaylistUrl}`);\n\n                return connectionManager.getApiClient(item.ServerId).ajax({\n\n                    type: 'GET',\n                    url: hlsPlaylistUrl\n\n                }).then(function () {\n                    console.debug(`completed prefetching hls playlist: ${hlsPlaylistUrl}`);\n\n                    loading.hide();\n                    streamInfo.url = hlsPlaylistUrl;\n                }, function () {\n                    console.error(`error prefetching hls playlist: ${hlsPlaylistUrl}`);\n\n                    loading.hide();\n                });\n            } else {\n                return Promise.resolve();\n            }\n        }\n\n        play(options) {\n            this.#started = false;\n            this.#timeUpdated = false;\n\n            this.#currentTime = null;\n\n            this.resetSubtitleOffset();\n\n            return this.createMediaElement(options).then(elem => {\n                return this.updateVideoUrl(options).then(() => {\n                    return this.setCurrentSrc(elem, options);\n                });\n            });\n        }\n\n        /**\n         * @private\n         */\n        setSrcWithFlvJs(elem, options, url) {\n            return import('flvjs').then(({default: flvjs}) => {\n                const flvPlayer = flvjs.createPlayer({\n                        type: 'flv',\n                        url: url\n                    },\n                    {\n                        seekType: 'range',\n                        lazyLoad: false\n                    });\n\n                flvPlayer.attachMediaElement(elem);\n                flvPlayer.load();\n\n                this.#flvPlayer = flvPlayer;\n\n                // This is needed in setCurrentTrackElement\n                this.#currentSrc = url;\n\n                return flvPlayer.play();\n            });\n        }\n\n        /**\n         * @private\n         */\n        setSrcWithHlsJs(elem, options, url) {\n            return new Promise((resolve, reject) => {\n                requireHlsPlayer(() => {\n                    const hls = new Hls({\n                        manifestLoadingTimeOut: 20000,\n                        xhrSetup(xhr) {\n                            xhr.withCredentials = true;\n                        }\n                    });\n                    hls.loadSource(url);\n                    hls.attachMedia(elem);\n\n                    bindEventsToHlsPlayer(this, hls, elem, this.onError, resolve, reject);\n\n                    this._hlsPlayer = hls;\n\n                    // This is needed in setCurrentTrackElement\n                    this.#currentSrc = url;\n                });\n            });\n        }\n\n        /**\n         * @private\n         */\n        setCurrentSrc(elem, options) {\n            elem.removeEventListener('error', this.onError);\n\n            let val = options.url;\n            console.debug(`playing url: ${val}`);\n\n            // Convert to seconds\n            const seconds = (options.playerStartPositionTicks || 0) / 10000000;\n            if (seconds) {\n                val += `#t=${seconds}`;\n            }\n\n            destroyHlsPlayer(this);\n            destroyFlvPlayer(this);\n            destroyCastPlayer(this);\n\n            this.#subtitleTrackIndexToSetOnPlaying = options.mediaSource.DefaultSubtitleStreamIndex == null ? -1 : options.mediaSource.DefaultSubtitleStreamIndex;\n            if (this.#subtitleTrackIndexToSetOnPlaying != null && this.#subtitleTrackIndexToSetOnPlaying >= 0) {\n                const initialSubtitleStream = options.mediaSource.MediaStreams[this.#subtitleTrackIndexToSetOnPlaying];\n                if (!initialSubtitleStream || initialSubtitleStream.DeliveryMethod === 'Encode') {\n                    this.#subtitleTrackIndexToSetOnPlaying = -1;\n                }\n            }\n\n            this.#audioTrackIndexToSetOnPlaying = options.playMethod === 'Transcode' ? null : options.mediaSource.DefaultAudioStreamIndex;\n\n            this._currentPlayOptions = options;\n\n            const crossOrigin = getCrossOriginValue(options.mediaSource);\n            if (crossOrigin) {\n                elem.crossOrigin = crossOrigin;\n            }\n\n            if (enableHlsJsPlayer(options.mediaSource.RunTimeTicks, 'Video') && val.includes('.m3u8')) {\n                return this.setSrcWithHlsJs(elem, options, val);\n            } else if (options.playMethod !== 'Transcode' && options.mediaSource.Container === 'flv') {\n                return this.setSrcWithFlvJs(elem, options, val);\n            } else {\n                elem.autoplay = true;\n\n                // Safari will not send cookies without this\n                elem.crossOrigin = 'use-credentials';\n\n                return applySrc(elem, val, options).then(() => {\n                    this.#currentSrc = val;\n\n                    return playWithPromise(elem, this.onError);\n                });\n            }\n        }\n\n        setSubtitleStreamIndex(index) {\n            this.setCurrentTrackElement(index);\n        }\n\n        resetSubtitleOffset() {\n            this.#currentTrackOffset = 0;\n            this.#showTrackOffset = false;\n        }\n\n        enableShowingSubtitleOffset() {\n            this.#showTrackOffset = true;\n        }\n\n        disableShowingSubtitleOffset() {\n            this.#showTrackOffset = false;\n        }\n\n        isShowingSubtitleOffsetEnabled() {\n            return this.#showTrackOffset;\n        }\n\n        /**\n         * @private\n         */\n        getTextTrack() {\n            const videoElement = this.#mediaElement;\n            if (videoElement) {\n                return Array.from(videoElement.textTracks)\n                    .find(function (trackElement) {\n                        // get showing .vtt textTack\n                        return trackElement.mode === 'showing';\n                    });\n            } else {\n                return null;\n            }\n        }\n\n        /**\n         * @private\n         */\n        setSubtitleOffset(offset) {\n            const offsetValue = parseFloat(offset);\n\n            // if .ass currently rendering\n            if (this.#currentSubtitlesOctopus) {\n                this.updateCurrentTrackOffset(offsetValue);\n                this.#currentSubtitlesOctopus.timeOffset = (this._currentPlayOptions.transcodingOffsetTicks || 0) / 10000000 + offsetValue;\n            } else {\n                const trackElement = this.getTextTrack();\n                // if .vtt currently rendering\n                if (trackElement) {\n                    this.setTextTrackSubtitleOffset(trackElement, offsetValue);\n                } else if (this.#currentTrackEvents) {\n                    this.setTrackEventsSubtitleOffset(this.#currentTrackEvents, offsetValue);\n                } else {\n                    console.debug('No available track, cannot apply offset: ', offsetValue);\n                }\n            }\n        }\n\n        /**\n         * @private\n         */\n        updateCurrentTrackOffset(offsetValue) {\n            let relativeOffset = offsetValue;\n            const newTrackOffset = offsetValue;\n            if (this.#currentTrackOffset) {\n                relativeOffset -= this.#currentTrackOffset;\n            }\n            this.#currentTrackOffset = newTrackOffset;\n            // relative to currentTrackOffset\n            return relativeOffset;\n        }\n\n        /**\n         * @private\n         */\n        setTextTrackSubtitleOffset(currentTrack, offsetValue) {\n            if (currentTrack.cues) {\n                offsetValue = this.updateCurrentTrackOffset(offsetValue);\n                Array.from(currentTrack.cues)\n                    .forEach(function (cue) {\n                        cue.startTime -= offsetValue;\n                        cue.endTime -= offsetValue;\n                    });\n            }\n        }\n\n        /**\n         * @private\n         */\n        setTrackEventsSubtitleOffset(trackEvents, offsetValue) {\n            if (Array.isArray(trackEvents)) {\n                offsetValue = this.updateCurrentTrackOffset(offsetValue) * 1e7; // ticks\n                trackEvents.forEach(function (trackEvent) {\n                    trackEvent.StartPositionTicks -= offsetValue;\n                    trackEvent.EndPositionTicks -= offsetValue;\n                });\n            }\n        }\n\n        getSubtitleOffset() {\n            return this.#currentTrackOffset;\n        }\n\n        /**\n         * @private\n         */\n        isAudioStreamSupported(stream, deviceProfile) {\n            const codec = (stream.Codec || '').toLowerCase();\n\n            if (!codec) {\n                return true;\n            }\n\n            if (!deviceProfile) {\n                // This should never happen\n                return true;\n            }\n\n            const profiles = deviceProfile.DirectPlayProfiles || [];\n\n            return profiles.filter(function (p) {\n                if (p.Type === 'Video') {\n                    if (!p.AudioCodec) {\n                        return true;\n                    }\n\n                    return p.AudioCodec.toLowerCase().includes(codec);\n                }\n\n                return false;\n            }).length > 0;\n        }\n\n        /**\n         * @private\n         */\n        getSupportedAudioStreams() {\n            const profile = this.#lastProfile;\n\n            return getMediaStreamAudioTracks(this._currentPlayOptions.mediaSource).filter((stream) => {\n                return this.isAudioStreamSupported(stream, profile);\n            });\n        }\n\n        setAudioStreamIndex(index) {\n            const streams = this.getSupportedAudioStreams();\n\n            if (streams.length < 2) {\n                // If there's only one supported stream then trust that the player will handle it on it's own\n                return;\n            }\n\n            let audioIndex = -1;\n\n            for (const stream of streams) {\n                audioIndex++;\n\n                if (stream.Index === index) {\n                    break;\n                }\n            }\n\n            if (audioIndex === -1) {\n                return;\n            }\n\n            const elem = this.#mediaElement;\n            if (!elem) {\n                return;\n            }\n\n            // https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/audioTracks\n\n            /**\n             * @type {ArrayLike<any>|any[]}\n             */\n            const elemAudioTracks = elem.audioTracks || [];\n            console.debug(`found ${elemAudioTracks.length} audio tracks`);\n\n            for (const [i, audioTrack] of Array.from(elemAudioTracks).entries()) {\n                if (audioIndex === i) {\n                    console.debug(`setting audio track ${i} to enabled`);\n                    audioTrack.enabled = true;\n                } else {\n                    console.debug(`setting audio track ${i} to disabled`);\n                    audioTrack.enabled = false;\n                }\n            }\n        }\n\n        stop(destroyPlayer) {\n            const elem = this.#mediaElement;\n            const src = this.#currentSrc;\n\n            if (elem) {\n                if (src) {\n                    elem.pause();\n                }\n\n                onEndedInternal(this, elem, this.onError);\n\n                if (destroyPlayer) {\n                    this.destroy();\n                }\n            }\n\n            this.destroyCustomTrack(elem);\n\n            return Promise.resolve();\n        }\n\n        destroy() {\n            destroyHlsPlayer(this);\n            destroyFlvPlayer(this);\n\n            appRouter.setTransparency('none');\n\n            const videoElement = this.#mediaElement;\n\n            if (videoElement) {\n                this.#mediaElement = null;\n\n                this.destroyCustomTrack(videoElement);\n                videoElement.removeEventListener('timeupdate', this.onTimeUpdate);\n                videoElement.removeEventListener('ended', this.onEnded);\n                videoElement.removeEventListener('volumechange', this.onVolumeChange);\n                videoElement.removeEventListener('pause', this.onPause);\n                videoElement.removeEventListener('playing', this.onPlaying);\n                videoElement.removeEventListener('play', this.onPlay);\n                videoElement.removeEventListener('click', this.onClick);\n                videoElement.removeEventListener('dblclick', this.onDblClick);\n                videoElement.removeEventListener('waiting', this.onWaiting);\n\n                videoElement.parentNode.removeChild(videoElement);\n            }\n\n            const dlg = this.#videoDialog;\n            if (dlg) {\n                this.#videoDialog = null;\n                dlg.parentNode.removeChild(dlg);\n            }\n\n            if (screenfull.isEnabled) {\n                screenfull.exit();\n            } else {\n                // iOS Safari\n                if (document.webkitIsFullScreen && document.webkitCancelFullscreen) {\n                    document.webkitCancelFullscreen();\n                }\n            }\n        }\n\n        /**\n         * @private\n         * @param e {Event} The event received from the `<video>` element\n         */\n        onEnded = (e) => {\n            /**\n             * @type {HTMLMediaElement}\n             */\n            const elem = e.target;\n            this.destroyCustomTrack(elem);\n            onEndedInternal(this, elem, this.onError);\n        };\n\n        /**\n         * @private\n         * @param e {Event} The event received from the `<video>` element\n         */\n        onTimeUpdate = (e) => {\n            /**\n             * @type {HTMLMediaElement}\n             */\n            const elem = e.target;\n            // get the player position and the transcoding offset\n            const time = elem.currentTime;\n\n            if (time && !this.#timeUpdated) {\n                this.#timeUpdated = true;\n                this.ensureValidVideo(elem);\n            }\n\n            this.#currentTime = time;\n\n            const currentPlayOptions = this._currentPlayOptions;\n            // Not sure yet how this is coming up null since we never null it out, but it is causing app crashes\n            if (currentPlayOptions) {\n                let timeMs = time * 1000;\n                timeMs += ((currentPlayOptions.transcodingOffsetTicks || 0) / 10000);\n                this.updateSubtitleText(timeMs);\n            }\n\n            events.trigger(this, 'timeupdate');\n        };\n\n        /**\n         * @private\n         * @param e {Event} The event received from the `<video>` element\n         */\n        onVolumeChange = (e) => {\n            /**\n             * @type {HTMLMediaElement}\n             */\n            const elem = e.target;\n            saveVolume(elem.volume);\n            events.trigger(this, 'volumechange');\n        };\n\n        /**\n         * @private\n         */\n        onNavigatedToOsd = () => {\n            const dlg = this.#videoDialog;\n            if (dlg) {\n                dlg.classList.remove('videoPlayerContainer-onTop');\n\n                this.onStartedAndNavigatedToOsd();\n            }\n        };\n\n        /**\n         * @private\n         */\n        onStartedAndNavigatedToOsd() {\n            // If this causes a failure during navigation we end up in an awkward UI state\n            this.setCurrentTrackElement(this.#subtitleTrackIndexToSetOnPlaying);\n\n            if (this.#audioTrackIndexToSetOnPlaying != null && this.canSetAudioStreamIndex()) {\n                this.setAudioStreamIndex(this.#audioTrackIndexToSetOnPlaying);\n            }\n        }\n\n        /**\n         * @private\n         * @param e {Event} The event received from the `<video>` element\n         */\n        onPlaying = (e) => {\n            /**\n             * @type {HTMLMediaElement}\n             */\n            const elem = e.target;\n            if (!this.#started) {\n                this.#started = true;\n                elem.removeAttribute('controls');\n\n                loading.hide();\n\n                seekOnPlaybackStart(this, e.target, this._currentPlayOptions.playerStartPositionTicks, () => {\n                    if (this.#currentSubtitlesOctopus) {\n                        this.#currentSubtitlesOctopus.timeOffset = (this._currentPlayOptions.transcodingOffsetTicks || 0) / 10000000 + this.#currentTrackOffset;\n                        this.#currentSubtitlesOctopus.resize();\n                        this.#currentSubtitlesOctopus.resetRenderAheadCache(false);\n                    }\n                });\n\n                if (this._currentPlayOptions.fullscreen) {\n                    appRouter.showVideoOsd().then(this.onNavigatedToOsd);\n                } else {\n                    appRouter.setTransparency('backdrop');\n                    this.#videoDialog.classList.remove('videoPlayerContainer-onTop');\n\n                    this.onStartedAndNavigatedToOsd();\n                }\n            }\n            events.trigger(this, 'playing');\n        };\n\n        /**\n         * @private\n         */\n        onPlay = () => {\n            events.trigger(this, 'unpause');\n        };\n\n        /**\n         * @private\n         */\n        ensureValidVideo(elem) {\n            if (elem !== this.#mediaElement) {\n                return;\n            }\n\n            if (elem.videoWidth === 0 && elem.videoHeight === 0) {\n                const mediaSource = (this._currentPlayOptions || {}).mediaSource;\n\n                // Only trigger this if there is media info\n                // Avoid triggering in situations where it might not actually have a video stream (audio only live tv channel)\n                if (!mediaSource || mediaSource.RunTimeTicks) {\n                    onErrorInternal(this, 'mediadecodeerror');\n                }\n            }\n        }\n\n        /**\n         * @private\n         */\n        onClick = () => {\n            events.trigger(this, 'click');\n        };\n\n        /**\n         * @private\n         */\n        onDblClick = () => {\n            events.trigger(this, 'dblclick');\n        };\n\n        /**\n         * @private\n         */\n        onPause = () => {\n            events.trigger(this, 'pause');\n        };\n\n        onWaiting() {\n            events.trigger(this, 'waiting');\n        }\n\n        /**\n         * @private\n         * @param e {Event} The event received from the `<video>` element\n         */\n        onError = (e) => {\n            /**\n             * @type {HTMLMediaElement}\n             */\n            const elem = e.target;\n            const errorCode = elem.error ? (elem.error.code || 0) : 0;\n            const errorMessage = elem.error ? (elem.error.message || '') : '';\n            console.error(`media element error: ${errorCode} ${errorMessage}`);\n\n            let type;\n\n            switch (errorCode) {\n                case 1:\n                    // MEDIA_ERR_ABORTED\n                    // This will trigger when changing media while something is playing\n                    return;\n                case 2:\n                    // MEDIA_ERR_NETWORK\n                    type = 'network';\n                    break;\n                case 3:\n                    // MEDIA_ERR_DECODE\n                    if (this._hlsPlayer) {\n                        handleHlsJsMediaError(this);\n                        return;\n                    } else {\n                        type = 'mediadecodeerror';\n                    }\n                    break;\n                case 4:\n                    // MEDIA_ERR_SRC_NOT_SUPPORTED\n                    type = 'medianotsupported';\n                    break;\n                default:\n                    // seeing cases where Edge is firing error events with no error code\n                    // example is start playing something, then immediately change src to something else\n                    return;\n            }\n\n            onErrorInternal(this, type);\n        };\n\n        /**\n         * @private\n         */\n        destroyCustomTrack(videoElement) {\n            if (this.#resizeObserver) {\n                this.#resizeObserver.disconnect();\n                this.#resizeObserver = null;\n            }\n\n            if (this.#videoSubtitlesElem) {\n                const subtitlesContainer = this.#videoSubtitlesElem.parentNode;\n                if (subtitlesContainer) {\n                    tryRemoveElement(subtitlesContainer);\n                }\n                this.#videoSubtitlesElem = null;\n            }\n\n            this.#currentTrackEvents = null;\n\n            if (videoElement) {\n                const allTracks = videoElement.textTracks || []; // get list of tracks\n                for (const track of allTracks) {\n                    if (track.label.includes('manualTrack')) {\n                        track.mode = 'disabled';\n                    }\n                }\n            }\n\n            this.#customTrackIndex = -1;\n            this.#currentClock = null;\n            this._currentAspectRatio = null;\n\n            const octopus = this.#currentSubtitlesOctopus;\n            if (octopus) {\n                octopus.dispose();\n            }\n            this.#currentSubtitlesOctopus = null;\n\n            const renderer = this.#currentAssRenderer;\n            if (renderer) {\n                renderer.setEnabled(false);\n            }\n            this.#currentAssRenderer = null;\n        }\n\n        /**\n         * @private\n         */\n        fetchSubtitlesUwp(track) {\n            return Windows.Storage.StorageFile.getFileFromPathAsync(track.Path).then(function (storageFile) {\n                return Windows.Storage.FileIO.readTextAsync(storageFile);\n            }).then(function (text) {\n                return JSON.parse(text);\n            });\n        }\n\n        /**\n         * @private\n         */\n        async fetchSubtitles(track, item) {\n            if (window.Windows && itemHelper.isLocalItem(item)) {\n                return this.fetchSubtitlesUwp(track, item);\n            }\n\n            this.incrementFetchQueue();\n            try {\n                const response = await fetch(getTextTrackUrl(track, item, '.js'));\n\n                if (!response.ok) {\n                    throw new Error(response);\n                }\n\n                return response.json();\n            } finally {\n                this.decrementFetchQueue();\n            }\n        }\n\n        /**\n         * @private\n         */\n        setTrackForDisplay(videoElement, track) {\n            if (!track) {\n                this.destroyCustomTrack(videoElement);\n                return;\n            }\n\n            // skip if already playing this track\n            if (this.#customTrackIndex === track.Index) {\n                return;\n            }\n\n            this.resetSubtitleOffset();\n            const item = this._currentPlayOptions.item;\n\n            this.destroyCustomTrack(videoElement);\n            this.#customTrackIndex = track.Index;\n            this.renderTracksEvents(videoElement, track, item);\n        }\n\n        /**\n         * @private\n         */\n        renderSsaAss(videoElement, track, item) {\n            const attachments = this._currentPlayOptions.mediaSource.MediaAttachments || [];\n            const apiClient = connectionManager.getApiClient(item);\n            const htmlVideoPlayer = this;\n            const options = {\n                video: videoElement,\n                subUrl: getTextTrackUrl(track, item),\n                fonts: attachments.map(function (i) {\n                    return apiClient.getUrl(i.DeliveryUrl);\n                }),\n                workerUrl: `${appRouter.baseUrl()}/libraries/subtitles-octopus-worker.js`,\n                legacyWorkerUrl: `${appRouter.baseUrl()}/libraries/subtitles-octopus-worker-legacy.js`,\n                onError() {\n                    onErrorInternal(htmlVideoPlayer, 'mediadecodeerror');\n                },\n                timeOffset: (this._currentPlayOptions.transcodingOffsetTicks || 0) / 10000000,\n\n                // new octopus options; override all, even defaults\n                renderMode: 'blend',\n                dropAllAnimations: false,\n                libassMemoryLimit: 40,\n                libassGlyphLimit: 40,\n                targetFps: 24,\n                prescaleTradeoff: 0.8,\n                softHeightLimit: 1080,\n                hardHeightLimit: 2160,\n                resizeVariation: 0.2,\n                renderAhead: 90\n            };\n            import('JavascriptSubtitlesOctopus').then(({default: SubtitlesOctopus}) => {\n                this.#currentSubtitlesOctopus = new SubtitlesOctopus(options);\n            });\n        }\n\n        /**\n         * @private\n         */\n        requiresCustomSubtitlesElement() {\n            // after a system update, ps4 isn't showing anything when creating a track element dynamically\n            // going to have to do it ourselves\n            if (browser.ps4) {\n                return true;\n            }\n\n            // This is unfortunate, but we're unable to remove the textTrack that gets added via addTextTrack\n            if (browser.firefox || browser.web0s) {\n                return true;\n            }\n\n            if (browser.edge) {\n                return true;\n            }\n\n            if (browser.iOS) {\n                const userAgent = navigator.userAgent.toLowerCase();\n                // works in the browser but not the native app\n                if ((userAgent.includes('os 9') || userAgent.includes('os 8')) && !userAgent.includes('safari')) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        /**\n         * @private\n         */\n        renderSubtitlesWithCustomElement(videoElement, track, item) {\n            this.fetchSubtitles(track, item).then((data) => {\n                if (!this.#videoSubtitlesElem) {\n                    const subtitlesContainer = document.createElement('div');\n                    subtitlesContainer.classList.add('videoSubtitles');\n                    subtitlesContainer.innerHTML = '<div class=\"videoSubtitlesInner\"></div>';\n                    this.#videoSubtitlesElem = subtitlesContainer.querySelector('.videoSubtitlesInner');\n                    this.setSubtitleAppearance(subtitlesContainer, this.#videoSubtitlesElem);\n                    videoElement.parentNode.appendChild(subtitlesContainer);\n                    this.#currentTrackEvents = data.TrackEvents;\n                }\n            });\n        }\n\n        /**\n         * @private\n         */\n        setSubtitleAppearance(elem, innerElem) {\n            Promise.all([import('userSettings'), import('subtitleAppearanceHelper')]).then(([userSettings, subtitleAppearanceHelper]) => {\n                subtitleAppearanceHelper.applyStyles({\n                    text: innerElem,\n                    window: elem\n                }, userSettings.getSubtitleAppearanceSettings());\n            });\n        }\n\n        /**\n         * @private\n         */\n        getCueCss(appearance, selector) {\n            return `${selector}::cue {\n                ${appearance.text.map((s) => s.value !== undefined && s.value !== '' ? `${s.name}:${s.value}!important;` : '').join('')}\n            }`;\n        }\n\n        /**\n         * @private\n         */\n        setCueAppearance() {\n            Promise.all([import('userSettings'), import('subtitleAppearanceHelper')]).then(([userSettings, subtitleAppearanceHelper]) => {\n                const elementId = `${this.id}-cuestyle`;\n\n                let styleElem = document.querySelector(`#${elementId}`);\n                if (!styleElem) {\n                    styleElem = document.createElement('style');\n                    styleElem.id = elementId;\n                    document.getElementsByTagName('head')[0].appendChild(styleElem);\n                }\n\n                styleElem.innerHTML = this.getCueCss(subtitleAppearanceHelper.getStyles(userSettings.getSubtitleAppearanceSettings()), '.htmlvideoplayer');\n            });\n        }\n\n        /**\n         * @private\n         */\n        renderTracksEvents(videoElement, track, item) {\n            if (!itemHelper.isLocalItem(item) || track.IsExternal) {\n                const format = (track.Codec || '').toLowerCase();\n                if (format === 'ssa' || format === 'ass') {\n                    this.renderSsaAss(videoElement, track, item);\n                    return;\n                }\n\n                if (this.requiresCustomSubtitlesElement()) {\n                    this.renderSubtitlesWithCustomElement(videoElement, track, item);\n                    return;\n                }\n            }\n\n            let trackElement = null;\n            if (videoElement.textTracks && videoElement.textTracks.length > 0) {\n                trackElement = videoElement.textTracks[0];\n\n                // This throws an error in IE, but is fine in chrome\n                // In IE it's not necessary anyway because changing the src seems to be enough\n                try {\n                    trackElement.mode = 'showing';\n                    while (trackElement.cues.length) {\n                        trackElement.removeCue(trackElement.cues[0]);\n                    }\n                } catch (e) {\n                    console.error('error removing cue from textTrack');\n                }\n\n                trackElement.mode = 'disabled';\n            } else {\n                // There is a function addTextTrack but no function for removeTextTrack\n                // Therefore we add ONE element and replace its cue data\n                trackElement = videoElement.addTextTrack('subtitles', 'manualTrack', 'und');\n            }\n\n            // download the track json\n            this.fetchSubtitles(track, item).then(function (data) {\n                import('userSettings').then((userSettings) => {\n                    // show in ui\n                    console.debug(`downloaded ${data.TrackEvents.length} track events`);\n\n                    const subtitleAppearance = userSettings.getSubtitleAppearanceSettings();\n                    const cueLine = parseInt(subtitleAppearance.verticalPosition, 10);\n\n                    // add some cues to show the text\n                    // in safari, the cues need to be added before setting the track mode to showing\n                    for (const trackEvent of data.TrackEvents) {\n                        const trackCueObject = window.VTTCue || window.TextTrackCue;\n                        const cue = new trackCueObject(trackEvent.StartPositionTicks / 10000000, trackEvent.EndPositionTicks / 10000000, normalizeTrackEventText(trackEvent.Text, false));\n\n                        if (cue.line === 'auto') {\n                            cue.line = cueLine;\n                        }\n\n                        trackElement.addCue(cue);\n                    }\n\n                    trackElement.mode = 'showing';\n                });\n            });\n        }\n\n        /**\n         * @private\n         */\n        updateSubtitleText(timeMs) {\n            const clock = this.#currentClock;\n            if (clock) {\n                try {\n                    clock.seek(timeMs / 1000);\n                } catch (err) {\n                    console.error(`error in libjass: ${err}`);\n                }\n                return;\n            }\n\n            const trackEvents = this.#currentTrackEvents;\n            const subtitleTextElement = this.#videoSubtitlesElem;\n\n            if (trackEvents && subtitleTextElement) {\n                const ticks = timeMs * 10000;\n                let selectedTrackEvent;\n                for (const trackEvent of trackEvents) {\n                    if (trackEvent.StartPositionTicks <= ticks && trackEvent.EndPositionTicks >= ticks) {\n                        selectedTrackEvent = trackEvent;\n                        break;\n                    }\n                }\n\n                if (selectedTrackEvent && selectedTrackEvent.Text) {\n                    subtitleTextElement.innerHTML = normalizeTrackEventText(selectedTrackEvent.Text, true);\n                    subtitleTextElement.classList.remove('hide');\n                } else {\n                    subtitleTextElement.classList.add('hide');\n                }\n            }\n        }\n\n        /**\n         * @private\n         */\n        setCurrentTrackElement(streamIndex) {\n            console.debug(`setting new text track index to: ${streamIndex}`);\n\n            const mediaStreamTextTracks = getMediaStreamTextTracks(this._currentPlayOptions.mediaSource);\n\n            let track = streamIndex === -1 ? null : mediaStreamTextTracks.filter(function (t) {\n                return t.Index === streamIndex;\n            })[0];\n\n            this.setTrackForDisplay(this.#mediaElement, track);\n            if (enableNativeTrackSupport(this.#currentSrc, track)) {\n                if (streamIndex !== -1) {\n                    this.setCueAppearance();\n                }\n            } else {\n                // null these out to disable the player's native display (handled below)\n                streamIndex = -1;\n                track = null;\n            }\n        }\n\n        /**\n         * @private\n         */\n        createMediaElement(options) {\n            const dlg = document.querySelector('.videoPlayerContainer');\n\n                if (!dlg) {\n                    return import('css!./style').then(() => {\n                        loading.show();\n\n                        const dlg = document.createElement('div');\n\n                        dlg.classList.add('videoPlayerContainer');\n\n                        if (options.fullscreen) {\n                            dlg.classList.add('videoPlayerContainer-onTop');\n                        }\n\n                        let html = '';\n                        const cssClass = 'htmlvideoplayer';\n\n                        // Can't autoplay in these browsers so we need to use the full controls, at least until playback starts\n                        if (!appHost.supports('htmlvideoautoplay')) {\n                            html += '<video class=\"' + cssClass + '\" preload=\"metadata\" autoplay=\"autoplay\" controls=\"controls\" webkit-playsinline playsinline>';\n                        } else {\n                            // Chrome 35 won't play with preload none\n                            html += '<video class=\"' + cssClass + '\" preload=\"metadata\" autoplay=\"autoplay\" webkit-playsinline playsinline>';\n                        }\n\n                        html += '</video>';\n\n                        dlg.innerHTML = html;\n                        const videoElement = dlg.querySelector('video');\n\n                        videoElement.volume = getSavedVolume();\n                        videoElement.addEventListener('timeupdate', this.onTimeUpdate);\n                        videoElement.addEventListener('ended', this.onEnded);\n                        videoElement.addEventListener('volumechange', this.onVolumeChange);\n                        videoElement.addEventListener('pause', this.onPause);\n                        videoElement.addEventListener('playing', this.onPlaying);\n                        videoElement.addEventListener('play', this.onPlay);\n                        videoElement.addEventListener('click', this.onClick);\n                        videoElement.addEventListener('dblclick', this.onDblClick);\n                        videoElement.addEventListener('waiting', this.onWaiting);\n                        if (options.backdropUrl) {\n                            videoElement.poster = options.backdropUrl;\n                        }\n\n                        document.body.insertBefore(dlg, document.body.firstChild);\n                        this.#videoDialog = dlg;\n                        this.#mediaElement = videoElement;\n\n                        // don't animate on smart tv's, too slow\n                        if (options.fullscreen && browser.supportsCssAnimation() && !browser.slow) {\n                            return zoomIn(dlg).then(function () {\n                                return videoElement;\n                            });\n                        } else {\n                            hidePrePlaybackPage();\n                            return videoElement;\n                        }\n                    });\n                } else {\n                    return Promise.resolve(dlg.querySelector('video'));\n                }\n        }\n\n    /**\n     * @private\n     */\n    canPlayMediaType(mediaType) {\n        return (mediaType || '').toLowerCase() === 'video';\n    }\n\n    /**\n     * @private\n     */\n    supportsPlayMethod(playMethod, item) {\n        if (appHost.supportsPlayMethod) {\n            return appHost.supportsPlayMethod(playMethod, item);\n        }\n\n        return true;\n    }\n\n    /**\n     * @private\n     */\n    getDeviceProfile(item, options) {\n        return HtmlVideoPlayer.getDeviceProfileInternal(item, options).then((profile) => {\n            this.#lastProfile = profile;\n            return profile;\n        });\n    }\n\n    /**\n     * @private\n     */\n    static getDeviceProfileInternal(item, options) {\n        if (appHost.getDeviceProfile) {\n            return appHost.getDeviceProfile(item, options);\n        }\n\n        return getDefaultProfile();\n    }\n\n    /**\n     * @private\n     */\n    static getSupportedFeatures() {\n        const list = [];\n\n        const video = document.createElement('video');\n        if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function' || document.pictureInPictureEnabled) {\n            list.push('PictureInPicture');\n        } else if (window.Windows) {\n            if (Windows.UI.ViewManagement.ApplicationView.getForCurrentView().isViewModeSupported(Windows.UI.ViewManagement.ApplicationViewMode.compactOverlay)) {\n                list.push('PictureInPicture');\n            }\n        }\n\n        if (browser.safari || browser.iOS || browser.iPad) {\n            list.push('AirPlay');\n        }\n\n        if (typeof video.playbackRate === 'number') {\n            list.push('PlaybackRate');\n        }\n\n        list.push('SetBrightness');\n        list.push('SetAspectRatio');\n\n        return list;\n    }\n\n    supports(feature) {\n        if (!this.#supportedFeatures) {\n            this.#supportedFeatures = HtmlVideoPlayer.getSupportedFeatures();\n        }\n\n        return this.#supportedFeatures.includes(feature);\n    }\n\n    // Save this for when playback stops, because querying the time at that point might return 0\n    currentTime(val) {\n        const mediaElement = this.#mediaElement;\n        if (mediaElement) {\n            if (val != null) {\n                mediaElement.currentTime = val / 1000;\n                return;\n            }\n\n            const currentTime = this.#currentTime;\n            if (currentTime) {\n                return currentTime * 1000;\n            }\n\n            return (mediaElement.currentTime || 0) * 1000;\n        }\n    }\n\n    duration() {\n        const mediaElement = this.#mediaElement;\n        if (mediaElement) {\n            const duration = mediaElement.duration;\n            if (isValidDuration(duration)) {\n                return duration * 1000;\n            }\n        }\n\n        return null;\n    }\n\n    canSetAudioStreamIndex() {\n        if (browser.tizen || browser.orsay) {\n            return true;\n        }\n\n        const video = this.#mediaElement;\n        if (video) {\n            if (video.audioTracks) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static onPictureInPictureError(err) {\n        console.error(`Picture in picture error: ${err}`);\n    }\n\n    setPictureInPictureEnabled(isEnabled) {\n        const video = this.#mediaElement;\n\n        if (document.pictureInPictureEnabled) {\n            if (video) {\n                if (isEnabled) {\n                    video.requestPictureInPicture().catch(HtmlVideoPlayer.onPictureInPictureError);\n                } else {\n                    document.exitPictureInPicture().catch(HtmlVideoPlayer.onPictureInPictureError);\n                }\n            }\n        } else if (window.Windows) {\n            this.isPip = isEnabled;\n            if (isEnabled) {\n                Windows.UI.ViewManagement.ApplicationView.getForCurrentView().tryEnterViewModeAsync(Windows.UI.ViewManagement.ApplicationViewMode.compactOverlay);\n            } else {\n                Windows.UI.ViewManagement.ApplicationView.getForCurrentView().tryEnterViewModeAsync(Windows.UI.ViewManagement.ApplicationViewMode.default);\n            }\n        } else {\n            if (video && video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n                video.webkitSetPresentationMode(isEnabled ? 'picture-in-picture' : 'inline');\n            }\n        }\n    }\n\n    isPictureInPictureEnabled() {\n        if (document.pictureInPictureEnabled) {\n            return !!document.pictureInPictureElement;\n        } else if (window.Windows) {\n            return this.isPip || false;\n        } else {\n            const video = this.#mediaElement;\n            if (video) {\n                return video.webkitPresentationMode === 'picture-in-picture';\n            }\n        }\n\n        return false;\n    }\n\n    static isAirPlayEnabled() {\n        if (document.AirPlayEnabled) {\n            return !!document.AirplayElement;\n        }\n\n        return false;\n    }\n\n    setAirPlayEnabled(isEnabled) {\n        const video = this.#mediaElement;\n\n        if (document.AirPlayEnabled) {\n            if (video) {\n                if (isEnabled) {\n                    video.requestAirPlay().catch(function(err) {\n                        console.error('Error requesting AirPlay', err);\n                    });\n                } else {\n                    document.exitAirPLay().catch(function(err) {\n                        console.error('Error exiting AirPlay', err);\n                    });\n                }\n            }\n        } else {\n            video.webkitShowPlaybackTargetPicker();\n        }\n    }\n\n    setBrightness(val) {\n        const elem = this.#mediaElement;\n\n        if (elem) {\n            val = Math.max(0, val);\n            val = Math.min(100, val);\n\n            let rawValue = val;\n            rawValue = Math.max(20, rawValue);\n\n            const cssValue = rawValue >= 100 ? 'none' : (rawValue / 100);\n            elem.style['-webkit-filter'] = `brightness(${cssValue})`;\n            elem.style.filter = `brightness(${cssValue})`;\n            elem.brightnessValue = val;\n            events.trigger(this, 'brightnesschange');\n        }\n    }\n\n    getBrightness() {\n        const elem = this.#mediaElement;\n        if (elem) {\n            const val = elem.brightnessValue;\n            return val == null ? 100 : val;\n        }\n    }\n\n    seekable() {\n        const mediaElement = this.#mediaElement;\n        if (mediaElement) {\n            const seekable = mediaElement.seekable;\n            if (seekable && seekable.length) {\n                let start = seekable.start(0);\n                let end = seekable.end(0);\n\n                if (!isValidDuration(start)) {\n                    start = 0;\n                }\n                if (!isValidDuration(end)) {\n                    end = 0;\n                }\n\n                return (end - start) > 0;\n            }\n\n            return false;\n        }\n    }\n\n    pause() {\n        const mediaElement = this.#mediaElement;\n        if (mediaElement) {\n            mediaElement.pause();\n        }\n    }\n\n    // This is a retry after error\n    resume() {\n        const mediaElement = this.#mediaElement;\n        if (mediaElement) {\n            mediaElement.play();\n        }\n    }\n\n    unpause() {\n        const mediaElement = this.#mediaElement;\n        if (mediaElement) {\n            mediaElement.play();\n        }\n    }\n\n    paused() {\n        const mediaElement = this.#mediaElement;\n        if (mediaElement) {\n            return mediaElement.paused;\n        }\n\n        return false;\n    }\n\n    setPlaybackRate(value) {\n        const mediaElement = this.#mediaElement;\n        if (mediaElement) {\n            mediaElement.playbackRate = value;\n        }\n    }\n\n    getPlaybackRate() {\n        const mediaElement = this.#mediaElement;\n        if (mediaElement) {\n            return mediaElement.playbackRate;\n        }\n        return null;\n    }\n\n    getSupportedPlaybackRates() {\n        return [{\n            name: '0.5x',\n            id: 0.5\n        }, {\n            name: '0.75x',\n            id: 0.75\n        }, {\n            name: '1x',\n            id: 1.0\n        }, {\n            name: '1.25x',\n            id: 1.25\n        }, {\n            name: '1.5x',\n            id: 1.5\n        }, {\n            name: '1.75x',\n            id: 1.75\n        }, {\n            name: '2x',\n            id: 2.0\n        }];\n    }\n\n    setVolume(val) {\n        const mediaElement = this.#mediaElement;\n        if (mediaElement) {\n            mediaElement.volume = val / 100;\n        }\n    }\n\n    getVolume() {\n        const mediaElement = this.#mediaElement;\n        if (mediaElement) {\n            return Math.min(Math.round(mediaElement.volume * 100), 100);\n        }\n    }\n\n    volumeUp() {\n        this.setVolume(Math.min(this.getVolume() + 2, 100));\n    }\n\n    volumeDown() {\n        this.setVolume(Math.max(this.getVolume() - 2, 0));\n    }\n\n    setMute(mute) {\n        const mediaElement = this.#mediaElement;\n        if (mediaElement) {\n            mediaElement.muted = mute;\n        }\n    }\n\n    isMuted() {\n        const mediaElement = this.#mediaElement;\n        if (mediaElement) {\n            return mediaElement.muted;\n        }\n        return false;\n    }\n\n    setAspectRatio(val) {\n        const mediaElement = this.#mediaElement;\n        if (mediaElement) {\n            if (val === 'auto') {\n                mediaElement.style.removeProperty('object-fit');\n            } else {\n                mediaElement.style['object-fit'] = val;\n            }\n        }\n        this._currentAspectRatio = val;\n    }\n\n    getAspectRatio() {\n        return this._currentAspectRatio || 'auto';\n    }\n\n    getSupportedAspectRatios() {\n        return [{\n            name: 'Auto',\n            id: 'auto'\n        }, {\n            name: 'Cover',\n            id: 'cover'\n        }, {\n            name: 'Fill',\n            id: 'fill'\n        }];\n    }\n\n    togglePictureInPicture() {\n        return this.setPictureInPictureEnabled(!this.isPictureInPictureEnabled());\n    }\n\n    toggleAirPlay() {\n        return this.setAirPlayEnabled(!this.isAirPlayEnabled());\n    }\n\n    getBufferedRanges() {\n        const mediaElement = this.#mediaElement;\n        if (mediaElement) {\n            return getBufferedRanges(this, mediaElement);\n        }\n\n        return [];\n    }\n\n    getStats() {\n        const mediaElement = this.#mediaElement;\n        const playOptions = this._currentPlayOptions || [];\n\n        const categories = [];\n\n        if (!mediaElement) {\n            return Promise.resolve({\n                categories: categories\n            });\n        }\n\n        const mediaCategory = {\n            stats: [],\n            type: 'media'\n        };\n        categories.push(mediaCategory);\n\n        if (playOptions.url) {\n            //  create an anchor element (note: no need to append this element to the document)\n            let link = document.createElement('a');\n            //  set href to any path\n            link.setAttribute('href', playOptions.url);\n            const protocol = (link.protocol || '').replace(':', '');\n\n            if (protocol) {\n                mediaCategory.stats.push({\n                    label: globalize.translate('LabelProtocol'),\n                    value: protocol\n                });\n            }\n\n            link = null;\n        }\n\n        if (this._hlsPlayer) {\n            mediaCategory.stats.push({\n                label: globalize.translate('LabelStreamType'),\n                value: 'HLS'\n            });\n        } else {\n            mediaCategory.stats.push({\n                label: globalize.translate('LabelStreamType'),\n                value: 'Video'\n            });\n        }\n\n        const videoCategory = {\n            stats: [],\n            type: 'video'\n        };\n        categories.push(videoCategory);\n\n        const rect = mediaElement.getBoundingClientRect ? mediaElement.getBoundingClientRect() : {};\n        let height = parseInt(rect.height);\n        let width = parseInt(rect.width);\n\n        // Don't show player dimensions on smart TVs because the app UI could be lower resolution than the video and this causes users to think there is a problem\n        if (width && height && !browser.tv) {\n            videoCategory.stats.push({\n                label: globalize.translate('LabelPlayerDimensions'),\n                value: `${width}x${height}`\n            });\n        }\n\n        height = mediaElement.videoHeight;\n        width = mediaElement.videoWidth;\n\n        if (width && height) {\n            videoCategory.stats.push({\n                label: globalize.translate('LabelVideoResolution'),\n                value: `${width}x${height}`\n            });\n        }\n\n        if (mediaElement.getVideoPlaybackQuality) {\n            const playbackQuality = mediaElement.getVideoPlaybackQuality();\n\n            const droppedVideoFrames = playbackQuality.droppedVideoFrames || 0;\n            videoCategory.stats.push({\n                label: globalize.translate('LabelDroppedFrames'),\n                value: droppedVideoFrames\n            });\n\n            const corruptedVideoFrames = playbackQuality.corruptedVideoFrames || 0;\n            videoCategory.stats.push({\n                label: globalize.translate('LabelCorruptedFrames'),\n                value: corruptedVideoFrames\n            });\n        }\n\n        const audioCategory = {\n            stats: [],\n            type: 'audio'\n        };\n        categories.push(audioCategory);\n\n        const sinkId = mediaElement.sinkId;\n        if (sinkId) {\n            audioCategory.stats.push({\n                label: 'Sink Id:',\n                value: sinkId\n            });\n        }\n\n        return Promise.resolve({\n            categories: categories\n        });\n    }\n    }\n/* eslint-enable indent */\n\nexport default HtmlVideoPlayer;\n"]}