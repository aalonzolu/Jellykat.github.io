{"version":3,"sources":["plugins/htmlAudioPlayer/plugin.js"],"names":["define","_require","_exports","_events","_browser","_apphost","htmlMediaHelper","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","call","desc","set","fadeTimeout","supportedFeatures","cancelFadeTimeout","clearTimeout","value","_default","HtmlAudioPlayer","_classCallCheck","instance","Constructor","TypeError","this","self","unBindEvents","elem","removeEventListener","onTimeUpdate","onEnded","onVolumeChange","onPause","onPlaying","onPlay","onWaiting","onEndedInternal","onError","time","currentTime","_isFadingOut","_currentTime","events","trigger","saveVolume","volume","e","_started","removeAttribute","seekOnPlaybackStart","_currentPlayOptions","playerStartPositionTicks","type","errorCode","error","code","errorMessage","message","console","toString","_hlsPlayer","handleHlsJsMediaError","onErrorInternal","name","id","priority","play","options","_timeUpdated","setCurrentSrc","bindEvents","addEventListener","val","url","debug","seconds","destroyHlsPlayer","crossOrigin","getCrossOriginValue","mediaSource","enableHlsPlayer","item","mediaType","enableHlsJsPlayer","RunTimeTicks","indexOf","Promise","resolve","reject","_resolve","_reject","imported","then","fetchHelper","ajax","response","headers","toLowerCase","requireHlsPlayer","callback","_ref2","hls","window","Hls","manifestLoadingTimeOut","xhrSetup","xhr","withCredentials","loadSource","attachMedia","bindEventsToHlsPlayer","_currentSrc","autoplay","applySrc","playWithPromise","createMediaElement","_mediaElement","document","querySelector","createElement","classList","add","body","appendChild","getSavedVolume","stop","destroyPlayer","src","supportsFade","browser","tv","pause","destroy","originalVolume","fade","startingVolume","newVolume","Math","max","setTimeout","_createClass","protoProps","staticProps","currentSrc","canPlayMediaType","getDeviceProfile","appHost","getDefaultProfile","_ref","profileBuilder","mediaElement","duration","isValidDuration","seekable","start","end","getBufferedRanges","resume","unpause","paused","setPlaybackRate","playbackRate","getPlaybackRate","setVolume","getVolume","min","round","volumeUp","volumeDown","setMute","mute","muted","isMuted","supports","feature","getSupportedFeatures","list","push"],"mappings":"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","file":"plugin.js","sourcesContent":["import events from 'events';\nimport browser from 'browser';\nimport appHost from 'apphost';\nimport * as htmlMediaHelper from 'htmlMediaHelper';\n\nfunction getDefaultProfile() {\n    return import('browserdeviceprofile').then(({ default: profileBuilder }) => {\n        return profileBuilder({});\n    });\n}\n\nlet fadeTimeout;\nfunction fade(instance, elem, startingVolume) {\n    instance._isFadingOut = true;\n\n    // Need to record the starting volume on each pass rather than querying elem.volume\n    // This is due to iOS safari not allowing volume changes and always returning the system volume value\n    const newVolume = Math.max(0, startingVolume - 0.15);\n    console.debug('fading volume to ' + newVolume);\n    elem.volume = newVolume;\n\n    if (newVolume <= 0) {\n        instance._isFadingOut = false;\n        return Promise.resolve();\n    }\n\n    return new Promise(function (resolve, reject) {\n        cancelFadeTimeout();\n        fadeTimeout = setTimeout(function () {\n            fade(instance, elem, newVolume).then(resolve, reject);\n        }, 100);\n    });\n}\n\nfunction cancelFadeTimeout() {\n    const timeout = fadeTimeout;\n    if (timeout) {\n        clearTimeout(timeout);\n        fadeTimeout = null;\n    }\n}\n\nfunction supportsFade() {\n    if (browser.tv) {\n        // Not working on tizen.\n        // We could possibly enable on other tv's, but all smart tv browsers tend to be pretty primitive\n        return false;\n    }\n\n    return true;\n}\n\nfunction requireHlsPlayer(callback) {\n    import('hlsjs').then(({ default: hls }) => {\n        window.Hls = hls;\n        callback();\n    });\n}\n\nfunction enableHlsPlayer(url, item, mediaSource, mediaType) {\n    if (!htmlMediaHelper.enableHlsJsPlayer(mediaSource.RunTimeTicks, mediaType)) {\n        return Promise.reject();\n    }\n\n    if (url.indexOf('.m3u8') !== -1) {\n        return Promise.resolve();\n    }\n\n    // issue head request to get content type\n    return new Promise(function (resolve, reject) {\n        import('fetchHelper').then((fetchHelper) => {\n            fetchHelper.ajax({\n                url: url,\n                type: 'HEAD'\n            }).then(function (response) {\n                const contentType = (response.headers.get('Content-Type') || '').toLowerCase();\n                if (contentType === 'application/x-mpegurl') {\n                    resolve();\n                } else {\n                    reject();\n                }\n            }, reject);\n        });\n    });\n}\n\nclass HtmlAudioPlayer {\n    constructor() {\n        const self = this;\n\n        self.name = 'Html Audio Player';\n        self.type = 'mediaplayer';\n        self.id = 'htmlaudioplayer';\n\n        // Let any players created by plugins take priority\n        self.priority = 1;\n\n        self.play = function (options) {\n            self._started = false;\n            self._timeUpdated = false;\n            self._currentTime = null;\n\n            const elem = createMediaElement();\n            return setCurrentSrc(elem, options);\n        };\n\n        function setCurrentSrc(elem, options) {\n            elem.removeEventListener('error', onError);\n\n            unBindEvents(elem);\n            bindEvents(elem);\n\n            let val = options.url;\n            console.debug('playing url: ' + val);\n\n            // Convert to seconds\n            const seconds = (options.playerStartPositionTicks || 0) / 10000000;\n            if (seconds) {\n                val += '#t=' + seconds;\n            }\n\n            htmlMediaHelper.destroyHlsPlayer(self);\n\n            self._currentPlayOptions = options;\n\n            const crossOrigin = htmlMediaHelper.getCrossOriginValue(options.mediaSource);\n            if (crossOrigin) {\n                elem.crossOrigin = crossOrigin;\n            }\n\n            return enableHlsPlayer(val, options.item, options.mediaSource, 'Audio').then(function () {\n                return new Promise(function (resolve, reject) {\n                    requireHlsPlayer(function () {\n                        const hls = new Hls({\n                            manifestLoadingTimeOut: 20000,\n                            xhrSetup: function (xhr, url) {\n                                xhr.withCredentials = true;\n                            }\n                        });\n                        hls.loadSource(val);\n                        hls.attachMedia(elem);\n\n                        htmlMediaHelper.bindEventsToHlsPlayer(self, hls, elem, onError, resolve, reject);\n\n                        self._hlsPlayer = hls;\n\n                        self._currentSrc = val;\n                    });\n                });\n            }, function () {\n                elem.autoplay = true;\n\n                // Safari will not send cookies without this\n                elem.crossOrigin = 'use-credentials';\n\n                return htmlMediaHelper.applySrc(elem, val, options).then(function () {\n                    self._currentSrc = val;\n\n                    return htmlMediaHelper.playWithPromise(elem, onError);\n                });\n            });\n        }\n\n        function bindEvents(elem) {\n            elem.addEventListener('timeupdate', onTimeUpdate);\n            elem.addEventListener('ended', onEnded);\n            elem.addEventListener('volumechange', onVolumeChange);\n            elem.addEventListener('pause', onPause);\n            elem.addEventListener('playing', onPlaying);\n            elem.addEventListener('play', onPlay);\n            elem.addEventListener('waiting', onWaiting);\n        }\n\n        function unBindEvents(elem) {\n            elem.removeEventListener('timeupdate', onTimeUpdate);\n            elem.removeEventListener('ended', onEnded);\n            elem.removeEventListener('volumechange', onVolumeChange);\n            elem.removeEventListener('pause', onPause);\n            elem.removeEventListener('playing', onPlaying);\n            elem.removeEventListener('play', onPlay);\n            elem.removeEventListener('waiting', onWaiting);\n        }\n\n        self.stop = function (destroyPlayer) {\n            cancelFadeTimeout();\n\n            const elem = self._mediaElement;\n            const src = self._currentSrc;\n\n            if (elem && src) {\n                if (!destroyPlayer || !supportsFade()) {\n                    elem.pause();\n\n                    htmlMediaHelper.onEndedInternal(self, elem, onError);\n\n                    if (destroyPlayer) {\n                        self.destroy();\n                    }\n                    return Promise.resolve();\n                }\n\n                const originalVolume = elem.volume;\n\n                return fade(self, elem, elem.volume).then(function () {\n                    elem.pause();\n                    elem.volume = originalVolume;\n\n                    htmlMediaHelper.onEndedInternal(self, elem, onError);\n\n                    if (destroyPlayer) {\n                        self.destroy();\n                    }\n                });\n            }\n            return Promise.resolve();\n        };\n\n        self.destroy = function () {\n            unBindEvents(self._mediaElement);\n        };\n\n        function createMediaElement() {\n            let elem = self._mediaElement;\n\n            if (elem) {\n                return elem;\n            }\n\n            elem = document.querySelector('.mediaPlayerAudio');\n\n            if (!elem) {\n                elem = document.createElement('audio');\n                elem.classList.add('mediaPlayerAudio');\n                elem.classList.add('hide');\n\n                document.body.appendChild(elem);\n            }\n\n            elem.volume = htmlMediaHelper.getSavedVolume();\n\n            self._mediaElement = elem;\n\n            return elem;\n        }\n\n        function onEnded() {\n            htmlMediaHelper.onEndedInternal(self, this, onError);\n        }\n\n        function onTimeUpdate() {\n            // Get the player position + the transcoding offset\n            const time = this.currentTime;\n\n            // Don't trigger events after user stop\n            if (!self._isFadingOut) {\n                self._currentTime = time;\n                events.trigger(self, 'timeupdate');\n            }\n        }\n\n        function onVolumeChange() {\n            if (!self._isFadingOut) {\n                htmlMediaHelper.saveVolume(this.volume);\n                events.trigger(self, 'volumechange');\n            }\n        }\n\n        function onPlaying(e) {\n            if (!self._started) {\n                self._started = true;\n                this.removeAttribute('controls');\n\n                htmlMediaHelper.seekOnPlaybackStart(self, e.target, self._currentPlayOptions.playerStartPositionTicks);\n            }\n            events.trigger(self, 'playing');\n        }\n\n        function onPlay(e) {\n            events.trigger(self, 'unpause');\n        }\n\n        function onPause() {\n            events.trigger(self, 'pause');\n        }\n\n        function onWaiting() {\n            events.trigger(self, 'waiting');\n        }\n\n        function onError() {\n            const errorCode = this.error ? (this.error.code || 0) : 0;\n            const errorMessage = this.error ? (this.error.message || '') : '';\n            console.error('media element error: ' + errorCode.toString() + ' ' + errorMessage);\n\n            let type;\n\n            switch (errorCode) {\n                case 1:\n                    // MEDIA_ERR_ABORTED\n                    // This will trigger when changing media while something is playing\n                    return;\n                case 2:\n                    // MEDIA_ERR_NETWORK\n                    type = 'network';\n                    break;\n                case 3:\n                    // MEDIA_ERR_DECODE\n                    if (self._hlsPlayer) {\n                        htmlMediaHelper.handleHlsJsMediaError(self);\n                        return;\n                    } else {\n                        type = 'mediadecodeerror';\n                    }\n                    break;\n                case 4:\n                    // MEDIA_ERR_SRC_NOT_SUPPORTED\n                    type = 'medianotsupported';\n                    break;\n                default:\n                    // seeing cases where Edge is firing error events with no error code\n                    // example is start playing something, then immediately change src to something else\n                    return;\n            }\n\n            htmlMediaHelper.onErrorInternal(self, type);\n        }\n    }\n\n    currentSrc() {\n        return this._currentSrc;\n    }\n\n    canPlayMediaType(mediaType) {\n        return (mediaType || '').toLowerCase() === 'audio';\n    }\n\n    getDeviceProfile(item) {\n        if (appHost.getDeviceProfile) {\n            return appHost.getDeviceProfile(item);\n        }\n\n        return getDefaultProfile();\n    }\n\n    // Save this for when playback stops, because querying the time at that point might return 0\n    currentTime(val) {\n        const mediaElement = this._mediaElement;\n        if (mediaElement) {\n            if (val != null) {\n                mediaElement.currentTime = val / 1000;\n                return;\n            }\n\n            const currentTime = this._currentTime;\n            if (currentTime) {\n                return currentTime * 1000;\n            }\n\n            return (mediaElement.currentTime || 0) * 1000;\n        }\n    }\n\n    duration(val) {\n        const mediaElement = this._mediaElement;\n        if (mediaElement) {\n            const duration = mediaElement.duration;\n            if (htmlMediaHelper.isValidDuration(duration)) {\n                return duration * 1000;\n            }\n        }\n\n        return null;\n    }\n\n    seekable() {\n        const mediaElement = this._mediaElement;\n        if (mediaElement) {\n            const seekable = mediaElement.seekable;\n            if (seekable && seekable.length) {\n                let start = seekable.start(0);\n                let end = seekable.end(0);\n\n                if (!htmlMediaHelper.isValidDuration(start)) {\n                    start = 0;\n                }\n                if (!htmlMediaHelper.isValidDuration(end)) {\n                    end = 0;\n                }\n\n                return (end - start) > 0;\n            }\n\n            return false;\n        }\n    }\n\n    getBufferedRanges() {\n        const mediaElement = this._mediaElement;\n        if (mediaElement) {\n            return htmlMediaHelper.getBufferedRanges(this, mediaElement);\n        }\n\n        return [];\n    }\n\n    pause() {\n        const mediaElement = this._mediaElement;\n        if (mediaElement) {\n            mediaElement.pause();\n        }\n    }\n\n    // This is a retry after error\n    resume() {\n        const mediaElement = this._mediaElement;\n        if (mediaElement) {\n            mediaElement.play();\n        }\n    }\n\n    unpause() {\n        const mediaElement = this._mediaElement;\n        if (mediaElement) {\n            mediaElement.play();\n        }\n    }\n\n    paused() {\n        const mediaElement = this._mediaElement;\n        if (mediaElement) {\n            return mediaElement.paused;\n        }\n\n        return false;\n    }\n\n    setPlaybackRate(value) {\n        const mediaElement = this._mediaElement;\n        if (mediaElement) {\n            mediaElement.playbackRate = value;\n        }\n    }\n\n    getPlaybackRate() {\n        const mediaElement = this._mediaElement;\n        if (mediaElement) {\n            return mediaElement.playbackRate;\n        }\n        return null;\n    }\n\n    setVolume(val) {\n        const mediaElement = this._mediaElement;\n        if (mediaElement) {\n            mediaElement.volume = val / 100;\n        }\n    }\n\n    getVolume() {\n        const mediaElement = this._mediaElement;\n        if (mediaElement) {\n            return Math.min(Math.round(mediaElement.volume * 100), 100);\n        }\n    }\n\n    volumeUp() {\n        this.setVolume(Math.min(this.getVolume() + 2, 100));\n    }\n\n    volumeDown() {\n        this.setVolume(Math.max(this.getVolume() - 2, 0));\n    }\n\n    setMute(mute) {\n        const mediaElement = this._mediaElement;\n        if (mediaElement) {\n            mediaElement.muted = mute;\n        }\n    }\n\n    isMuted() {\n        const mediaElement = this._mediaElement;\n        if (mediaElement) {\n            return mediaElement.muted;\n        }\n        return false;\n    }\n\n    supports(feature) {\n        if (!supportedFeatures) {\n            supportedFeatures = getSupportedFeatures();\n        }\n\n        return supportedFeatures.indexOf(feature) !== -1;\n    }\n}\n\nlet supportedFeatures;\n\nfunction getSupportedFeatures() {\n    const list = [];\n    const audio = document.createElement('audio');\n\n    if (typeof audio.playbackRate === 'number') {\n        list.push('PlaybackRate');\n    }\n\n    return list;\n}\n\nexport default HtmlAudioPlayer;\n"]}