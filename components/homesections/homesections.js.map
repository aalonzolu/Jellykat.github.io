{"version":3,"sources":["components/homesections/homesections.js"],"names":["define","_exports","_connectionManager","_cardBuilder","_dom","_layoutManager","_imageLoader","_globalize","_appRouter","_imagehelper","_paperIconButtonLight","_embyItemscontainer","_embyScroller","_embyButton","_homesections","_interopRequireDefault","obj","__esModule","default","getDefaultSection","index","loadSections","elem","apiClient","user","userSettings","getUserViews","userId","getCurrentUserId","then","result","Items","Id","userViews","noLibDescription","html","length","i","innerHTML","classList","add","promises","sections","getAllSectionsToShow","sectionCount","section","get","push","loadSection","Promise","all","resume","refresh","returnPromise","globalize","translate","createNowLink","querySelector","addEventListener","Dashboard","navigate","destroySections","elems","querySelectorAll","fetchData","parentContainer","getItemsHtml","pause","options","promise","page","allSections","loadRecentlyAdded","remove","excludeViewTypes","item","Configuration","LatestItemsExcludes","indexOf","CollectionType","frag","document","createElement","appendChild","renderLatestSection","loadLibraryTiles","loadlibraryButtons","getLibraryButtonsHtml","items","icon","imageHelper","getLibraryIcon","appRouter","getRouteUrl","Name","imageLoader","lazyChildren","loadResumeVideo","itemsContainer","getContinueWatchingFetchFn","serverId","connectionManager","getApiClient","dom","getWindowSize","innerWidth","Limit","Recursive","Fields","ImageTypeLimit","EnableImageTypes","EnableTotalRecordCount","MediaTypes","getResumableItems","getContinueWatchingItemsHtml","loadResumeAudio","getContinueListeningFetchFn","getContinueListeningItemsHtml","loadLatestLiveTvRecordings","activeRecordingsOnly","title","getLatestRecordingsFetchFn","getLiveTvRecordings","IsLibraryItem","IsInProgress","getLatestRecordingItemsHtml","cardBuilder","getCardsHtml","shape","showTitle","showParentTitle","coverImage","lazy","showDetailsMenu","centerText","overlayText","showYear","lines","overlayPlayButton","allowBottomPadding","preferThumb","cardLayout","overlayMoreButton","action","centerPlayButton","loadOnNow","Policy","EnableLiveTvAccess","resolve","getLiveTvRecommendedPrograms","IsAiring","limit","layoutManager","tv","getOnNowFetchFn","getOnNowItemsHtml","loadNextUp","getNextUpFetchFn","getNextUpEpisodes","UserId","getNextUpItemsHtml","parent","getFetchLatestItemsFn","parentId","collectionType","ParentId","getLatestItems","getLatestItemsHtmlFn","itemType","viewType","showUnplayedIndicator","showChildCountIndicator","context","Type","transition","inheritThumb","showParentTitleOrTitle","showAirTime","showChannelName","showAirDateTime","showAirEndTime","defaultShape","Object","defineProperty","value","_default"],"mappings":"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","file":"homesections.js","sourcesContent":["import connectionManager from 'connectionManager';\nimport cardBuilder from 'cardBuilder';\nimport dom from 'dom';\nimport layoutManager from 'layoutManager';\nimport imageLoader from 'imageLoader';\nimport globalize from 'globalize';\nimport appRouter from 'appRouter';\nimport imageHelper from 'scripts/imagehelper';\nimport 'paper-icon-button-light';\nimport 'emby-itemscontainer';\nimport 'emby-scroller';\nimport 'emby-button';\nimport 'css!./homesections';\n\n/* eslint-disable indent */\n\n    export function getDefaultSection(index) {\n        switch (index) {\n            case 0:\n                return 'smalllibrarytiles';\n            case 1:\n                return 'resume';\n            case 2:\n                return 'resumeaudio';\n            case 3:\n                return 'livetv';\n            case 4:\n                return 'nextup';\n            case 5:\n                return 'latestmedia';\n            case 6:\n                return 'none';\n            default:\n                return '';\n        }\n    }\n\n    function getAllSectionsToShow(userSettings, sectionCount) {\n        const sections = [];\n        for (let i = 0, length = sectionCount; i < length; i++) {\n            let section = userSettings.get('homesection' + i) || getDefaultSection(i);\n            if (section === 'folders') {\n                section = getDefaultSection(0);\n            }\n\n            sections.push(section);\n        }\n\n        return sections;\n    }\n\n    export function loadSections(elem, apiClient, user, userSettings) {\n        return getUserViews(apiClient, user.Id).then(function (userViews) {\n            let html = '';\n\n            if (userViews.length) {\n                const sectionCount = 7;\n                for (let i = 0; i < sectionCount; i++) {\n                    html += '<div class=\"verticalSection section' + i + '\"></div>';\n                }\n\n                elem.innerHTML = html;\n                elem.classList.add('homeSectionsContainer');\n\n                const promises = [];\n                const sections = getAllSectionsToShow(userSettings, sectionCount);\n                for (let i = 0; i < sections.length; i++) {\n                    promises.push(loadSection(elem, apiClient, user, userSettings, userViews, sections, i));\n                }\n\n                return Promise.all(promises).then(function () {\n                    return resume(elem, {\n                        refresh: true,\n                        returnPromise: false\n                    });\n                });\n            } else {\n                let noLibDescription;\n                if (user['Policy'] && user['Policy']['IsAdministrator']) {\n                    noLibDescription = globalize.translate('NoCreatedLibraries', '<br><a id=\"button-createLibrary\" class=\"button-link\">', '</a>');\n                } else {\n                    noLibDescription = globalize.translate('AskAdminToCreateLibrary');\n                }\n\n                html += '<div class=\"centerMessage padded-left padded-right\">';\n                html += '<h2>' + globalize.translate('MessageNothingHere') + '</h2>';\n                html += '<p>' + noLibDescription + '</p>';\n                html += '</div>';\n                elem.innerHTML = html;\n\n                const createNowLink = elem.querySelector('#button-createLibrary');\n                if (createNowLink) {\n                    createNowLink.addEventListener('click', function () {\n                        Dashboard.navigate('library.html');\n                    });\n                }\n            }\n        });\n    }\n\n    export function destroySections(elem) {\n        const elems = elem.querySelectorAll('.itemsContainer');\n        for (let i = 0; i < elems.length; i++) {\n            elems[i].fetchData = null;\n            elems[i].parentContainer = null;\n            elems[i].getItemsHtml = null;\n        }\n\n        elem.innerHTML = '';\n    }\n\n    export function pause(elem) {\n        const elems = elem.querySelectorAll('.itemsContainer');\n        for (let i = 0; i < elems.length; i++) {\n            elems[i].pause();\n        }\n    }\n\n    export function resume(elem, options) {\n        const elems = elem.querySelectorAll('.itemsContainer');\n        const promises = [];\n\n        for (let i = 0, length = elems.length; i < length; i++) {\n            promises.push(elems[i].resume(options));\n        }\n\n        const promise = Promise.all(promises);\n        if (!options || options.returnPromise !== false) {\n            return promise;\n        }\n    }\n\n    function loadSection(page, apiClient, user, userSettings, userViews, allSections, index) {\n        const section = allSections[index];\n        const userId = user.Id;\n\n        const elem = page.querySelector('.section' + index);\n\n        if (section === 'latestmedia') {\n            loadRecentlyAdded(elem, apiClient, user, userViews);\n        } else if (section === 'librarytiles' || section === 'smalllibrarytiles' || section === 'smalllibrarytiles-automobile' || section === 'librarytiles-automobile') {\n            loadLibraryTiles(elem, apiClient, user, userSettings, 'smallBackdrop', userViews, allSections);\n        } else if (section === 'librarybuttons') {\n            loadlibraryButtons(elem, apiClient, user, userSettings, userViews);\n        } else if (section === 'resume') {\n            loadResumeVideo(elem, apiClient, userId);\n        } else if (section === 'resumeaudio') {\n            loadResumeAudio(elem, apiClient, userId);\n        } else if (section === 'activerecordings') {\n            loadLatestLiveTvRecordings(elem, true, apiClient, userId);\n        } else if (section === 'nextup') {\n            loadNextUp(elem, apiClient, userId);\n        } else if (section === 'onnow' || section === 'livetv') {\n            return loadOnNow(elem, apiClient, user);\n        } else {\n            elem.innerHTML = '';\n            return Promise.resolve();\n        }\n        return Promise.resolve();\n    }\n\n    function getUserViews(apiClient, userId) {\n        return apiClient.getUserViews({}, userId || apiClient.getCurrentUserId()).then(function (result) {\n            return result.Items;\n        });\n    }\n\n    function enableScrollX() {\n        return true;\n    }\n\n    function getSquareShape() {\n        return enableScrollX() ? 'overflowSquare' : 'square';\n    }\n\n    function getThumbShape() {\n        return enableScrollX() ? 'overflowBackdrop' : 'backdrop';\n    }\n\n    function getPortraitShape() {\n        return enableScrollX() ? 'overflowPortrait' : 'portrait';\n    }\n\n    function getLibraryButtonsHtml(items) {\n        let html = '';\n\n        html += '<div class=\"verticalSection verticalSection-extrabottompadding\">';\n        html += '<h2 class=\"sectionTitle sectionTitle-cards padded-left\">' + globalize.translate('HeaderMyMedia') + '</h2>';\n\n        html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer padded-left padded-right vertical-wrap focuscontainer-x\" data-multiselect=\"false\">';\n\n        // library card background images\n        for (let i = 0, length = items.length; i < length; i++) {\n            const item = items[i];\n            const icon = imageHelper.getLibraryIcon(item.CollectionType);\n            html += '<a is=\"emby-linkbutton\" href=\"' + appRouter.getRouteUrl(item) + '\" class=\"raised homeLibraryButton\"><span class=\"material-icons homeLibraryIcon ' + icon + '\"></span><span class=\"homeLibraryText\">' + item.Name + '</span></a>';\n        }\n\n        html += '</div>';\n        html += '</div>';\n\n        return html;\n    }\n\n    function loadlibraryButtons(elem, apiClient, user, userSettings, userViews) {\n        elem.classList.remove('verticalSection');\n        const html = getLibraryButtonsHtml(userViews);\n\n        elem.innerHTML = html;\n        imageLoader.lazyChildren(elem);\n    }\n\n    function getFetchLatestItemsFn(serverId, parentId, collectionType) {\n        return function () {\n            const apiClient = connectionManager.getApiClient(serverId);\n            let limit = 16;\n\n            if (enableScrollX()) {\n                if (collectionType === 'music') {\n                    limit = 30;\n                }\n            } else {\n                if (collectionType === 'tvshows') {\n                    limit = 5;\n                } else if (collectionType === 'music') {\n                    limit = 9;\n                } else {\n                    limit = 8;\n                }\n            }\n\n            const options = {\n                Limit: limit,\n                Fields: 'PrimaryImageAspectRatio,BasicSyncInfo,Path',\n                ImageTypeLimit: 1,\n                EnableImageTypes: 'Primary,Backdrop,Thumb',\n                ParentId: parentId\n            };\n\n            return apiClient.getLatestItems(options);\n        };\n    }\n\n    function getLatestItemsHtmlFn(itemType, viewType) {\n        return function (items) {\n            const cardLayout = false;\n            let shape;\n            if (itemType === 'Channel' || viewType === 'movies' || viewType === 'books' || viewType === 'tvshows') {\n                shape = getPortraitShape();\n            } else if (viewType === 'music' || viewType === 'homevideos') {\n                shape = getSquareShape();\n            } else {\n                shape = getThumbShape();\n            }\n\n            return cardBuilder.getCardsHtml({\n                items: items,\n                shape: shape,\n                preferThumb: viewType !== 'movies' && viewType !== 'tvshows' && itemType !== 'Channel' && viewType !== 'music' ? 'auto' : null,\n                showUnplayedIndicator: false,\n                showChildCountIndicator: true,\n                context: 'home',\n                overlayText: false,\n                centerText: !cardLayout,\n                overlayPlayButton: viewType !== 'photos',\n                allowBottomPadding: !enableScrollX() && !cardLayout,\n                cardLayout: cardLayout,\n                showTitle: viewType !== 'photos',\n                showYear: viewType === 'movies' || viewType === 'tvshows' || !viewType,\n                showParentTitle: viewType === 'music' || viewType === 'tvshows' || !viewType || (cardLayout && (viewType === 'tvshows')),\n                lines: 2\n            });\n        };\n    }\n\n    function renderLatestSection(elem, apiClient, user, parent) {\n        let html = '';\n\n        html += '<div class=\"sectionTitleContainer sectionTitleContainer-cards padded-left\">';\n        if (!layoutManager.tv) {\n            html += '<a is=\"emby-linkbutton\" href=\"' + appRouter.getRouteUrl(parent, {\n                section: 'latest'\n            }) + '\" class=\"more button-flat button-flat-mini sectionTitleTextButton\">';\n            html += '<h2 class=\"sectionTitle sectionTitle-cards\">';\n            html += globalize.translate('LatestFromLibrary', parent.Name);\n            html += '</h2>';\n            html += '<span class=\"material-icons chevron_right\"></span>';\n            html += '</a>';\n        } else {\n            html += '<h2 class=\"sectionTitle sectionTitle-cards\">' + globalize.translate('LatestFromLibrary', parent.Name) + '</h2>';\n        }\n        html += '</div>';\n\n        if (enableScrollX()) {\n            html += '<div is=\"emby-scroller\" class=\"padded-top-focusscale padded-bottom-focusscale\" data-centerfocus=\"true\">';\n            html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer scrollSlider focuscontainer-x\">';\n        } else {\n            html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer focuscontainer-x padded-left padded-right vertical-wrap\">';\n        }\n\n        if (enableScrollX()) {\n            html += '</div>';\n        }\n        html += '</div>';\n\n        elem.innerHTML = html;\n\n        const itemsContainer = elem.querySelector('.itemsContainer');\n        itemsContainer.fetchData = getFetchLatestItemsFn(apiClient.serverId(), parent.Id, parent.CollectionType);\n        itemsContainer.getItemsHtml = getLatestItemsHtmlFn(parent.Type, parent.CollectionType);\n        itemsContainer.parentContainer = elem;\n    }\n\n    function loadRecentlyAdded(elem, apiClient, user, userViews) {\n        elem.classList.remove('verticalSection');\n        const excludeViewTypes = ['playlists', 'livetv', 'boxsets', 'channels'];\n\n        for (let i = 0, length = userViews.length; i < length; i++) {\n            const item = userViews[i];\n            if (user.Configuration.LatestItemsExcludes.indexOf(item.Id) !== -1) {\n                continue;\n            }\n\n            if (excludeViewTypes.indexOf(item.CollectionType || []) !== -1) {\n                continue;\n            }\n\n            const frag = document.createElement('div');\n            frag.classList.add('verticalSection');\n            frag.classList.add('hide');\n            elem.appendChild(frag);\n\n            renderLatestSection(frag, apiClient, user, item);\n        }\n    }\n\n    export function loadLibraryTiles(elem, apiClient, user, userSettings, shape, userViews, allSections) {\n        let html = '';\n        if (userViews.length) {\n            html += '<h2 class=\"sectionTitle sectionTitle-cards padded-left\">' + globalize.translate('HeaderMyMedia') + '</h2>';\n            if (enableScrollX()) {\n                html += '<div is=\"emby-scroller\" class=\"padded-top-focusscale padded-bottom-focusscale\" data-centerfocus=\"true\">';\n                html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer scrollSlider focuscontainer-x\">';\n            } else {\n                html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer padded-left padded-right focuscontainer-x vertical-wrap\">';\n            }\n\n            html += cardBuilder.getCardsHtml({\n                items: userViews,\n                shape: getThumbShape(),\n                showTitle: true,\n                centerText: true,\n                overlayText: false,\n                lazy: true,\n                transition: false,\n                allowBottomPadding: !enableScrollX()\n            });\n\n            if (enableScrollX()) {\n                html += '</div>';\n            }\n            html += '</div>';\n        }\n\n        elem.innerHTML = html;\n        imageLoader.lazyChildren(elem);\n    }\n\n    function getContinueWatchingFetchFn(serverId) {\n        return function () {\n            const apiClient = connectionManager.getApiClient(serverId);\n            const screenWidth = dom.getWindowSize().innerWidth;\n\n            let limit;\n            if (enableScrollX()) {\n                limit = 12;\n            } else {\n                limit = screenWidth >= 1920 ? 8 : (screenWidth >= 1600 ? 8 : (screenWidth >= 1200 ? 9 : 6));\n                limit = Math.min(limit, 5);\n            }\n\n            const options = {\n                Limit: limit,\n                Recursive: true,\n                Fields: 'PrimaryImageAspectRatio,BasicSyncInfo',\n                ImageTypeLimit: 1,\n                EnableImageTypes: 'Primary,Backdrop,Thumb',\n                EnableTotalRecordCount: false,\n                MediaTypes: 'Video'\n            };\n\n            return apiClient.getResumableItems(apiClient.getCurrentUserId(), options);\n        };\n    }\n\n    function getContinueWatchingItemsHtml(items) {\n        const cardLayout = false;\n        return cardBuilder.getCardsHtml({\n            items: items,\n            preferThumb: true,\n            shape: getThumbShape(),\n            overlayText: false,\n            showTitle: true,\n            showParentTitle: true,\n            lazy: true,\n            showDetailsMenu: true,\n            overlayPlayButton: true,\n            context: 'home',\n            centerText: !cardLayout,\n            allowBottomPadding: false,\n            cardLayout: cardLayout,\n            showYear: true,\n            lines: 2\n        });\n    }\n\n    function loadResumeVideo(elem, apiClient, userId) {\n        let html = '';\n\n        html += '<h2 class=\"sectionTitle sectionTitle-cards padded-left\">' + globalize.translate('HeaderContinueWatching') + '</h2>';\n        if (enableScrollX()) {\n            html += '<div is=\"emby-scroller\" class=\"padded-top-focusscale padded-bottom-focusscale\" data-centerfocus=\"true\">';\n            html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer scrollSlider focuscontainer-x\" data-monitor=\"videoplayback,markplayed\">';\n        } else {\n            html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer padded-left padded-right vertical-wrap focuscontainer-x\" data-monitor=\"videoplayback,markplayed\">';\n        }\n\n        if (enableScrollX()) {\n            html += '</div>';\n        }\n        html += '</div>';\n\n        elem.classList.add('hide');\n        elem.innerHTML = html;\n\n        const itemsContainer = elem.querySelector('.itemsContainer');\n        itemsContainer.fetchData = getContinueWatchingFetchFn(apiClient.serverId());\n        itemsContainer.getItemsHtml = getContinueWatchingItemsHtml;\n        itemsContainer.parentContainer = elem;\n    }\n\n    function getContinueListeningFetchFn(serverId) {\n        return function () {\n            const apiClient = connectionManager.getApiClient(serverId);\n            const screenWidth = dom.getWindowSize().innerWidth;\n\n            let limit;\n            if (enableScrollX()) {\n                limit = 12;\n            } else {\n                limit = screenWidth >= 1920 ? 8 : (screenWidth >= 1600 ? 8 : (screenWidth >= 1200 ? 9 : 6));\n                limit = Math.min(limit, 5);\n            }\n\n            const options = {\n                Limit: limit,\n                Recursive: true,\n                Fields: 'PrimaryImageAspectRatio,BasicSyncInfo',\n                ImageTypeLimit: 1,\n                EnableImageTypes: 'Primary,Backdrop,Thumb',\n                EnableTotalRecordCount: false,\n                MediaTypes: 'Audio'\n            };\n\n            return apiClient.getResumableItems(apiClient.getCurrentUserId(), options);\n        };\n    }\n\n    function getContinueListeningItemsHtml(items) {\n        const cardLayout = false;\n        return cardBuilder.getCardsHtml({\n            items: items,\n            preferThumb: true,\n            shape: getThumbShape(),\n            overlayText: false,\n            showTitle: true,\n            showParentTitle: true,\n            lazy: true,\n            showDetailsMenu: true,\n            overlayPlayButton: true,\n            context: 'home',\n            centerText: !cardLayout,\n            allowBottomPadding: false,\n            cardLayout: cardLayout,\n            showYear: true,\n            lines: 2\n        });\n    }\n\n    function loadResumeAudio(elem, apiClient, userId) {\n        let html = '';\n\n        html += '<h2 class=\"sectionTitle sectionTitle-cards padded-left\">' + globalize.translate('HeaderContinueWatching') + '</h2>';\n        if (enableScrollX()) {\n            html += '<div is=\"emby-scroller\" class=\"padded-top-focusscale padded-bottom-focusscale\" data-centerfocus=\"true\">';\n            html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer scrollSlider focuscontainer-x\" data-monitor=\"audioplayback,markplayed\">';\n        } else {\n            html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer padded-left padded-right vertical-wrap focuscontainer-x\" data-monitor=\"audioplayback,markplayed\">';\n        }\n\n        if (enableScrollX()) {\n            html += '</div>';\n        }\n        html += '</div>';\n\n        elem.classList.add('hide');\n        elem.innerHTML = html;\n\n        const itemsContainer = elem.querySelector('.itemsContainer');\n        itemsContainer.fetchData = getContinueListeningFetchFn(apiClient.serverId());\n        itemsContainer.getItemsHtml = getContinueListeningItemsHtml;\n        itemsContainer.parentContainer = elem;\n    }\n\n    function getOnNowFetchFn(serverId) {\n        return function () {\n            const apiClient = connectionManager.getApiClient(serverId);\n            return apiClient.getLiveTvRecommendedPrograms({\n                userId: apiClient.getCurrentUserId(),\n                IsAiring: true,\n                limit: 24,\n                ImageTypeLimit: 1,\n                EnableImageTypes: 'Primary,Thumb,Backdrop',\n                EnableTotalRecordCount: false,\n                Fields: 'ChannelInfo,PrimaryImageAspectRatio'\n            });\n        };\n    }\n\n    function getOnNowItemsHtml(items) {\n        return cardBuilder.getCardsHtml({\n            items: items,\n            preferThumb: 'auto',\n            inheritThumb: false,\n            shape: (enableScrollX() ? 'autooverflow' : 'auto'),\n            showParentTitleOrTitle: true,\n            showTitle: true,\n            centerText: true,\n            coverImage: true,\n            overlayText: false,\n            allowBottomPadding: !enableScrollX(),\n            showAirTime: true,\n            showChannelName: false,\n            showAirDateTime: false,\n            showAirEndTime: true,\n            defaultShape: getThumbShape(),\n            lines: 3,\n            overlayPlayButton: true\n        });\n    }\n\n    function loadOnNow(elem, apiClient, user) {\n        if (!user.Policy.EnableLiveTvAccess) {\n            return Promise.resolve();\n        }\n\n        return apiClient.getLiveTvRecommendedPrograms({\n            userId: apiClient.getCurrentUserId(),\n            IsAiring: true,\n            limit: 1,\n            ImageTypeLimit: 1,\n            EnableImageTypes: 'Primary,Thumb,Backdrop',\n            EnableTotalRecordCount: false,\n            Fields: 'ChannelInfo,PrimaryImageAspectRatio'\n        }).then(function (result) {\n            let html = '';\n            if (result.Items.length) {\n                elem.classList.remove('padded-left');\n                elem.classList.remove('padded-right');\n                elem.classList.remove('padded-bottom');\n                elem.classList.remove('verticalSection');\n\n                html += '<div class=\"verticalSection\">';\n                html += '<div class=\"sectionTitleContainer sectionTitleContainer-cards padded-left\">';\n                html += '<h2 class=\"sectionTitle sectionTitle-cards\">' + globalize.translate('LiveTV') + '</h2>';\n                html += '</div>';\n\n                if (enableScrollX()) {\n                    html += '<div is=\"emby-scroller\" class=\"padded-top-focusscale padded-bottom-focusscale\" data-centerfocus=\"true\" data-scrollbuttons=\"false\">';\n                    html += '<div class=\"padded-top padded-bottom scrollSlider focuscontainer-x\">';\n                } else {\n                    html += '<div class=\"padded-top padded-bottom focuscontainer-x\">';\n                }\n\n                html += '<a is=\"emby-linkbutton\" href=\"' + appRouter.getRouteUrl('livetv', {\n                    serverId: apiClient.serverId(),\n                    section: 'programs'\n                }) + '\" class=\"raised\"><span>' + globalize.translate('Programs') + '</span></a>';\n\n                html += '<a is=\"emby-linkbutton\" href=\"' + appRouter.getRouteUrl('livetv', {\n                    serverId: apiClient.serverId(),\n                    section: 'guide'\n                }) + '\" class=\"raised\"><span>' + globalize.translate('Guide') + '</span></a>';\n\n                html += '<a is=\"emby-linkbutton\" href=\"' + appRouter.getRouteUrl('recordedtv', {\n                    serverId: apiClient.serverId()\n                }) + '\" class=\"raised\"><span>' + globalize.translate('Recordings') + '</span></a>';\n\n                html += '<a is=\"emby-linkbutton\" href=\"' + appRouter.getRouteUrl('livetv', {\n                    serverId: apiClient.serverId(),\n                    section: 'dvrschedule'\n                }) + '\" class=\"raised\"><span>' + globalize.translate('Schedule') + '</span></a>';\n\n                html += '<a is=\"emby-linkbutton\" href=\"' + appRouter.getRouteUrl('livetv', {\n                    serverId: apiClient.serverId(),\n                    section: 'seriesrecording'\n                }) + '\" class=\"raised\"><span>' + globalize.translate('Series') + '</span></a>';\n\n                html += '</div>';\n                if (enableScrollX()) {\n                    html += '</div>';\n                }\n                html += '</div>';\n                html += '</div>';\n\n                html += '<div class=\"verticalSection\">';\n                html += '<div class=\"sectionTitleContainer sectionTitleContainer-cards padded-left\">';\n\n                if (!layoutManager.tv) {\n                    html += '<a is=\"emby-linkbutton\" href=\"' + appRouter.getRouteUrl('livetv', {\n                        serverId: apiClient.serverId(),\n                        section: 'onnow'\n                    }) + '\" class=\"more button-flat button-flat-mini sectionTitleTextButton\">';\n                    html += '<h2 class=\"sectionTitle sectionTitle-cards\">';\n                    html += globalize.translate('HeaderOnNow');\n                    html += '</h2>';\n                    html += '<span class=\"material-icons chevron_right\"></span>';\n                    html += '</a>';\n                } else {\n                    html += '<h2 class=\"sectionTitle sectionTitle-cards\">' + globalize.translate('HeaderOnNow') + '</h2>';\n                }\n                html += '</div>';\n\n                if (enableScrollX()) {\n                    html += '<div is=\"emby-scroller\" class=\"padded-top-focusscale padded-bottom-focusscale\" data-centerfocus=\"true\">';\n                    html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer scrollSlider focuscontainer-x\">';\n                } else {\n                    html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer padded-left padded-right vertical-wrap focuscontainer-x\">';\n                }\n\n                if (enableScrollX()) {\n                    html += '</div>';\n                }\n\n                html += '</div>';\n                html += '</div>';\n\n                elem.innerHTML = html;\n\n                const itemsContainer = elem.querySelector('.itemsContainer');\n                itemsContainer.parentContainer = elem;\n                itemsContainer.fetchData = getOnNowFetchFn(apiClient.serverId());\n                itemsContainer.getItemsHtml = getOnNowItemsHtml;\n            }\n        });\n    }\n\n    function getNextUpFetchFn(serverId) {\n        return function () {\n            const apiClient = connectionManager.getApiClient(serverId);\n            return apiClient.getNextUpEpisodes({\n                Limit: enableScrollX() ? 24 : 15,\n                Fields: 'PrimaryImageAspectRatio,SeriesInfo,DateCreated,BasicSyncInfo,Path',\n                UserId: apiClient.getCurrentUserId(),\n                ImageTypeLimit: 1,\n                EnableImageTypes: 'Primary,Backdrop,Banner,Thumb',\n                EnableTotalRecordCount: false\n            });\n        };\n    }\n\n    function getNextUpItemsHtml(items) {\n        const cardLayout = false;\n        return cardBuilder.getCardsHtml({\n            items: items,\n            preferThumb: true,\n            shape: getThumbShape(),\n            overlayText: false,\n            showTitle: true,\n            showParentTitle: true,\n            lazy: true,\n            overlayPlayButton: true,\n            context: 'home',\n            centerText: !cardLayout,\n            allowBottomPadding: !enableScrollX(),\n            cardLayout: cardLayout\n        });\n    }\n\n    function loadNextUp(elem, apiClient, userId) {\n        let html = '';\n\n        html += '<div class=\"sectionTitleContainer sectionTitleContainer-cards padded-left\">';\n        if (!layoutManager.tv) {\n            html += '<a is=\"emby-linkbutton\" href=\"' + appRouter.getRouteUrl('nextup', {\n                serverId: apiClient.serverId()\n            }) + '\" class=\"button-flat button-flat-mini sectionTitleTextButton\">';\n            html += '<h2 class=\"sectionTitle sectionTitle-cards\">';\n            html += globalize.translate('NextUp');\n            html += '</h2>';\n            html += '<span class=\"material-icons chevron_right\"></span>';\n            html += '</a>';\n        } else {\n            html += '<h2 class=\"sectionTitle sectionTitle-cards\">' + globalize.translate('NextUp') + '</h2>';\n        }\n        html += '</div>';\n\n        if (enableScrollX()) {\n            html += '<div is=\"emby-scroller\" class=\"padded-top-focusscale padded-bottom-focusscale\" data-centerfocus=\"true\">';\n            html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer scrollSlider focuscontainer-x\" data-monitor=\"videoplayback,markplayed\">';\n        } else {\n            html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer padded-left padded-right vertical-wrap focuscontainer-x\" data-monitor=\"videoplayback,markplayed\">';\n        }\n\n        if (enableScrollX()) {\n            html += '</div>';\n        }\n        html += '</div>';\n\n        elem.classList.add('hide');\n        elem.innerHTML = html;\n\n        const itemsContainer = elem.querySelector('.itemsContainer');\n        itemsContainer.fetchData = getNextUpFetchFn(apiClient.serverId());\n        itemsContainer.getItemsHtml = getNextUpItemsHtml;\n        itemsContainer.parentContainer = elem;\n    }\n\n    function getLatestRecordingsFetchFn(serverId, activeRecordingsOnly) {\n        return function () {\n            const apiClient = connectionManager.getApiClient(serverId);\n            return apiClient.getLiveTvRecordings({\n                userId: apiClient.getCurrentUserId(),\n                Limit: enableScrollX() ? 12 : 5,\n                Fields: 'PrimaryImageAspectRatio,BasicSyncInfo',\n                EnableTotalRecordCount: false,\n                IsLibraryItem: activeRecordingsOnly ? null : false,\n                IsInProgress: activeRecordingsOnly ? true : null\n            });\n        };\n    }\n\n    function getLatestRecordingItemsHtml(activeRecordingsOnly) {\n        return function (items) {\n            return cardBuilder.getCardsHtml({\n                items: items,\n                shape: enableScrollX() ? 'autooverflow' : 'auto',\n                showTitle: true,\n                showParentTitle: true,\n                coverImage: true,\n                lazy: true,\n                showDetailsMenu: true,\n                centerText: true,\n                overlayText: false,\n                showYear: true,\n                lines: 2,\n                overlayPlayButton: !activeRecordingsOnly,\n                allowBottomPadding: !enableScrollX(),\n                preferThumb: true,\n                cardLayout: false,\n                overlayMoreButton: activeRecordingsOnly,\n                action: activeRecordingsOnly ? 'none' : null,\n                centerPlayButton: activeRecordingsOnly\n            });\n        };\n    }\n\n    function loadLatestLiveTvRecordings(elem, activeRecordingsOnly, apiClient, userId) {\n        const title = activeRecordingsOnly ?\n            globalize.translate('HeaderActiveRecordings') :\n            globalize.translate('HeaderLatestRecordings');\n\n        let html = '';\n\n        html += '<div class=\"sectionTitleContainer sectionTitleContainer-cards\">';\n        html += '<h2 class=\"sectionTitle sectionTitle-cards padded-left\">' + title + '</h2>';\n        html += '</div>';\n\n        if (enableScrollX()) {\n            html += '<div is=\"emby-scroller\" class=\"padded-top-focusscale padded-bottom-focusscale\" data-centerfocus=\"true\">';\n            html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer scrollSlider focuscontainer-x\">';\n        } else {\n            html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer padded-left padded-right vertical-wrap focuscontainer-x\">';\n        }\n\n        if (enableScrollX()) {\n            html += '</div>';\n        }\n        html += '</div>';\n\n        elem.classList.add('hide');\n        elem.innerHTML = html;\n\n        const itemsContainer = elem.querySelector('.itemsContainer');\n        itemsContainer.fetchData = getLatestRecordingsFetchFn(apiClient.serverId(), activeRecordingsOnly);\n        itemsContainer.getItemsHtml = getLatestRecordingItemsHtml(activeRecordingsOnly);\n        itemsContainer.parentContainer = elem;\n    }\n\nexport default {\n    loadLibraryTiles: loadLibraryTiles,\n    getDefaultSection: getDefaultSection,\n    loadSections: loadSections,\n    destroySections: destroySections,\n    pause: pause,\n    resume: resume\n};\n\n/* eslint-enable indent */\n"]}