{"version":3,"sources":["components/search/searchresults.js"],"names":["define","_require","_exports","_layoutManager","_globalize","_connectionManager","_cardBuilder","_appRouter","_embyScroller","_embyItemscontainer","_embyButton","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_getRequireWildcardCache","WeakMap","cache","search","instance","apiClient","context","value","layoutManager","tv","mode","querySelector","classList","add","loadSuggestions","options","SortBy","IncludeItemTypes","Limit","Recursive","ImageTypeLimit","EnableImages","ParentId","parentId","EnableTotalRecordCount","getItems","getCurrentUserId","then","result","Items","html","map","itemHtml","appRouter","getRouteUrl","Name","join","searchSuggestions","innerHTML","remove","collectionType","searchType","searchTerm","IncludePeople","IncludeMedia","IncludeGenres","IncludeStudios","IncludeArtists","IsMovie","IsKids","IsNews","preferThumb","inheritThumb","shape","showParentTitleOrTitle","showTitle","centerText","coverImage","overlayText","overlayMoreButton","showAirTime","showAirDateTime","showChannelName","showYear","IsSeries","IsSports","showParentTitle","MediaTypes","ExcludeItemTypes","overlayPlayButton","query","section","cardOptions","getSearchHints","Promise","resolve","SearchHints","allowSearch","queryIncludeItemTypes","People","isMinServerVersion","Fields","methodName","UserId","populateResults","items","itemsContainer","cardBuilder","buildCards","assign","parentContainer","scalable","allowBottomPadding","embed","elem","_resolve","_reject","imported","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","call","desc","set","_ref","template","globalize","translateHtml","_default","SearchResults","_classCallCheck","Constructor","TypeError","this","element","_createClass","protoProps","staticProps","connectionManager","getApiClient","serverId","destroy"],"mappings":"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","file":"searchresults.js","sourcesContent":["import layoutManager from 'layoutManager';\nimport globalize from 'globalize';\nimport connectionManager from 'connectionManager';\nimport cardBuilder from 'cardBuilder';\nimport appRouter from 'appRouter';\nimport 'emby-scroller';\nimport 'emby-itemscontainer';\nimport 'emby-button';\n\n/* eslint-disable indent */\n\n    function loadSuggestions(instance, context, apiClient) {\n        const options = {\n\n            SortBy: 'IsFavoriteOrLiked,Random',\n            IncludeItemTypes: 'Movie,Series,MusicArtist',\n            Limit: 20,\n            Recursive: true,\n            ImageTypeLimit: 0,\n            EnableImages: false,\n            ParentId: instance.options.parentId,\n            EnableTotalRecordCount: false\n        };\n\n        apiClient.getItems(apiClient.getCurrentUserId(), options).then(function (result) {\n            if (instance.mode !== 'suggestions') {\n                result.Items = [];\n            }\n\n            const html = result.Items.map(function (i) {\n                const href = appRouter.getRouteUrl(i);\n\n                let itemHtml = '<div><a is=\"emby-linkbutton\" class=\"button-link\" style=\"display:inline-block;padding:.5em 1em;\" href=\"' + href + '\">';\n                itemHtml += i.Name;\n                itemHtml += '</a></div>';\n                return itemHtml;\n            }).join('');\n\n            const searchSuggestions = context.querySelector('.searchSuggestions');\n            searchSuggestions.querySelector('.searchSuggestionsList').innerHTML = html;\n\n            if (result.Items.length) {\n                searchSuggestions.classList.remove('hide');\n            }\n        });\n    }\n\n    function getSearchHints(instance, apiClient, query) {\n        if (!query.searchTerm) {\n            return Promise.resolve({\n                SearchHints: []\n            });\n        }\n\n        let allowSearch = true;\n\n        const queryIncludeItemTypes = query.IncludeItemTypes;\n\n        if (instance.options.collectionType === 'tvshows') {\n            if (query.IncludeArtists) {\n                allowSearch = false;\n            } else if (queryIncludeItemTypes === 'Movie' ||\n                queryIncludeItemTypes === 'LiveTvProgram' ||\n                queryIncludeItemTypes === 'MusicAlbum' ||\n                queryIncludeItemTypes === 'Audio' ||\n                queryIncludeItemTypes === 'Book' ||\n                queryIncludeItemTypes === 'AudioBook' ||\n                queryIncludeItemTypes === 'Playlist' ||\n                queryIncludeItemTypes === 'PhotoAlbum' ||\n                query.MediaTypes === 'Video' ||\n                query.MediaTypes === 'Photo') {\n                allowSearch = false;\n            }\n        } else if (instance.options.collectionType === 'movies') {\n            if (query.IncludeArtists) {\n                allowSearch = false;\n            } else if (queryIncludeItemTypes === 'Series' ||\n                queryIncludeItemTypes === 'Episode' ||\n                queryIncludeItemTypes === 'LiveTvProgram' ||\n                queryIncludeItemTypes === 'MusicAlbum' ||\n                queryIncludeItemTypes === 'Audio' ||\n                queryIncludeItemTypes === 'Book' ||\n                queryIncludeItemTypes === 'AudioBook' ||\n                queryIncludeItemTypes === 'Playlist' ||\n                queryIncludeItemTypes === 'PhotoAlbum' ||\n                query.MediaTypes === 'Video' ||\n                query.MediaTypes === 'Photo') {\n                allowSearch = false;\n            }\n        } else if (instance.options.collectionType === 'music') {\n            if (query.People) {\n                allowSearch = false;\n            } else if (queryIncludeItemTypes === 'Series' ||\n                queryIncludeItemTypes === 'Episode' ||\n                queryIncludeItemTypes === 'LiveTvProgram' ||\n                queryIncludeItemTypes === 'Movie') {\n                allowSearch = false;\n            }\n        } else if (instance.options.collectionType === 'livetv') {\n            if (query.IncludeArtists || query.IncludePeople) {\n                allowSearch = false;\n            } else if (queryIncludeItemTypes === 'Series' ||\n                queryIncludeItemTypes === 'Episode' ||\n                queryIncludeItemTypes === 'MusicAlbum' ||\n                queryIncludeItemTypes === 'Audio' ||\n                queryIncludeItemTypes === 'Book' ||\n                queryIncludeItemTypes === 'AudioBook' ||\n                queryIncludeItemTypes === 'PhotoAlbum' ||\n                queryIncludeItemTypes === 'Movie' ||\n                query.MediaTypes === 'Video' ||\n                query.MediaTypes === 'Photo') {\n                allowSearch = false;\n            }\n        }\n        if (queryIncludeItemTypes === 'NullType') {\n            allowSearch = false;\n        }\n\n        if (!allowSearch) {\n            return Promise.resolve({\n                SearchHints: []\n            });\n        }\n\n        // Convert the search hint query to a regular item query\n        if (apiClient.isMinServerVersion('3.4.1.31')) {\n            query.Fields = 'PrimaryImageAspectRatio,CanDelete,BasicSyncInfo,MediaSourceCount';\n            query.Recursive = true;\n            query.EnableTotalRecordCount = false;\n            query.ImageTypeLimit = 1;\n\n            let methodName = 'getItems';\n\n            if (!query.IncludeMedia) {\n                if (query.IncludePeople) {\n                    methodName = 'getPeople';\n                } else if (query.IncludeArtists) {\n                    methodName = 'getArtists';\n                }\n            }\n\n            return apiClient[methodName](apiClient.getCurrentUserId(), query);\n        }\n\n        query.UserId = apiClient.getCurrentUserId();\n\n        return apiClient.getSearchHints(query);\n    }\n\n    function search(instance, apiClient, context, value) {\n        if (value || layoutManager.tv) {\n            instance.mode = 'search';\n            context.querySelector('.searchSuggestions').classList.add('hide');\n        } else {\n            instance.mode = 'suggestions';\n            loadSuggestions(instance, context, apiClient);\n        }\n\n        if (instance.options.collectionType === 'livetv') {\n            searchType(instance, apiClient, {\n                searchTerm: value,\n                IncludePeople: false,\n                IncludeMedia: true,\n                IncludeGenres: false,\n                IncludeStudios: false,\n                IncludeArtists: false,\n                IncludeItemTypes: 'LiveTvProgram',\n                IsMovie: true,\n                IsKids: false,\n                IsNews: false\n\n            }, context, '.movieResults', {\n\n                preferThumb: true,\n                inheritThumb: false,\n                shape: (enableScrollX() ? 'overflowPortrait' : 'portrait'),\n                showParentTitleOrTitle: true,\n                showTitle: false,\n                centerText: true,\n                coverImage: true,\n                overlayText: false,\n                overlayMoreButton: true,\n                showAirTime: true,\n                showAirDateTime: true,\n                showChannelName: true\n            });\n        } else {\n            searchType(instance, apiClient, {\n                searchTerm: value,\n                IncludePeople: false,\n                IncludeMedia: true,\n                IncludeGenres: false,\n                IncludeStudios: false,\n                IncludeArtists: false,\n                IncludeItemTypes: 'Movie'\n\n            }, context, '.movieResults', {\n\n                showTitle: true,\n                overlayText: false,\n                centerText: true,\n                showYear: true\n            });\n        }\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            IncludeItemTypes: 'Series'\n\n        }, context, '.seriesResults', {\n\n            showTitle: true,\n            overlayText: false,\n            centerText: true,\n            showYear: true\n        });\n\n        if (instance.options.collectionType === 'livetv') {\n            searchType(instance, apiClient, {\n                searchTerm: value,\n                IncludePeople: false,\n                IncludeMedia: true,\n                IncludeGenres: false,\n                IncludeStudios: false,\n                IncludeArtists: false,\n                IncludeItemTypes: 'LiveTvProgram',\n                IsSeries: true,\n                IsSports: false,\n                IsKids: false,\n                IsNews: false\n\n            }, context, '.episodeResults', {\n\n                preferThumb: true,\n                inheritThumb: false,\n                shape: (enableScrollX() ? 'overflowBackdrop' : 'backdrop'),\n                showParentTitleOrTitle: true,\n                showTitle: false,\n                centerText: true,\n                coverImage: true,\n                overlayText: false,\n                overlayMoreButton: true,\n                showAirTime: true,\n                showAirDateTime: true,\n                showChannelName: true\n            });\n        } else {\n            searchType(instance, apiClient, {\n                searchTerm: value,\n                IncludePeople: false,\n                IncludeMedia: true,\n                IncludeGenres: false,\n                IncludeStudios: false,\n                IncludeArtists: false,\n                IncludeItemTypes: 'Episode'\n\n            }, context, '.episodeResults', {\n\n                coverImage: true,\n                showTitle: true,\n                showParentTitle: true\n            });\n        }\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            // NullType to hide\n            IncludeItemTypes: instance.options.collectionType === 'livetv' ? 'LiveTvProgram' : 'NullType',\n            IsSports: true\n\n        }, context, '.sportsResults', {\n\n            preferThumb: true,\n            inheritThumb: false,\n            shape: (enableScrollX() ? 'overflowBackdrop' : 'backdrop'),\n            showParentTitleOrTitle: true,\n            showTitle: false,\n            centerText: true,\n            coverImage: true,\n            overlayText: false,\n            overlayMoreButton: true,\n            showAirTime: true,\n            showAirDateTime: true,\n            showChannelName: true\n\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            // NullType to hide\n            IncludeItemTypes: instance.options.collectionType === 'livetv' ? 'LiveTvProgram' : 'NullType',\n            IsKids: true\n\n        }, context, '.kidsResults', {\n\n            preferThumb: true,\n            inheritThumb: false,\n            shape: (enableScrollX() ? 'overflowBackdrop' : 'backdrop'),\n            showParentTitleOrTitle: true,\n            showTitle: false,\n            centerText: true,\n            coverImage: true,\n            overlayText: false,\n            overlayMoreButton: true,\n            showAirTime: true,\n            showAirDateTime: true,\n            showChannelName: true\n\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            // NullType to hide\n            IncludeItemTypes: instance.options.collectionType === 'livetv' ? 'LiveTvProgram' : 'NullType',\n            IsNews: true\n\n        }, context, '.newsResults', {\n\n            preferThumb: true,\n            inheritThumb: false,\n            shape: (enableScrollX() ? 'overflowBackdrop' : 'backdrop'),\n            showParentTitleOrTitle: true,\n            showTitle: false,\n            centerText: true,\n            coverImage: true,\n            overlayText: false,\n            overlayMoreButton: true,\n            showAirTime: true,\n            showAirDateTime: true,\n            showChannelName: true\n\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            IncludeItemTypes: 'LiveTvProgram',\n            IsMovie: instance.options.collectionType === 'livetv' ? false : null,\n            IsSeries: instance.options.collectionType === 'livetv' ? false : null,\n            IsSports: instance.options.collectionType === 'livetv' ? false : null,\n            IsKids: instance.options.collectionType === 'livetv' ? false : null,\n            IsNews: instance.options.collectionType === 'livetv' ? false : null\n\n        }, context, '.programResults', {\n\n            preferThumb: true,\n            inheritThumb: false,\n            shape: (enableScrollX() ? 'overflowBackdrop' : 'backdrop'),\n            showParentTitleOrTitle: true,\n            showTitle: false,\n            centerText: true,\n            coverImage: true,\n            overlayText: false,\n            overlayMoreButton: true,\n            showAirTime: true,\n            showAirDateTime: true,\n            showChannelName: true\n\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            MediaTypes: 'Video',\n            ExcludeItemTypes: 'Movie,Episode'\n\n        }, context, '.videoResults', {\n\n            showParentTitle: true,\n            showTitle: true,\n            overlayText: false,\n            centerText: true\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: true,\n            IncludeMedia: false,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false\n\n        }, context, '.peopleResults', {\n\n            coverImage: true,\n            showTitle: true\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: false,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: true\n\n        }, context, '.artistResults', {\n            coverImage: true,\n            showTitle: true\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            IncludeItemTypes: 'MusicAlbum'\n\n        }, context, '.albumResults', {\n\n            showParentTitle: true,\n            showTitle: true,\n            overlayText: false,\n            centerText: true\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            IncludeItemTypes: 'Audio'\n\n        }, context, '.songResults', {\n\n            showParentTitle: true,\n            showTitle: true,\n            overlayText: false,\n            centerText: true,\n            overlayPlayButton: true\n\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            MediaTypes: 'Photo'\n\n        }, context, '.photoResults', {\n\n            showParentTitle: false,\n            showTitle: true,\n            overlayText: false,\n            centerText: true\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            IncludeItemTypes: 'PhotoAlbum'\n\n        }, context, '.photoAlbumResults', {\n\n            showTitle: true,\n            overlayText: false,\n            centerText: true\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            IncludeItemTypes: 'Book'\n\n        }, context, '.bookResults', {\n\n            showTitle: true,\n            overlayText: false,\n            centerText: true\n\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            IncludeItemTypes: 'AudioBook'\n\n        }, context, '.audioBookResults', {\n\n            showTitle: true,\n            overlayText: false,\n            centerText: true\n        });\n\n        searchType(instance, apiClient, {\n            searchTerm: value,\n            IncludePeople: false,\n            IncludeMedia: true,\n            IncludeGenres: false,\n            IncludeStudios: false,\n            IncludeArtists: false,\n            IncludeItemTypes: 'Playlist'\n\n        }, context, '.playlistResults', {\n\n            showTitle: true,\n            overlayText: false,\n            centerText: true\n        });\n    }\n\n    function searchType(instance, apiClient, query, context, section, cardOptions) {\n        query.Limit = enableScrollX() ? 24 : 16;\n        query.ParentId = instance.options.parentId;\n\n        getSearchHints(instance, apiClient, query).then(function (result) {\n            populateResults(result, context, section, cardOptions);\n        });\n    }\n\n    function populateResults(result, context, section, cardOptions) {\n        section = context.querySelector(section);\n\n        const items = result.Items || result.SearchHints;\n\n        const itemsContainer = section.querySelector('.itemsContainer');\n\n        cardBuilder.buildCards(items, Object.assign({\n\n            itemsContainer: itemsContainer,\n            parentContainer: section,\n            shape: enableScrollX() ? 'autooverflow' : 'auto',\n            scalable: true,\n            overlayText: false,\n            centerText: true,\n            allowBottomPadding: !enableScrollX()\n\n        }, cardOptions || {}));\n    }\n\n    function enableScrollX() {\n        return true;\n    }\n\n    function replaceAll(originalString, strReplace, strWith) {\n        const reg = new RegExp(strReplace, 'ig');\n        return originalString.replace(reg, strWith);\n    }\n\n    function embed(elem, instance, options) {\n        import('text!./searchresults.template.html').then(({default: template}) => {\n            if (!enableScrollX()) {\n                template = replaceAll(template, 'data-horizontal=\"true\"', 'data-horizontal=\"false\"');\n                template = replaceAll(template, 'itemsContainer scrollSlider', 'itemsContainer scrollSlider vertical-wrap');\n            }\n\n            const html = globalize.translateHtml(template, 'core');\n\n            elem.innerHTML = html;\n\n            elem.classList.add('searchResults');\n            instance.search('');\n        });\n    }\n\nclass SearchResults {\n    constructor(options) {\n        this.options = options;\n        embed(options.element, this, options);\n    }\n    search(value) {\n        const apiClient = connectionManager.getApiClient(this.options.serverId);\n\n        search(this, apiClient, this.options.element, value);\n    }\n    destroy() {\n        const options = this.options;\n        if (options) {\n            options.element.classList.remove('searchFields');\n        }\n        this.options = null;\n    }\n}\n\nexport default SearchResults;\n\n/* eslint-enable indent */\n"]}