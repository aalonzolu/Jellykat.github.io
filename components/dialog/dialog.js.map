{"version":3,"sources":["components/dialog/dialog.js"],"names":["define","_require","_exports","_dialogHelper","_dom","_layoutManager","_scrollHelper","_globalize","_materialIcons","_embyButton","_paperIconButtonLight","_embyInput","_formDialogStyle","_flexStyles","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","showDialog","options","template","dialogOptions","removeOnClose","scrollY","enableTvLayout","layoutManager","tv","size","dlg","dialogHelper","createDialog","classList","add","innerHTML","globalize","translateHtml","formDialogContent","querySelector","style","scrollHelper","centerFocus","on","maxWidth","concat","Math","min","buttons","length","dom","getWindowSize","innerWidth","title","i","displayText","html","text","dialogResult","hasDescriptions","item","autoFocus","buttonClass","type","description","id","name","onButtonClick","getAttribute","close","querySelectorAll","addEventListener","open","off","show","_x","_x2","_show","regeneratorRuntime","mark","_callee","_yield$import","wrap","_callee$","_context","prev","next","_resolve","_reject","imported","sent","abrupt","stop","_default"],"mappings":"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","file":"dialog.js","sourcesContent":["import dialogHelper from 'dialogHelper';\nimport dom from 'dom';\nimport layoutManager from 'layoutManager';\nimport scrollHelper from 'scrollHelper';\nimport globalize from 'globalize';\nimport 'material-icons';\nimport 'emby-button';\nimport 'paper-icon-button-light';\nimport 'emby-input';\nimport 'formDialogStyle';\nimport 'flexStyles';\n\n/* eslint-disable indent */\n\n    function showDialog(options, template) {\n        const dialogOptions = {\n            removeOnClose: true,\n            scrollY: false\n        };\n\n        const enableTvLayout = layoutManager.tv;\n\n        if (enableTvLayout) {\n            dialogOptions.size = 'fullscreen';\n        }\n\n        const dlg = dialogHelper.createDialog(dialogOptions);\n\n        dlg.classList.add('formDialog');\n\n        dlg.innerHTML = globalize.translateHtml(template, 'core');\n\n        dlg.classList.add('align-items-center');\n        dlg.classList.add('justify-content-center');\n        const formDialogContent = dlg.querySelector('.formDialogContent');\n        formDialogContent.classList.add('no-grow');\n\n        if (enableTvLayout) {\n            formDialogContent.style['max-width'] = '50%';\n            formDialogContent.style['max-height'] = '60%';\n            scrollHelper.centerFocus.on(formDialogContent, false);\n        } else {\n            formDialogContent.style.maxWidth = `${Math.min((options.buttons.length * 150) + 200, dom.getWindowSize().innerWidth - 50)}px`;\n            dlg.classList.add('dialog-fullscreen-lowres');\n        }\n\n        if (options.title) {\n            dlg.querySelector('.formDialogHeaderTitle').innerHTML = options.title || '';\n        } else {\n            dlg.querySelector('.formDialogHeaderTitle').classList.add('hide');\n        }\n\n        const displayText = options.html || options.text || '';\n        dlg.querySelector('.text').innerHTML = displayText;\n\n        if (!displayText) {\n            dlg.querySelector('.dialogContentInner').classList.add('hide');\n        }\n\n        let i;\n        let length;\n        let html = '';\n        let hasDescriptions = false;\n\n        for (i = 0, length = options.buttons.length; i < length; i++) {\n            const item = options.buttons[i];\n            const autoFocus = i === 0 ? ' autofocus' : '';\n\n            let buttonClass = 'btnOption raised formDialogFooterItem formDialogFooterItem-autosize';\n\n            if (item.type) {\n                buttonClass += ` button-${item.type}`;\n            }\n\n            if (item.description) {\n                hasDescriptions = true;\n            }\n\n            if (hasDescriptions) {\n                buttonClass += ' formDialogFooterItem-vertical formDialogFooterItem-nomarginbottom';\n            }\n\n            html += `<button is=\"emby-button\" type=\"button\" class=\"${buttonClass}\" data-id=\"${item.id}\"${autoFocus}>${item.name}</button>`;\n\n            if (item.description) {\n                html += `<div class=\"formDialogFooterItem formDialogFooterItem-autosize fieldDescription\" style=\"margin-top:.25em!important;margin-bottom:1.25em!important;\">${item.description}</div>`;\n            }\n        }\n\n        dlg.querySelector('.formDialogFooter').innerHTML = html;\n\n        if (hasDescriptions) {\n            dlg.querySelector('.formDialogFooter').classList.add('formDialogFooter-vertical');\n        }\n\n        let dialogResult;\n        function onButtonClick() {\n            dialogResult = this.getAttribute('data-id');\n            dialogHelper.close(dlg);\n        }\n\n        const buttons = dlg.querySelectorAll('.btnOption');\n        for (i = 0, length = buttons.length; i < length; i++) {\n            buttons[i].addEventListener('click', onButtonClick);\n        }\n\n        return dialogHelper.open(dlg).then(() => {\n            if (enableTvLayout) {\n                scrollHelper.centerFocus.off(dlg.querySelector('.formDialogContent'), false);\n            }\n\n            if (dialogResult) {\n                return dialogResult;\n            } else {\n                return Promise.reject();\n            }\n        });\n    }\n\n    export async function show(text, title) {\n        let options;\n        if (typeof text === 'string') {\n            options = {\n                title: title,\n                text: text\n            };\n        } else {\n            options = text;\n        }\n\n        const { default: template } = await import('text!./dialog.template.html');\n        return new Promise((resolve, reject) => {\n            showDialog(options, template).then(resolve, reject);\n        });\n    }\n\n/* eslint-enable indent */\nexport default {\n    show: show\n};\n"]}