{"version":3,"sources":["components/favoriteitems.js"],"names":["define","_exports","_loading","_cardBuilder","_dom","_apphost","_imageLoader","_globalize","_layoutManager","_scrollStyles","_embyItemscontainer","_interopRequireDefault","obj","__esModule","default","enableScrollX","layoutManager","desktop","getThumbShape","getPosterShape","getSquareShape","loadSection","elem","userId","topParentId","section","isSingleSection","promise","screenWidth","dom","getWindowSize","innerWidth","options","SortBy","SortOrder","Filters","Recursive","Fields","CollapseBoxSetItems","ExcludeLocationTypes","EnableTotalRecordCount","ParentId","Limit","types","ApiClient","getArtists","IncludeItemTypes","getItems","then","result","html","Items","length","tv","serverId","globalize","translate","name","scrollXClass","appHost","preferVisualCards","autoCardLayout","showTitle","cardBuilder","getCardsHtml","preferThumb","shape","centerText","overlayText","showParentTitle","scalable","coverImage","overlayPlayButton","overlayMoreButton","action","allowBottomPadding","cardLayout","innerHTML","imageLoader","lazyChildren","loadSections","page","loading","show","sections","getSections","id","sectionid","getParameterByName","filter","s","indexOf","querySelector","i","promises","push","Promise","all","hide","Object","defineProperty","value","_default","render"],"mappings":"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","file":"favoriteitems.js","sourcesContent":["import loading from 'loading';\nimport cardBuilder from 'cardBuilder';\nimport dom from 'dom';\nimport appHost from 'apphost';\nimport imageLoader from 'imageLoader';\nimport globalize from 'globalize';\nimport layoutManager from 'layoutManager';\nimport 'scrollStyles';\nimport 'emby-itemscontainer';\n\n/* eslint-disable indent */\n\n    function enableScrollX() {\n        return !layoutManager.desktop;\n    }\n\n    function getThumbShape() {\n        return enableScrollX() ? 'overflowBackdrop' : 'backdrop';\n    }\n\n    function getPosterShape() {\n        return enableScrollX() ? 'overflowPortrait' : 'portrait';\n    }\n\n    function getSquareShape() {\n        return enableScrollX() ? 'overflowSquare' : 'square';\n    }\n\n    function getSections() {\n        return [{\n            name: 'HeaderFavoriteMovies',\n            types: 'Movie',\n            id: 'favoriteMovies',\n            shape: getPosterShape(),\n            showTitle: false,\n            overlayPlayButton: true\n        }, {\n            name: 'HeaderFavoriteShows',\n            types: 'Series',\n            id: 'favoriteShows',\n            shape: getPosterShape(),\n            showTitle: false,\n            overlayPlayButton: true\n        }, {\n            name: 'HeaderFavoriteEpisodes',\n            types: 'Episode',\n            id: 'favoriteEpisode',\n            shape: getThumbShape(),\n            preferThumb: false,\n            showTitle: true,\n            showParentTitle: true,\n            overlayPlayButton: true,\n            overlayText: false,\n            centerText: true\n        }, {\n            name: 'HeaderFavoriteVideos',\n            types: 'Video,MusicVideo',\n            id: 'favoriteVideos',\n            shape: getThumbShape(),\n            preferThumb: true,\n            showTitle: true,\n            overlayPlayButton: true,\n            overlayText: false,\n            centerText: true\n        }, {\n            name: 'HeaderFavoriteArtists',\n            types: 'MusicArtist',\n            id: 'favoriteArtists',\n            shape: getSquareShape(),\n            preferThumb: false,\n            showTitle: true,\n            overlayText: false,\n            showParentTitle: false,\n            centerText: true,\n            overlayPlayButton: true,\n            coverImage: true\n        }, {\n            name: 'HeaderFavoriteAlbums',\n            types: 'MusicAlbum',\n            id: 'favoriteAlbums',\n            shape: getSquareShape(),\n            preferThumb: false,\n            showTitle: true,\n            overlayText: false,\n            showParentTitle: true,\n            centerText: true,\n            overlayPlayButton: true,\n            coverImage: true\n        }, {\n            name: 'HeaderFavoriteSongs',\n            types: 'Audio',\n            id: 'favoriteSongs',\n            shape: getSquareShape(),\n            preferThumb: false,\n            showTitle: true,\n            overlayText: false,\n            showParentTitle: true,\n            centerText: true,\n            overlayMoreButton: true,\n            action: 'instantmix',\n            coverImage: true\n        }];\n    }\n\n    function loadSection(elem, userId, topParentId, section, isSingleSection) {\n        const screenWidth = dom.getWindowSize().innerWidth;\n        const options = {\n            SortBy: 'SortName',\n            SortOrder: 'Ascending',\n            Filters: 'IsFavorite',\n            Recursive: true,\n            Fields: 'PrimaryImageAspectRatio,BasicSyncInfo',\n            CollapseBoxSetItems: false,\n            ExcludeLocationTypes: 'Virtual',\n            EnableTotalRecordCount: false\n        };\n\n        if (topParentId) {\n            options.ParentId = topParentId;\n        }\n\n        if (!isSingleSection) {\n            options.Limit = screenWidth >= 1920 ? 10 : screenWidth >= 1440 ? 8 : 6;\n\n            if (enableScrollX()) {\n                options.Limit = 20;\n            }\n        }\n\n        let promise;\n\n        if (section.types === 'MusicArtist') {\n            promise = ApiClient.getArtists(userId, options);\n        } else {\n            options.IncludeItemTypes = section.types;\n            promise = ApiClient.getItems(userId, options);\n        }\n\n        return promise.then(function (result) {\n            let html = '';\n\n            if (result.Items.length) {\n                if (html += '<div class=\"sectionTitleContainer sectionTitleContainer-cards padded-left\">', !layoutManager.tv && options.Limit && result.Items.length >= options.Limit) {\n                    html += '<a is=\"emby-linkbutton\" href=\"' + ('list.html?serverId=' + ApiClient.serverId() + '&type=' + section.types + '&IsFavorite=true') + '\" class=\"more button-flat button-flat-mini sectionTitleTextButton\">';\n                    html += '<h2 class=\"sectionTitle sectionTitle-cards\">';\n                    html += globalize.translate(section.name);\n                    html += '</h2>';\n                    html += '<span class=\"material-icons chevron_right\"></span>';\n                    html += '</a>';\n                } else {\n                    html += '<h2 class=\"sectionTitle sectionTitle-cards\">' + globalize.translate(section.name) + '</h2>';\n                }\n\n                html += '</div>';\n                if (enableScrollX()) {\n                    let scrollXClass = 'scrollX hiddenScrollX';\n                    if (layoutManager.tv) {\n                        scrollXClass += ' smoothScrollX';\n                    }\n\n                    html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer ' + scrollXClass + ' padded-left padded-right\">';\n                } else {\n                    html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer vertical-wrap padded-left padded-right\">';\n                }\n\n                let cardLayout = appHost.preferVisualCards && section.autoCardLayout && section.showTitle;\n                cardLayout = false;\n                html += cardBuilder.getCardsHtml(result.Items, {\n                    preferThumb: section.preferThumb,\n                    shape: section.shape,\n                    centerText: section.centerText && !cardLayout,\n                    overlayText: section.overlayText !== false,\n                    showTitle: section.showTitle,\n                    showParentTitle: section.showParentTitle,\n                    scalable: true,\n                    coverImage: section.coverImage,\n                    overlayPlayButton: section.overlayPlayButton,\n                    overlayMoreButton: section.overlayMoreButton && !cardLayout,\n                    action: section.action,\n                    allowBottomPadding: !enableScrollX(),\n                    cardLayout: cardLayout\n                });\n                html += '</div>';\n            }\n\n            elem.innerHTML = html;\n            imageLoader.lazyChildren(elem);\n        });\n    }\n\n    export function loadSections(page, userId, topParentId, types) {\n        loading.show();\n        let sections = getSections();\n        const sectionid = getParameterByName('sectionid');\n\n        if (sectionid) {\n            sections = sections.filter(function (s) {\n                return s.id === sectionid;\n            });\n        }\n\n        if (types) {\n            sections = sections.filter(function (s) {\n                return types.indexOf(s.id) !== -1;\n            });\n        }\n\n        let elem = page.querySelector('.favoriteSections');\n\n        if (!elem.innerHTML) {\n            let html = '';\n\n            for (let i = 0, length = sections.length; i < length; i++) {\n                html += '<div class=\"verticalSection section' + sections[i].id + '\"></div>';\n            }\n\n            elem.innerHTML = html;\n        }\n\n        const promises = [];\n\n        for (let i = 0, length = sections.length; i < length; i++) {\n            const section = sections[i];\n            elem = page.querySelector('.section' + section.id);\n            promises.push(loadSection(elem, userId, topParentId, section, sections.length === 1));\n        }\n\n        Promise.all(promises).then(function () {\n            loading.hide();\n        });\n    }\n\nexport default {\n    render: loadSections\n};\n\n/* eslint-enable indent */\n"]}