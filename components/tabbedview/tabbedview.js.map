{"version":3,"sources":["components/tabbedview/tabbedview.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","define","_exports","_backdrop","mainTabsManager","_layoutManager","_embyTabs","_getRequireWildcardCache","WeakMap","cache","_interopRequireDefault","__esModule","default","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","onViewDestroy","e","tabControllers","this","forEach","t","destroy","view","params","currentTabController","initialTabIndex","onBeforeTabChange","value","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","call","desc","set","_default","TabbedView","_classCallCheck","instance","Constructor","TypeError","self","currentTabIndex","parseInt","tab","getDefaultTabIndex","parentId","loadTab","index","previousIndex","validateTabLoad","Promise","resolve","then","getTabController","controller","refresh","refreshed","onResume","autoFocus","layoutManager","tv","getTabContainers","querySelectorAll","onTabChange","newIndex","detail","selectedTabIndex","previousTabController","onPause","addEventListener","bind","setTabs","getTabs","_createClass","protoProps","staticProps","options","setTitle","backdrop","clearBackdrop","Emby","Page"],"mappings":"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","file":"tabbedview.js","sourcesContent":["import backdrop from 'backdrop';\nimport * as mainTabsManager from 'mainTabsManager';\nimport layoutManager from 'layoutManager';\nimport 'emby-tabs';\n\nfunction onViewDestroy(e) {\n    var tabControllers = this.tabControllers;\n\n    if (tabControllers) {\n        tabControllers.forEach(function (t) {\n            if (t.destroy) {\n                t.destroy();\n            }\n        });\n\n        this.tabControllers = null;\n    }\n\n    this.view = null;\n    this.params = null;\n    this.currentTabController = null;\n    this.initialTabIndex = null;\n}\n\nfunction onBeforeTabChange() {\n\n}\n\nclass TabbedView {\n    constructor(view, params) {\n        this.tabControllers = [];\n        this.view = view;\n        this.params = params;\n\n        var self = this;\n\n        var currentTabIndex = parseInt(params.tab || this.getDefaultTabIndex(params.parentId));\n        this.initialTabIndex = currentTabIndex;\n\n        function validateTabLoad(index) {\n            return self.validateTabLoad ? self.validateTabLoad(index) : Promise.resolve();\n        }\n\n        function loadTab(index, previousIndex) {\n            validateTabLoad(index).then(function () {\n                self.getTabController(index).then(function (controller) {\n                    var refresh = !controller.refreshed;\n\n                    controller.onResume({\n                        autoFocus: previousIndex == null && layoutManager.tv,\n                        refresh: refresh\n                    });\n\n                    controller.refreshed = true;\n\n                    currentTabIndex = index;\n                    self.currentTabController = controller;\n                });\n            });\n        }\n\n        function getTabContainers() {\n            return view.querySelectorAll('.tabContent');\n        }\n\n        function onTabChange(e) {\n            var newIndex = parseInt(e.detail.selectedTabIndex);\n            var previousIndex = e.detail.previousIndex;\n\n            var previousTabController = previousIndex == null ? null : self.tabControllers[previousIndex];\n            if (previousTabController && previousTabController.onPause) {\n                previousTabController.onPause();\n            }\n\n            loadTab(newIndex, previousIndex);\n        }\n\n        view.addEventListener('viewbeforehide', this.onPause.bind(this));\n\n        view.addEventListener('viewbeforeshow', function (e) {\n            mainTabsManager.setTabs(view, currentTabIndex, self.getTabs, getTabContainers, onBeforeTabChange, onTabChange, false);\n        });\n\n        view.addEventListener('viewshow', function (e) {\n            self.onResume(e.detail);\n        });\n\n        view.addEventListener('viewdestroy', onViewDestroy.bind(this));\n    }\n\n    onResume(options) {\n        this.setTitle();\n        backdrop.clearBackdrop();\n\n        var currentTabController = this.currentTabController;\n\n        if (!currentTabController) {\n            mainTabsManager.selectedTabIndex(this.initialTabIndex);\n        } else if (currentTabController && currentTabController.onResume) {\n            currentTabController.onResume({});\n        }\n    }\n\n    onPause() {\n        var currentTabController = this.currentTabController;\n\n        if (currentTabController && currentTabController.onPause) {\n            currentTabController.onPause();\n        }\n    }\n    setTitle() {\n        Emby.Page.setTitle('');\n    }\n}\n\nexport default TabbedView;\n"]}