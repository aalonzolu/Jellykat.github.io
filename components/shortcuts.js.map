{"version":3,"sources":["components/shortcuts.js"],"names":["define","_require","_exports","_playbackManager","_inputManager","_connectionManager","_appRouter","_globalize","_dom","_recordingHelper","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","playAllFromHere","card","serverId","queue","startIndex","parent","parentNode","className","classList","length","concat","cards","querySelectorAll","ids","foundCard","i","push","getAttribute","itemsContainer","dom","parentWithClass","fetchData","queryOptions","StartIndex","then","result","playbackManager","items","Items","play","getItem","button","parentWithAttribute","id","type","apiClient","connectionManager","getApiClient","getLiveTvTimer","getLiveTvSeriesTimer","getCurrentUserId","showContextMenu","options","item","playlistId","collectionId","elem","PlaylistItemId","Promise","_resolve","_reject","imported","_ref2","itemContextMenu","ServerId","getCurrentUser","user","show","assign","IsFolder","queueAllFromHere","command","executeAction","positionTo","updated","deleted","notifyRefreshNeeded","childElement","getItemInfoFromCard","Type","Id","TimerId","CollectionType","ChannelId","SeriesId","MediaType","UserData","PlaybackPositionTicks","parseInt","target","action","playableItemId","appRouter","showItem","context","parentId","showProgramDialog","_ref","instantMix","startPositionTicks","isPlaying","sendToast","text","_ref4","toast","globalize","translate","setCurrentPlaylistItem","onRecordCommand","timerId","seriesTimerId","programId","recordingHelper","toggleRecording","shuffle","showPlayMenu","_ref3","editItem","resolve","reject","serverInfo","ProgramId","_ref6","_ref7","_ref8","playTrailer","addToPlaylist","customAction","dispatchEvent","CustomEvent","detail","playlistItemId","cancelable","bubbles","_ref5","playlistEditor","getLocalTrailers","trailers","onClick","e","actionElement","preventDefault","stopPropagation","onCommand","cmd","on","click","addEventListener","inputManager","off","removeEventListener","getShortcutAttributesHtml","html","collectionType","value","_default"],"mappings":"AAAAA,OAAO,CAAC,UAAW,UAAW,kBAAmB,eAAgB,oBAAqB,YAAa,YAAa,MAAO,oBAAoB,SAAUC,SAAUC,SAAUC,iBAAkBC,cAAeC,mBAAoBC,WAAYC,WAAYC,KAAMC,kBAC1P,aAkBA,SAASC,uBAAuBC,KAAO,OAAOA,KAAOA,IAAIC,WAAaD,IAAM,CAAEE,QAASF,KAEvF,SAASG,QAAQH,KAAmV,OAAtOG,QAArD,mBAAXC,QAAoD,iBAApBA,OAAOC,SAAmC,SAASF,QAAQH,KAAO,cAAcA,KAA2B,SAASG,QAAQH,KAAO,OAAOA,KAAyB,mBAAXI,QAAyBJ,IAAIM,cAAgBF,QAAUJ,MAAQI,OAAOG,UAAY,gBAAkBP,MAAyBA,KAEnX,SAASQ,2BAA6B,GAAuB,mBAAZC,QAAwB,OAAO,KAAM,IAAIC,MAAQ,IAAID,QAA6F,OAAlFD,yBAA2B,SAASA,2BAA6B,OAAOE,OAAiBA,MAE1M,SAASC,wBAAwBX,KAAO,GAAIA,KAAOA,IAAIC,WAAc,OAAOD,IAAO,GAAY,OAARA,KAAiC,WAAjBG,QAAQH,MAAoC,mBAARA,IAAsB,MAAO,CAAEE,QAASF,KAAS,IAAIU,MAAQF,2BAA4B,GAAIE,OAASA,MAAME,IAAIZ,KAAQ,OAAOU,MAAMG,IAAIb,KAAQ,IAAIc,OAAS,GAAQC,sBAAwBC,OAAOC,gBAAkBD,OAAOE,yBAA0B,IAAK,IAAIC,OAAOnB,IAAO,GAAIgB,OAAOT,UAAUa,eAAeC,KAAKrB,IAAKmB,KAAM,CAAE,IAAIG,KAAOP,sBAAwBC,OAAOE,yBAAyBlB,IAAKmB,KAAO,KAAUG,OAASA,KAAKT,KAAOS,KAAKC,KAAQP,OAAOC,eAAeH,OAAQK,IAAKG,MAAgBR,OAAOK,KAAOnB,IAAImB,KAAyE,OAA7DL,OAAOZ,QAAUF,IAASU,OAASA,MAAMa,IAAIvB,IAAKc,QAAkBA,OAV9tB,SAASU,gBAAgBC,KAAMC,SAAUC,OAUrC,IATA,IAOIC,WAPEC,OAASJ,KAAKK,WACdC,UAAYN,KAAKO,UAAUC,OAAf,IAAAC,OAA6BT,KAAKO,UAAU,IAAQ,GAChEG,MAAQN,OAAOO,iBAAP,GAAAF,OAA2BH,UAA3B,cAERM,IAAM,GAERC,WAAY,EAGPC,EAAI,EAAGN,OAASE,MAAMF,OAAQM,EAAIN,OAAQM,IAC3CJ,MAAMI,KAAOd,OACba,WAAY,EACZV,WAAaW,IAEbD,WAAcX,OACdU,IAAIG,KAAKL,MAAMI,GAAGE,aAAa,YAIvC,IAAMC,eAAiBC,KAAAA,QAAIC,gBAAgBnB,KAAM,kBACjD,GAAIiB,gBAAkBA,eAAeG,UAAW,CAC5C,IAAMC,aAAenB,MAAQ,CAAEoB,WAAYnB,YAAe,GAE1D,OAAOc,eAAeG,UAAUC,cAAcE,MAAK,SAAAC,QAC/C,OAAItB,MACOuB,iBAAAA,QAAgBvB,MAAM,CACzBwB,MAAOF,OAAOG,QAGXF,iBAAAA,QAAgBG,KAAK,CACxBF,MAAOF,OAAOG,MACdxB,WAAYA,gBAM5B,GAAKS,IAAIJ,OAIT,OAAIN,MACOuB,iBAAAA,QAAgBvB,MAAM,CACzBU,IAAKA,IACLX,SAAUA,WAGPwB,iBAAAA,QAAgBG,KAAK,CACxBhB,IAAKA,IACLX,SAAUA,SACVE,WAAYA,aAWxB,SAAS0B,QAAQC,QAEb,IAAM7B,UADN6B,OAASZ,KAAAA,QAAIa,oBAAoBD,OAAQ,YACjBd,aAAa,iBAC/BgB,GAAKF,OAAOd,aAAa,WACzBiB,KAAOH,OAAOd,aAAa,aAE3BkB,UAAYC,mBAAAA,QAAkBC,aAAanC,UAEjD,MAAa,UAATgC,KACOC,UAAUG,eAAeL,IAEvB,gBAATC,KACOC,UAAUI,qBAAqBN,IAEnCE,UAAUL,QAAQK,UAAUK,mBAAoBP,IAW3D,SAASQ,gBAAgBxC,KAAMyC,SAC3BZ,QAAQ7B,MAAMuB,MAAK,SAAAmB,MACf,IAAMC,WAAa3C,KAAKgB,aAAa,mBAC/B4B,aAAe5C,KAAKgB,aAAa,qBAEvC,GAAI2B,WAAY,CACZ,IAAME,KAAO3B,KAAAA,QAAIa,oBAAoB/B,KAAM,uBAC3C0C,KAAKI,eAAiBD,KAAOA,KAAK7B,aAAa,uBAAyB,KAG5E,IAAA+B,SAAA,SAAAC,SAAAC,SAAA,OAAApF,SAAA,CAAO,oBAAP,SAAAqF,UAAA,OAAAF,SAAA9D,wBAAAgE,aAAAD,YAA0B1B,MAAK,SAAA4B,OAAgC,IAArBC,gBAAqBD,MAA9B1E,QAC7B0D,mBAAAA,QAAkBC,aAAaM,KAAKW,UAAUC,iBAAiB/B,MAAK,SAAAgC,MAChEH,gBAAgBI,KAAKjE,OAAOkE,OAAO,CAC/Bf,KAAMA,KACNd,MAAM,EACN1B,OAAO,EACPH,iBAAkB2C,KAAKgB,SACvBC,kBAAmBjB,KAAKgB,SACxBf,WAAYA,WACZC,aAAcA,aACdW,KAAMA,MAEPd,SAAW,KAAKlB,MAAK,SAAAC,QACG,oBAAnBA,OAAOoC,SAAoD,qBAAnBpC,OAAOoC,QAC/CC,cAAc7D,KAAMyC,QAAQqB,WAAYtC,OAAOoC,UACxCpC,OAAOuC,SAAWvC,OAAOwC,UAjCxD,SAASC,oBAAoBC,aAAcjD,iBACvCA,eAAiBA,gBAAkBC,KAAAA,QAAIa,oBAAoBmC,aAAc,KAAM,yBAG3EjD,eAAegD,qBAAoB,GA8BnBA,CAAoBjE,KAAMyC,QAAQxB,4BAQ1D,SAASkD,oBAAoBnE,MACzB,MAAO,CACHoE,KAAMpE,KAAKgB,aAAa,aACxBqD,GAAIrE,KAAKgB,aAAa,WACtBsD,QAAStE,KAAKgB,aAAa,gBAC3BuD,eAAgBvE,KAAKgB,aAAa,uBAClCwD,UAAWxE,KAAKgB,aAAa,kBAC7ByD,SAAUzE,KAAKgB,aAAa,iBAC5BqC,SAAUrD,KAAKgB,aAAa,iBAC5B0D,UAAW1E,KAAKgB,aAAa,kBAC7B0C,SAAiD,SAAvC1D,KAAKgB,aAAa,iBAC5B2D,SAAU,CACNC,sBAAuBC,SAAS7E,KAAKgB,aAAa,uBAAyB,OAuBvF,SAAS6C,cAAc7D,KAAM8E,OAAQC,QACjCD,OAASA,QAAU9E,KAEnB,IAAIgC,GAAKhC,KAAKgB,aAAa,WAEtBgB,KAEDA,IADAhC,KAAOkB,KAAAA,QAAIa,oBAAoB/B,KAAM,YAC3BgB,aAAa,YAG3B,IAAM0B,KAAOyB,oBAAoBnE,MAE3BC,SAAWyC,KAAKW,SAChBpB,KAAOS,KAAK0B,KAEZY,eAA0B,YAAT/C,KAAqBS,KAAK8B,UAAY9B,KAAK2B,GAMlE,GAJuB,UAAnB3B,KAAKgC,WAAoC,SAAXK,SAC9BA,OAAS,QAGE,SAAXA,OACAE,WAAAA,QAAUC,SAASxC,KAAM,CACrByC,QAASnF,KAAKgB,aAAa,gBAC3BoE,SAAUpF,KAAKgB,aAAa,wBAE7B,GAAe,kBAAX+D,QA9Hf,SAASM,kBAAkB3C,MACvB,IAAAK,SAAA,SAAAC,SAAAC,SAAA,OAAApF,SAAA,CAAO,qBAAP,SAAAqF,UAAA,OAAAF,SAAA9D,wBAAAgE,aAAAD,YAA2B1B,MAAK,SAAA+D,MAAgCA,KAA9B7G,QACb+E,KAAKd,KAAK2B,GAAI3B,KAAKW,aA6HpCgC,CAAkB3C,WACf,GAAe,eAAXqC,OACPtD,iBAAAA,QAAgB8D,WAAW,CACvBlB,GAAIW,eACJ3B,SAAUpD,gBAEX,GAAe,SAAX8E,QAAgC,WAAXA,OAAqB,CACjD,IAAMS,mBAAqBX,SAAS7E,KAAKgB,aAAa,uBAAyB,KAE/ES,iBAAAA,QAAgBG,KAAK,CACjBhB,IAAK,CAACoE,gBACNQ,mBAAoBA,mBACpBvF,SAAUA,gBAEX,GAAe,UAAX8E,OACHtD,iBAAAA,QAAgBgE,aAChBhE,iBAAAA,QAAgBvB,MAAM,CAClBU,IAAK,CAACoE,gBACN/E,SAAUA,WAnD1B,SAASyF,UAAUC,MACf,IAAA5C,SAAA,SAAAC,SAAAC,SAAA,OAAApF,SAAA,CAAO,UAAP,SAAAqF,UAAA,OAAAF,SAAA9D,wBAAAgE,aAAAD,YAAgB1B,MAAK,SAAAqE,QACjBC,EADuCD,MAApBnH,SACbkH,SAmDFD,CAAUI,WAAAA,QAAUC,UAAU,iBAE9BtE,iBAAAA,QAAgBvB,MAAM,CAClBU,IAAK,CAACoE,gBACN/E,SAAUA,gBAGf,GAAe,oBAAX8E,OACPhF,gBAAgBC,KAAMC,eACnB,GAAe,qBAAX8E,OACPhF,gBAAgBC,KAAMC,UAAU,QAC7B,GAAe,qBAAX8E,OACPtD,iBAAAA,QAAgBuE,uBAAuBhG,KAAKgB,aAAa,6BACtD,GAAe,WAAX+D,QAkFf,SAASkB,gBAAgBhG,SAAU+B,GAAIC,KAAMiE,QAASC,eAClD,GAAa,YAATlE,MAAsBiE,SAAWC,cAAe,CAChD,IAAMC,UAAqB,YAATnE,KAAqBD,GAAK,KAC5CqE,iBAAAA,QAAgBC,gBAAgBrG,SAAUmG,UAAWF,QAASC,gBApF9DF,CAAgBhG,SAAU+B,GAAIC,KAAMjC,KAAKgB,aAAa,gBAAiBhB,KAAKgB,aAAa,4BACtF,GAAe,SAAX+D,OAAmB,CAC1B,IAAMtC,QAAsD,UAA5CqC,OAAO9D,aAAa,oBAChC,CACIuF,SAAS,EACThB,YAAY,EACZ3D,MAAM,EACN7B,iBAAiB,EACjBG,OAAO,EACPyD,kBAAkB,GAEtB,GAEJlB,QAAQqB,WAAagB,OAErBtC,gBAAgBxC,KAAMyC,cACnB,GAAe,aAAXsC,QA/Ff,SAASyB,aAAaxG,KAAM8E,QACxB,IAAMpC,KAAOyB,oBAAoBnE,MAEjC,IAAA+C,SAAA,SAAAC,SAAAC,SAAA,OAAApF,SAAA,CAAO,aAAP,SAAAqF,UAAA,OAAAF,SAAA9D,wBAAAgE,aAAAD,YAAmB1B,MAAK,SAAAkF,OAAyBA,MAAvBhI,QACb+E,KAAK,CAEVd,KAAMA,KACNoB,WAAYgB,YAyFhB0B,CAAaxG,KAAM8E,aAChB,GAAe,SAAXC,OACPlD,QAAQiD,QAAQvD,MAAK,SAAAmB,OAsC7B,SAASgE,SAAShE,KAAMzC,UACpB,IAAMiC,UAAYC,mBAAAA,QAAkBC,aAAanC,UAEjD,OAAO,IAAI8C,SAAQ,SAAC4D,QAASC,QACzB,IAAM3G,SAAWiC,UAAU2E,aAAaxC,GAEtB,UAAd3B,KAAK0B,KACD1B,KAAKoE,UACL,IAAA/D,SAAA,SAAAC,SAAAC,SAAA,OAAApF,SAAA,CAAO,qBAAP,SAAAqF,UAAA,OAAAF,SAAA9D,wBAAAgE,aAAAD,YAA2B1B,MAAK,SAAAwF,OAAiCA,MAA/BtI,QACb+E,KAAKd,KAAKoE,UAAW7G,UAAUsB,KAAKoF,QAASC,WAGlE,IAAA7D,SAAA,SAAAC,SAAAC,SAAA,OAAApF,SAAA,CAAO,oBAAP,SAAAqF,UAAA,OAAAF,SAAA9D,wBAAAgE,aAAAD,YAA0B1B,MAAK,SAAAyF,OAAgCA,MAA9BvI,QACb+E,KAAKd,KAAK2B,GAAIpE,UAAUsB,KAAKoF,QAASC,WAI9D,IAAA7D,SAAA,SAAAC,SAAAC,SAAA,OAAApF,SAAA,CAAO,mBAAP,SAAAqF,UAAA,OAAAF,SAAA9D,wBAAAgE,aAAAD,YAAyB1B,MAAK,SAAA0F,OAA+BA,MAA7BxI,QACb+E,KAAKd,KAAK2B,GAAIpE,UAAUsB,KAAKoF,QAASC,cAvDzDF,CAAShE,KAAMzC,kBAEhB,GAAe,gBAAX8E,OACPlD,QAAQiD,QAAQvD,KAAK2F,kBAClB,GAAe,kBAAXnC,OACPlD,QAAQiD,QAAQvD,KAAK4F,oBAClB,GAAe,WAAXpC,OAAqB,CAC5B,IAAMqC,aAAetC,OAAO9D,aAAa,qBAEzChB,KAAKqH,cAAc,IAAIC,YAAJ,UAAA7G,OAA0B2G,cAAgB,CACzDG,OAAQ,CACJC,eAAgBxH,KAAKgB,aAAa,wBAEtCyG,YAAY,EACZC,SAAS,MAKrB,SAASP,cAAczE,MACnB,IAAAK,SAAA,SAAAC,SAAAC,SAAA,OAAApF,SAAA,CAAO,mBAAP,SAAAqF,UAAA,OAAAF,SAAA9D,wBAAAgE,aAAAD,YAAyB1B,MAAK,SAAAoG,QAC1B,IAAIC,EADqDD,MAA7BlJ,UACP+E,KAAK,CACtB9B,MAAO,CAACgB,KAAK2B,IACbpE,SAAUyC,KAAKW,cAM3B,SAAS6D,YAAYxE,MACjB,IAAMR,UAAYC,mBAAAA,QAAkBC,aAAaM,KAAKW,UAEtDnB,UAAU2F,iBAAiB3F,UAAUK,mBAAoBG,KAAK2B,IAAI9C,MAAK,SAAAuG,UACnErG,iBAAAA,QAAgBG,KAAK,CAAEF,MAAOoG,cAmC/B,SAASC,QAAQC,GACpB,IAAMhI,KAAOkB,KAAAA,QAAIC,gBAAgB6G,EAAElD,OAAQ,cAE3C,GAAI9E,KAAM,CACN,IAAIiI,cAAgBjI,KAChB+E,OAASkD,cAAcjH,aAAa,eASxC,GAPK+D,SACDkD,cAAgB/G,KAAAA,QAAIa,oBAAoBkG,cAAe,kBAEnDlD,OAASkD,cAAcjH,aAAa,gBAIxC+D,OAKA,OAJAlB,cAAc7D,KAAMiI,cAAelD,QAEnCiD,EAAEE,iBACFF,EAAEG,mBACK,GAKnB,SAASC,UAAUJ,GACf,IAAMK,IAAML,EAAET,OAAO3D,QAErB,GAAY,SAARyE,KAA0B,WAARA,KAA4B,WAARA,KAA4B,SAARA,KAA0B,SAARA,IAAgB,CAC5F,IAAMvD,OAASkD,EAAElD,OACX9E,KAAOkB,KAAAA,QAAIC,gBAAgB2D,OAAQ,eAAiB5D,KAAAA,QAAIa,oBAAoB+C,OAAQ,WAEtF9E,OACAgI,EAAEE,iBACFF,EAAEG,kBACFtE,cAAc7D,KAAMA,KAAMqI,OAK/B,SAASC,GAAGnD,QAAS1C,UAGF,KAFtBA,QAAUA,SAAW,IAET8F,OACRpD,QAAQqD,iBAAiB,QAAST,UAGd,IAApBtF,QAAQmB,SACR6E,cAAAA,QAAaH,GAAGnD,QAASiD,WAI1B,SAASM,IAAIvD,QAAS1C,SACzBA,QAAUA,SAAW,GAErB0C,QAAQwD,oBAAoB,QAASZ,UAEb,IAApBtF,QAAQmB,SACR6E,cAAAA,QAAaC,IAAIvD,QAASiD,WAI3B,SAASQ,0BAA0BlG,KAAMzC,UAC5C,IAAI4I,KAAI,YAAApI,OAAeiC,KAAK2B,GAApB,qBAAA5D,OAA0CR,UAAYyC,KAAKW,SAA3D,iBAAA5C,OAAmFiC,KAAK0B,KAAxF,sBAAA3D,OAAiHiC,KAAKgC,UAAtH,sBAAAjE,OAAoJiC,KAAK8B,UAAzJ,qBAAA/D,OAAsLiC,KAAKgB,SAA3L,KAEFoF,eAAiBpG,KAAK6B,eAK5B,OAJIuE,iBACAD,MAAI,yBAAApI,OAA6BqI,eAA7B,MAGDD,KAlYbtJ,OAAOC,eAAe1B,SAAU,aAAc,CAC5CiL,OAAO,IAETjL,SAASiK,QAAUA,QACnBjK,SAASwK,GAAKA,GACdxK,SAAS4K,IAAMA,IACf5K,SAAS8K,0BAA4BA,0BACrC9K,SAASW,aAAU,EAHrBV,iBAAAO,uBAAAP,kBACAC,cAAAM,uBAAAN,eACAC,mBAAAK,uBAAAL,oBACAC,WAAAI,uBAAAJ,YACAC,WAAAG,uBAAAH,YACAC,KAAAE,uBAAAF,MACAC,iBAAAC,uBAAAD,kBA8aE,IAAI2K,SAjDS,CACXV,GAAIA,GACJI,IAAKA,IACLX,QAASA,QACTa,0BAA2BA,2BAmD7B9K,SAASW,QAAUuK","file":"shortcuts.js","sourcesContent":["/* eslint-disable indent */\n\n/**\n * Module shortcuts.\n * @module components/shortcuts\n */\n\nimport playbackManager from 'playbackManager';\nimport inputManager from 'inputManager';\nimport connectionManager from 'connectionManager';\nimport appRouter from 'appRouter';\nimport globalize from 'globalize';\nimport dom from 'dom';\nimport recordingHelper from 'recordingHelper';\n\n    function playAllFromHere(card, serverId, queue) {\n        const parent = card.parentNode;\n        const className = card.classList.length ? (`.${card.classList[0]}`) : '';\n        const cards = parent.querySelectorAll(`${className}[data-id]`);\n\n        const ids = [];\n\n        let foundCard = false;\n        let startIndex;\n\n        for (let i = 0, length = cards.length; i < length; i++) {\n            if (cards[i] === card) {\n                foundCard = true;\n                startIndex = i;\n            }\n            if (foundCard || !queue) {\n                ids.push(cards[i].getAttribute('data-id'));\n            }\n        }\n\n        const itemsContainer = dom.parentWithClass(card, 'itemsContainer');\n        if (itemsContainer && itemsContainer.fetchData) {\n            const queryOptions = queue ? { StartIndex: startIndex } : {};\n\n            return itemsContainer.fetchData(queryOptions).then(result => {\n                if (queue) {\n                    return playbackManager.queue({\n                        items: result.Items\n                    });\n                } else {\n                    return playbackManager.play({\n                        items: result.Items,\n                        startIndex: startIndex\n                    });\n                }\n            });\n        }\n\n        if (!ids.length) {\n            return;\n        }\n\n        if (queue) {\n            return playbackManager.queue({\n                ids: ids,\n                serverId: serverId\n            });\n        } else {\n            return playbackManager.play({\n                ids: ids,\n                serverId: serverId,\n                startIndex: startIndex\n            });\n        }\n    }\n\n    function showProgramDialog(item) {\n        import('recordingCreator').then(({default:recordingCreator}) => {\n            recordingCreator.show(item.Id, item.ServerId);\n        });\n    }\n\n    function getItem(button) {\n        button = dom.parentWithAttribute(button, 'data-id');\n        const serverId = button.getAttribute('data-serverid');\n        const id = button.getAttribute('data-id');\n        const type = button.getAttribute('data-type');\n\n        const apiClient = connectionManager.getApiClient(serverId);\n\n        if (type === 'Timer') {\n            return apiClient.getLiveTvTimer(id);\n        }\n        if (type === 'SeriesTimer') {\n            return apiClient.getLiveTvSeriesTimer(id);\n        }\n        return apiClient.getItem(apiClient.getCurrentUserId(), id);\n    }\n\n    function notifyRefreshNeeded(childElement, itemsContainer) {\n        itemsContainer = itemsContainer || dom.parentWithAttribute(childElement, 'is', 'emby-itemscontainer');\n\n        if (itemsContainer) {\n            itemsContainer.notifyRefreshNeeded(true);\n        }\n    }\n\n    function showContextMenu(card, options) {\n        getItem(card).then(item => {\n            const playlistId = card.getAttribute('data-playlistid');\n            const collectionId = card.getAttribute('data-collectionid');\n\n            if (playlistId) {\n                const elem = dom.parentWithAttribute(card, 'data-playlistitemid');\n                item.PlaylistItemId = elem ? elem.getAttribute('data-playlistitemid') : null;\n            }\n\n            import('itemContextMenu').then(({default: itemContextMenu}) => {\n                connectionManager.getApiClient(item.ServerId).getCurrentUser().then(user => {\n                    itemContextMenu.show(Object.assign({\n                        item: item,\n                        play: true,\n                        queue: true,\n                        playAllFromHere: !item.IsFolder,\n                        queueAllFromHere: !item.IsFolder,\n                        playlistId: playlistId,\n                        collectionId: collectionId,\n                        user: user\n\n                    }, options || {})).then(result => {\n                        if (result.command === 'playallfromhere' || result.command === 'queueallfromhere') {\n                            executeAction(card, options.positionTo, result.command);\n                        } else if (result.updated || result.deleted) {\n                            notifyRefreshNeeded(card, options.itemsContainer);\n                        }\n                    });\n                });\n            });\n        });\n    }\n\n    function getItemInfoFromCard(card) {\n        return {\n            Type: card.getAttribute('data-type'),\n            Id: card.getAttribute('data-id'),\n            TimerId: card.getAttribute('data-timerid'),\n            CollectionType: card.getAttribute('data-collectiontype'),\n            ChannelId: card.getAttribute('data-channelid'),\n            SeriesId: card.getAttribute('data-seriesid'),\n            ServerId: card.getAttribute('data-serverid'),\n            MediaType: card.getAttribute('data-mediatype'),\n            IsFolder: card.getAttribute('data-isfolder') === 'true',\n            UserData: {\n                PlaybackPositionTicks: parseInt(card.getAttribute('data-positionticks') || '0')\n            }\n        };\n    }\n\n    function showPlayMenu(card, target) {\n        const item = getItemInfoFromCard(card);\n\n        import('playMenu').then(({default: playMenu}) => {\n            playMenu.show({\n\n                item: item,\n                positionTo: target\n            });\n        });\n    }\n\n    function sendToast(text) {\n        import('toast').then(({default: toast}) => {\n            toast(text);\n        });\n    }\n\n    function executeAction(card, target, action) {\n        target = target || card;\n\n        let id = card.getAttribute('data-id');\n\n        if (!id) {\n            card = dom.parentWithAttribute(card, 'data-id');\n            id = card.getAttribute('data-id');\n        }\n\n        const item = getItemInfoFromCard(card);\n\n        const serverId = item.ServerId;\n        const type = item.Type;\n\n        const playableItemId = type === 'Program' ? item.ChannelId : item.Id;\n\n        if (item.MediaType === 'Photo' && action === 'link') {\n            action = 'play';\n        }\n\n        if (action === 'link') {\n            appRouter.showItem(item, {\n                context: card.getAttribute('data-context'),\n                parentId: card.getAttribute('data-parentid')\n            });\n        } else if (action === 'programdialog') {\n            showProgramDialog(item);\n        } else if (action === 'instantmix') {\n            playbackManager.instantMix({\n                Id: playableItemId,\n                ServerId: serverId\n            });\n        } else if (action === 'play' || action === 'resume') {\n            const startPositionTicks = parseInt(card.getAttribute('data-positionticks') || '0');\n\n            playbackManager.play({\n                ids: [playableItemId],\n                startPositionTicks: startPositionTicks,\n                serverId: serverId\n            });\n        } else if (action === 'queue') {\n            if (playbackManager.isPlaying()) {\n                playbackManager.queue({\n                    ids: [playableItemId],\n                    serverId: serverId\n                });\n                sendToast(globalize.translate('MediaQueued'));\n            } else {\n                playbackManager.queue({\n                    ids: [playableItemId],\n                    serverId: serverId\n                });\n            }\n        } else if (action === 'playallfromhere') {\n            playAllFromHere(card, serverId);\n        } else if (action === 'queueallfromhere') {\n            playAllFromHere(card, serverId, true);\n        } else if (action === 'setplaylistindex') {\n            playbackManager.setCurrentPlaylistItem(card.getAttribute('data-playlistitemid'));\n        } else if (action === 'record') {\n            onRecordCommand(serverId, id, type, card.getAttribute('data-timerid'), card.getAttribute('data-seriestimerid'));\n        } else if (action === 'menu') {\n            const options = target.getAttribute('data-playoptions') === 'false' ?\n                {\n                    shuffle: false,\n                    instantMix: false,\n                    play: false,\n                    playAllFromHere: false,\n                    queue: false,\n                    queueAllFromHere: false\n                } :\n                {};\n\n            options.positionTo = target;\n\n            showContextMenu(card, options);\n        } else if (action === 'playmenu') {\n            showPlayMenu(card, target);\n        } else if (action === 'edit') {\n            getItem(target).then(item => {\n                editItem(item, serverId);\n            });\n        } else if (action === 'playtrailer') {\n            getItem(target).then(playTrailer);\n        } else if (action === 'addtoplaylist') {\n            getItem(target).then(addToPlaylist);\n        } else if (action === 'custom') {\n            const customAction = target.getAttribute('data-customaction');\n\n            card.dispatchEvent(new CustomEvent(`action-${customAction}`, {\n                detail: {\n                    playlistItemId: card.getAttribute('data-playlistitemid')\n                },\n                cancelable: false,\n                bubbles: true\n            }));\n        }\n    }\n\n    function addToPlaylist(item) {\n        import('playlistEditor').then(({default: playlistEditor}) => {\n            new playlistEditor().show({\n                items: [item.Id],\n                serverId: item.ServerId\n\n            });\n        });\n    }\n\n    function playTrailer(item) {\n        const apiClient = connectionManager.getApiClient(item.ServerId);\n\n        apiClient.getLocalTrailers(apiClient.getCurrentUserId(), item.Id).then(trailers => {\n            playbackManager.play({ items: trailers });\n        });\n    }\n\n    function editItem(item, serverId) {\n        const apiClient = connectionManager.getApiClient(serverId);\n\n        return new Promise((resolve, reject) => {\n            const serverId = apiClient.serverInfo().Id;\n\n            if (item.Type === 'Timer') {\n                if (item.ProgramId) {\n                    import('recordingCreator').then(({default: recordingCreator}) => {\n                        recordingCreator.show(item.ProgramId, serverId).then(resolve, reject);\n                    });\n                } else {\n                    import('recordingEditor').then(({default: recordingEditor}) => {\n                        recordingEditor.show(item.Id, serverId).then(resolve, reject);\n                    });\n                }\n            } else {\n                import('metadataEditor').then(({default: metadataEditor}) => {\n                    metadataEditor.show(item.Id, serverId).then(resolve, reject);\n                });\n            }\n        });\n    }\n\n    function onRecordCommand(serverId, id, type, timerId, seriesTimerId) {\n        if (type === 'Program' || timerId || seriesTimerId) {\n            const programId = type === 'Program' ? id : null;\n            recordingHelper.toggleRecording(serverId, programId, timerId, seriesTimerId);\n        }\n    }\n\n    export function onClick(e) {\n        const card = dom.parentWithClass(e.target, 'itemAction');\n\n        if (card) {\n            let actionElement = card;\n            let action = actionElement.getAttribute('data-action');\n\n            if (!action) {\n                actionElement = dom.parentWithAttribute(actionElement, 'data-action');\n                if (actionElement) {\n                    action = actionElement.getAttribute('data-action');\n                }\n            }\n\n            if (action) {\n                executeAction(card, actionElement, action);\n\n                e.preventDefault();\n                e.stopPropagation();\n                return false;\n            }\n        }\n    }\n\n    function onCommand(e) {\n        const cmd = e.detail.command;\n\n        if (cmd === 'play' || cmd === 'resume' || cmd === 'record' || cmd === 'menu' || cmd === 'info') {\n            const target = e.target;\n            const card = dom.parentWithClass(target, 'itemAction') || dom.parentWithAttribute(target, 'data-id');\n\n            if (card) {\n                e.preventDefault();\n                e.stopPropagation();\n                executeAction(card, card, cmd);\n            }\n        }\n    }\n\n    export function on(context, options) {\n        options = options || {};\n\n        if (options.click !== false) {\n            context.addEventListener('click', onClick);\n        }\n\n        if (options.command !== false) {\n            inputManager.on(context, onCommand);\n        }\n    }\n\n    export function off(context, options) {\n        options = options || {};\n\n        context.removeEventListener('click', onClick);\n\n        if (options.command !== false) {\n            inputManager.off(context, onCommand);\n        }\n    }\n\n    export function getShortcutAttributesHtml(item, serverId) {\n        let html = `data-id=\"${item.Id}\" data-serverid=\"${serverId || item.ServerId}\" data-type=\"${item.Type}\" data-mediatype=\"${item.MediaType}\" data-channelid=\"${item.ChannelId}\" data-isfolder=\"${item.IsFolder}\"`;\n\n        const collectionType = item.CollectionType;\n        if (collectionType) {\n            html += ` data-collectiontype=\"${collectionType}\"`;\n        }\n\n        return html;\n    }\n\n/* eslint-enable indent */\n\nexport default {\n    on: on,\n    off: off,\n    onClick: onClick,\n    getShortcutAttributesHtml: getShortcutAttributesHtml\n};\n\n"]}