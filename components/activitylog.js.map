{"version":3,"sources":["components/activitylog.js"],"names":["define","_require","_exports","_events","_globalize","_dom","datefns","_dfnshelper","_serverNotifications","_connectionManager","_embyButton","_listViewStyle","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","call","desc","set","renderList","elem","apiClient","result","startIndex","limit","innerHTML","Items","map","getEntryHtml","entry","html","color","icon","Severity","UserId","UserPrimaryImageTag","getUserImageUrl","type","tag","Name","formatRelative","Date","parse","locale","dfnshelper","getLocale","ShortOverview","Overview","concat","Id","globalize","translate","join","reloadData","instance","parseInt","getAttribute","minDate","hasUserId","setTime","getTime","ApiClient","getJSON","getUrl","toISOString","then","setAttribute","activityContainer","dom","parentWithClass","classList","remove","add","items","onActivityLogUpdate","e","data","options","this","serverId","element","onListClick","btnEntryInfo","id","item","filter","toString","showItemOverview","Promise","_resolve","_reject","imported","_ref","alert","text","value","_default","ActivityLog","_classCallCheck","Constructor","TypeError","addEventListener","bind","connectionManager","getApiClient","onUpdate","updateFn","events","on","serverNotifications","sendMessage","_createClass","protoProps","staticProps","destroy","off"],"mappings":"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","file":"activitylog.js","sourcesContent":["import events from 'events';\nimport globalize from 'globalize';\nimport dom from 'dom';\nimport * as datefns from 'date-fns';\nimport dfnshelper from 'dfnshelper';\nimport serverNotifications from 'serverNotifications';\nimport connectionManager from 'connectionManager';\nimport 'emby-button';\nimport 'listViewStyle';\n\n/* eslint-disable indent */\n\n    function getEntryHtml(entry, apiClient) {\n        let html = '';\n        html += '<div class=\"listItem listItem-border\">';\n        let color = '#00a4dc';\n        let icon = 'notifications';\n\n        if (entry.Severity == 'Error' || entry.Severity == 'Fatal' || entry.Severity == 'Warn') {\n            color = '#cc0000';\n            icon = 'notification_important';\n        }\n\n        if (entry.UserId && entry.UserPrimaryImageTag) {\n            html += '<span class=\"listItemIcon material-icons dvr\" style=\"width:2em!important;height:2em!important;padding:0;color:transparent;background-color:' + color + \";background-image:url('\" + apiClient.getUserImageUrl(entry.UserId, {\n                type: 'Primary',\n                tag: entry.UserPrimaryImageTag\n            }) + \"');background-repeat:no-repeat;background-position:center center;background-size: cover;\\\"></span>\";\n        } else {\n            html += '<span class=\"listItemIcon material-icons ' + icon + '\" style=\"background-color:' + color + '\"></span>';\n        }\n\n        html += '<div class=\"listItemBody three-line\">';\n        html += '<div class=\"listItemBodyText\">';\n        html += entry.Name;\n        html += '</div>';\n        html += '<div class=\"listItemBodyText secondary\">';\n        html += datefns.formatRelative(Date.parse(entry.Date), Date.parse(new Date()), { locale: dfnshelper.getLocale() });\n        html += '</div>';\n        html += '<div class=\"listItemBodyText secondary listItemBodyText-nowrap\">';\n        html += entry.ShortOverview || '';\n        html += '</div>';\n        html += '</div>';\n\n        if (entry.Overview) {\n            html += `<button type=\"button\" is=\"paper-icon-button-light\" class=\"btnEntryInfo\" data-id=\"${entry.Id}\" title=\"${globalize.translate('Info')}\">\n                       <span class=\"material-icons info\"></span>\n                    </button>`;\n        }\n\n        html += '</div>';\n\n        return html;\n    }\n\n    function renderList(elem, apiClient, result, startIndex, limit) {\n        elem.innerHTML = result.Items.map(function (i) {\n            return getEntryHtml(i, apiClient);\n        }).join('');\n    }\n\n    function reloadData(instance, elem, apiClient, startIndex, limit) {\n        if (startIndex == null) {\n            startIndex = parseInt(elem.getAttribute('data-activitystartindex') || '0');\n        }\n\n        limit = limit || parseInt(elem.getAttribute('data-activitylimit') || '7');\n        const minDate = new Date();\n        const hasUserId = elem.getAttribute('data-useractivity') !== 'false';\n\n        // TODO: Use date-fns\n        if (hasUserId) {\n            minDate.setTime(minDate.getTime() - 24 * 60 * 60 * 1000); // one day back\n        } else {\n            minDate.setTime(minDate.getTime() - 7 * 24 * 60 * 60 * 1000); // one week back\n        }\n\n        ApiClient.getJSON(ApiClient.getUrl('System/ActivityLog/Entries', {\n            startIndex: startIndex,\n            limit: limit,\n            minDate: minDate.toISOString(),\n            hasUserId: hasUserId\n        })).then(function (result) {\n            elem.setAttribute('data-activitystartindex', startIndex);\n            elem.setAttribute('data-activitylimit', limit);\n            if (!startIndex) {\n                const activityContainer = dom.parentWithClass(elem, 'activityContainer');\n\n                if (activityContainer) {\n                    if (result.Items.length) {\n                        activityContainer.classList.remove('hide');\n                    } else {\n                        activityContainer.classList.add('hide');\n                    }\n                }\n            }\n\n            instance.items = result.Items;\n            renderList(elem, apiClient, result, startIndex, limit);\n        });\n    }\n\n    function onActivityLogUpdate(e, apiClient, data) {\n        const options = this.options;\n\n        if (options && options.serverId === apiClient.serverId()) {\n            reloadData(this, options.element, apiClient);\n        }\n    }\n\n    function onListClick(e) {\n        const btnEntryInfo = dom.parentWithClass(e.target, 'btnEntryInfo');\n\n        if (btnEntryInfo) {\n            const id = btnEntryInfo.getAttribute('data-id');\n            const items = this.items;\n\n            if (items) {\n                const item = items.filter(function (i) {\n                    return i.Id.toString() === id;\n                })[0];\n\n                if (item) {\n                    showItemOverview(item);\n                }\n            }\n        }\n    }\n\n    function showItemOverview(item) {\n        import('alert').then(({default: alert}) => {\n            alert({\n                text: item.Overview\n            });\n        });\n    }\n\nclass ActivityLog {\n    constructor(options) {\n        this.options = options;\n        const element = options.element;\n        element.classList.add('activityLogListWidget');\n        element.addEventListener('click', onListClick.bind(this));\n        const apiClient = connectionManager.getApiClient(options.serverId);\n        reloadData(this, element, apiClient);\n        const onUpdate = onActivityLogUpdate.bind(this);\n        this.updateFn = onUpdate;\n        events.on(serverNotifications, 'ActivityLogEntry', onUpdate);\n        apiClient.sendMessage('ActivityLogEntryStart', '0,1500');\n    }\n    destroy() {\n        const options = this.options;\n\n        if (options) {\n            options.element.classList.remove('activityLogListWidget');\n            connectionManager.getApiClient(options.serverId).sendMessage('ActivityLogEntryStop', '0,1500');\n        }\n\n        const onUpdate = this.updateFn;\n\n        if (onUpdate) {\n            events.off(serverNotifications, 'ActivityLogEntry', onUpdate);\n        }\n\n        this.items = null;\n        this.options = null;\n    }\n}\n\nexport default ActivityLog;\n\n/* eslint-enable indent */\n"]}