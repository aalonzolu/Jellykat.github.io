{"version":3,"sources":["components/layoutManager.js"],"names":["define","_exports","_browser","_appSettings","_events","_interopRequireDefault","obj","__esModule","default","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","setLayout","instance","layout","selectedLayout","document","documentElement","classList","add","remove","value","_default","LayoutManager","_classCallCheck","Constructor","TypeError","this","_createClass","protoProps","staticProps","prototype","save","appSettings","set","autoLayout","events","trigger","getSavedLayout","get","browser","mobile","tv","xboxOne","ps4","defaultLayout","init","saved"],"mappings":"AAAAA,OAAO,CAAC,UAAW,UAAW,cAAe,WAAW,SAAUC,SAAUC,SAAUC,aAAcC,SAClG,aAUA,SAASC,uBAAuBC,KAAO,OAAOA,KAAOA,IAAIC,WAAaD,IAAM,CAAEE,QAASF,KAIvF,SAASG,kBAAkBC,OAAQC,OAAS,IAAK,IAAIC,EAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,IAAIE,WAAaH,MAAMC,GAAIE,WAAWC,WAAaD,WAAWC,aAAc,EAAOD,WAAWE,cAAe,EAAU,UAAWF,aAAYA,WAAWG,UAAW,GAAMC,OAAOC,eAAeT,OAAQI,WAAWM,IAAKN,aAX/S,SAASO,WAAUC,SAAUC,OAAQC,gBAC7BD,SAAWC,gBACXF,SAASC,SAAU,EACnBE,SAASC,gBAAgBC,UAAUC,IAAI,UAAYL,UAEnDD,SAASC,SAAU,EACnBE,SAASC,gBAAgBC,UAAUE,OAAO,UAAYN,SAP5DL,OAAOC,eAAelB,SAAU,aAAc,CAC5C6B,OAAO,IAET7B,SAASO,aAAU,EANrBN,SAAAG,uBAAAH,UACAC,aAAAE,uBAAAF,cACAC,QAAAC,uBAAAD,SA2BE,IA6DI2B,SA9BS,IA/BoB,WAC/B,SAASC,iBAjBX,SAASC,gBAAgBX,SAAUY,aAAe,KAAMZ,oBAAoBY,aAAgB,MAAM,IAAIC,UAAU,qCAkB5GF,CAAgBG,KAAMJ,eAwDxB,OAtEF,SAASK,aAAaH,YAAaI,WAAYC,aAAmJ,OAAhID,YAAY7B,kBAAkByB,YAAYM,UAAWF,YAAiBC,aAAa9B,kBAAkByB,YAAaK,aAAqBL,YAiBvMG,CAAaL,cAAe,CAAC,CAC3BZ,IAAK,YACLU,MAAO,SAAST,UArBRE,OAAQkB,MACTlB,QAAqB,SAAXA,QAOXF,WAAUe,KAAM,SAAUb,QAC1BF,WAAUe,KAAM,KAAMb,QACtBF,WAAUe,KAAM,UAAWb,SAEd,IAATkB,MACAC,aAAAA,QAAYC,IAAI,SAAUpB,UAX9Ba,KAAKQ,cAEQ,IAATH,MACAC,aAAAA,QAAYC,IAAI,SAAU,KAYlCE,QAAAA,QAAOC,QAAQV,KAAM,gBAyBtB,CACDhB,IAAK,iBACLU,MAAO,SAASiB,eAxBHxB,QACX,OAAOmB,aAAAA,QAAYM,IAAI,YA0BxB,CACD5B,IAAK,aACLU,MAAO,SAASc,aAvBVK,SAAAA,QAAQC,OACRd,KAAKf,UAAU,UAAU,GAClB4B,SAAAA,QAAQE,IAAMF,SAAAA,QAAQG,SAAWH,SAAAA,QAAQI,IAChDjB,KAAKf,UAAU,MAAM,GAErBe,KAAKf,UAAUe,KAAKkB,eAAiB,MAAM,KA4BhD,CACDlC,IAAK,OACLU,MAAO,SAASyB,OAzBd,IAAMC,MAAQpB,KAAKW,iBACfS,MACApB,KAAKf,UAAUmC,OAAO,GAEtBpB,KAAKQ,iBAgCNZ,cA1DwB,IA+DjC/B,SAASO,QAAUuB","file":"layoutManager.js","sourcesContent":["import browser from 'browser';\nimport appSettings from 'appSettings';\nimport events from 'events';\n\nfunction setLayout(instance, layout, selectedLayout) {\n    if (layout === selectedLayout) {\n        instance[layout] = true;\n        document.documentElement.classList.add('layout-' + layout);\n    } else {\n        instance[layout] = false;\n        document.documentElement.classList.remove('layout-' + layout);\n    }\n}\n\nclass LayoutManager {\n    setLayout(layout, save) {\n        if (!layout || layout === 'auto') {\n            this.autoLayout();\n\n            if (save !== false) {\n                appSettings.set('layout', '');\n            }\n        } else {\n            setLayout(this, 'mobile', layout);\n            setLayout(this, 'tv', layout);\n            setLayout(this, 'desktop', layout);\n\n            if (save !== false) {\n                appSettings.set('layout', layout);\n            }\n        }\n\n        events.trigger(this, 'modechange');\n    }\n\n    getSavedLayout(layout) {\n        return appSettings.get('layout');\n    }\n\n    autoLayout() {\n        // Take a guess at initial layout. The consuming app can override\n        if (browser.mobile) {\n            this.setLayout('mobile', false);\n        } else if (browser.tv || browser.xboxOne || browser.ps4) {\n            this.setLayout('tv', false);\n        } else {\n            this.setLayout(this.defaultLayout || 'tv', false);\n        }\n    }\n\n    init() {\n        const saved = this.getSavedLayout();\n        if (saved) {\n            this.setLayout(saved, false);\n        } else {\n            this.autoLayout();\n        }\n    }\n}\n\nexport default new LayoutManager();\n"]}