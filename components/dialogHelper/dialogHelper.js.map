{"version":3,"sources":["components/dialogHelper/dialogHelper.js"],"names":["define","_require","_exports","_appRouter","_focusManager","_browser","_layoutManager","_inputManager","_dom","_dialoghelper","_scrollStyles","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","globalOnOpenCallback","enableAnimation","browser","tv","supportsCssAnimation","tryRemoveElement","elem","parentNode","removeChild","err","console","error","DialogHashHandler","dlg","hash","resolve","self","this","originalUrl","window","location","href","activeElement","document","removeScrollLockOnClose","onHashChange","e","isBack","isOpened","removeEventListener","closedByBack","closeDialog","onBackCommand","detail","command","preventDefault","stopPropagation","addEventListener","onDialogClosed","isHistoryEnabled","inputManager","off","removeBackdrop","backdrop","onAnimationFinish","classList","remove","setTimeout","body","history","state","dialogId","back","layoutManager","focusManager","focus","getAttribute","removeCenterFocus","contains","centerFocus","dialogContainer","element","add","addBackdropOverlay","createElement","backdropParent","insertBefore","offsetWidth","dom","target","close","passive","dispatchEvent","CustomEvent","bubbles","cancelable","animateDialogOpen","pushScope","autoFocus","blur","whichAnimationEvent","onFinish","once","appRouter","pushState","concat","on","open","parent","appendChild","Promise","reject","Date","getTime","animateDialogClose","animated","animationConfig","exit","name","style","animation","timing","duration","popScope","Object","defineProperty","value","createDialog","setOnOpen","supportsOverscrollBehavior","horiz","_resolve","_reject","imported","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","then","scrollHelper","fn","options","shouldLockDocumentScroll","size","touch","lockScroll","setAttribute","enableHistory","modal","entryAnimation","exitAnimation","entryAnimationDuration","exitAnimationDuration","entry","easing","fill","scrollX","scrollY","removeOnClose","val","_default"],"mappings":"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","file":"dialogHelper.js","sourcesContent":["import appRouter from 'appRouter';\nimport focusManager from 'focusManager';\nimport browser from 'browser';\nimport layoutManager from 'layoutManager';\nimport inputManager from 'inputManager';\nimport dom from 'dom';\nimport 'css!./dialoghelper.css';\nimport 'scrollStyles';\n\n/* eslint-disable indent */\n\n    let globalOnOpenCallback;\n\n    function enableAnimation() {\n        // too slow\n        if (browser.tv) {\n            return false;\n        }\n\n        return browser.supportsCssAnimation();\n    }\n\n    function removeCenterFocus(dlg) {\n        if (layoutManager.tv) {\n            if (dlg.classList.contains('scrollX')) {\n                centerFocus(dlg, true, false);\n            } else if (dlg.classList.contains('smoothScrollY')) {\n                centerFocus(dlg, false, false);\n            }\n        }\n    }\n\n    function tryRemoveElement(elem) {\n        const parentNode = elem.parentNode;\n        if (parentNode) {\n            // Seeing crashes in edge webview\n            try {\n                parentNode.removeChild(elem);\n            } catch (err) {\n                console.error('error removing dialog element: ' + err);\n            }\n        }\n    }\n\n    function DialogHashHandler(dlg, hash, resolve) {\n        const self = this;\n        self.originalUrl = window.location.href;\n        const activeElement = document.activeElement;\n        let removeScrollLockOnClose = false;\n\n        function onHashChange(e) {\n            const isBack = self.originalUrl === window.location.href;\n\n            if (isBack || !isOpened(dlg)) {\n                window.removeEventListener('popstate', onHashChange);\n            }\n\n            if (isBack) {\n                self.closedByBack = true;\n                closeDialog(dlg);\n            }\n        }\n\n        function onBackCommand(e) {\n            if (e.detail.command === 'back') {\n                self.closedByBack = true;\n                e.preventDefault();\n                e.stopPropagation();\n                closeDialog(dlg);\n            }\n        }\n\n        function onDialogClosed() {\n            if (!isHistoryEnabled(dlg)) {\n                inputManager.off(dlg, onBackCommand);\n            }\n\n            window.removeEventListener('popstate', onHashChange);\n\n            removeBackdrop(dlg);\n            dlg.classList.remove('opened');\n\n            if (removeScrollLockOnClose) {\n                document.body.classList.remove('noScroll');\n            }\n\n            if (!self.closedByBack && isHistoryEnabled(dlg)) {\n                const state = window.history.state || {};\n                if (state.dialogId === hash) {\n                    window.history.back();\n                }\n            }\n\n            if (layoutManager.tv) {\n                focusManager.focus(activeElement);\n            }\n\n            if (dlg.getAttribute('data-removeonclose') !== 'false') {\n                removeCenterFocus(dlg);\n\n                const dialogContainer = dlg.dialogContainer;\n                if (dialogContainer) {\n                    tryRemoveElement(dialogContainer);\n                    dlg.dialogContainer = null;\n                } else {\n                    tryRemoveElement(dlg);\n                }\n            }\n\n            //resolve();\n            // if we just called history.back(), then use a timeout to allow the history events to fire first\n            setTimeout(() => {\n                resolve({\n                    element: dlg,\n                    closedByBack: self.closedByBack\n                });\n            }, 1);\n        }\n\n        dlg.addEventListener('close', onDialogClosed);\n\n        const center = !dlg.classList.contains('dialog-fixedSize');\n        if (center) {\n            dlg.classList.add('centeredDialog');\n        }\n\n        dlg.classList.remove('hide');\n\n        addBackdropOverlay(dlg);\n\n        dlg.classList.add('opened');\n        dlg.dispatchEvent(new CustomEvent('open', {\n            bubbles: false,\n            cancelable: false\n        }));\n\n        if (dlg.getAttribute('data-lockscroll') === 'true' && !document.body.classList.contains('noScroll')) {\n            document.body.classList.add('noScroll');\n            removeScrollLockOnClose = true;\n        }\n\n        animateDialogOpen(dlg);\n\n        if (isHistoryEnabled(dlg)) {\n            appRouter.pushState({ dialogId: hash }, 'Dialog', `#${hash}`);\n\n            window.addEventListener('popstate', onHashChange);\n        } else {\n            inputManager.on(dlg, onBackCommand);\n        }\n    }\n\n    function addBackdropOverlay(dlg) {\n        const backdrop = document.createElement('div');\n        backdrop.classList.add('dialogBackdrop');\n\n        const backdropParent = dlg.dialogContainer || dlg;\n        backdropParent.parentNode.insertBefore(backdrop, backdropParent);\n        dlg.backdrop = backdrop;\n\n        // trigger reflow or the backdrop will not animate\n        void backdrop.offsetWidth;\n        backdrop.classList.add('dialogBackdropOpened');\n\n        dom.addEventListener((dlg.dialogContainer || backdrop), 'click', e => {\n            if (e.target === dlg.dialogContainer) {\n                close(dlg);\n            }\n        }, {\n            passive: true\n        });\n\n        dom.addEventListener((dlg.dialogContainer || backdrop), 'contextmenu', e => {\n            if (e.target === dlg.dialogContainer) {\n                // Close the application dialog menu\n                close(dlg);\n                // Prevent the default browser context menu from appearing\n                e.preventDefault();\n            }\n        });\n    }\n\n    function isHistoryEnabled(dlg) {\n        return dlg.getAttribute('data-history') === 'true';\n    }\n\n    export function open(dlg) {\n        if (globalOnOpenCallback) {\n            globalOnOpenCallback(dlg);\n        }\n\n        const parent = dlg.parentNode;\n        if (parent) {\n            parent.removeChild(dlg);\n        }\n\n        const dialogContainer = document.createElement('div');\n        dialogContainer.classList.add('dialogContainer');\n        dialogContainer.appendChild(dlg);\n        dlg.dialogContainer = dialogContainer;\n        document.body.appendChild(dialogContainer);\n\n        return new Promise((resolve, reject) => {\n            new DialogHashHandler(dlg, `dlg${new Date().getTime()}`, resolve);\n        });\n    }\n\n    function isOpened(dlg) {\n        //return dlg.opened;\n        return !dlg.classList.contains('hide');\n    }\n\n    export function close(dlg) {\n        if (isOpened(dlg)) {\n            if (isHistoryEnabled(dlg)) {\n                window.history.back();\n            } else {\n                closeDialog(dlg);\n            }\n        }\n    }\n\n    function closeDialog(dlg) {\n        if (!dlg.classList.contains('hide')) {\n            dlg.dispatchEvent(new CustomEvent('closing', {\n                bubbles: false,\n                cancelable: false\n            }));\n\n            const onAnimationFinish = () => {\n                focusManager.popScope(dlg);\n\n                dlg.classList.add('hide');\n                dlg.dispatchEvent(new CustomEvent('close', {\n                    bubbles: false,\n                    cancelable: false\n                }));\n            };\n\n            animateDialogClose(dlg, onAnimationFinish);\n        }\n    }\n\n    function animateDialogOpen(dlg) {\n        const onAnimationFinish = () => {\n            focusManager.pushScope(dlg);\n\n            if (dlg.getAttribute('data-autofocus') === 'true') {\n                focusManager.autoFocus(dlg);\n            }\n\n            if (document.activeElement && !dlg.contains(document.activeElement)) {\n                // Blur foreign element to prevent triggering of an action from the previous scope\n                document.activeElement.blur();\n            }\n        };\n\n        if (enableAnimation()) {\n            const onFinish = () => {\n                dom.removeEventListener(dlg, dom.whichAnimationEvent(), onFinish, {\n                    once: true\n                });\n                onAnimationFinish();\n            };\n            dom.addEventListener(dlg, dom.whichAnimationEvent(), onFinish, {\n                once: true\n            });\n            return;\n        }\n\n        onAnimationFinish();\n    }\n\n    function animateDialogClose(dlg, onAnimationFinish) {\n        if (enableAnimation()) {\n            let animated = true;\n\n            switch (dlg.animationConfig.exit.name) {\n                case 'fadeout':\n                    dlg.style.animation = `fadeout ${dlg.animationConfig.exit.timing.duration}ms ease-out normal both`;\n                    break;\n                case 'scaledown':\n                    dlg.style.animation = `scaledown ${dlg.animationConfig.exit.timing.duration}ms ease-out normal both`;\n                    break;\n                case 'slidedown':\n                    dlg.style.animation = `slidedown ${dlg.animationConfig.exit.timing.duration}ms ease-out normal both`;\n                    break;\n                default:\n                    animated = false;\n                    break;\n            }\n            const onFinish = () => {\n                dom.removeEventListener(dlg, dom.whichAnimationEvent(), onFinish, {\n                    once: true\n                });\n                onAnimationFinish();\n            };\n            dom.addEventListener(dlg, dom.whichAnimationEvent(), onFinish, {\n                once: true\n            });\n\n            if (animated) {\n                return;\n            }\n        }\n\n        onAnimationFinish();\n    }\n\n    const supportsOverscrollBehavior = 'overscroll-behavior-y' in document.body.style;\n\n    function shouldLockDocumentScroll(options) {\n        if (supportsOverscrollBehavior && (options.size || !browser.touch)) {\n            return false;\n        }\n\n        if (options.lockScroll != null) {\n            return options.lockScroll;\n        }\n\n        if (options.size === 'fullscreen') {\n            return true;\n        }\n\n        if (options.size) {\n            return true;\n        }\n\n        return browser.touch;\n    }\n\n    function removeBackdrop(dlg) {\n        const backdrop = dlg.backdrop;\n\n        if (!backdrop) {\n            return;\n        }\n\n        dlg.backdrop = null;\n\n        const onAnimationFinish = () => {\n            tryRemoveElement(backdrop);\n        };\n\n        if (enableAnimation()) {\n            backdrop.classList.remove('dialogBackdropOpened');\n\n            // this is not firing animatonend\n            setTimeout(onAnimationFinish, 300);\n            return;\n        }\n\n        onAnimationFinish();\n    }\n\n    function centerFocus(elem, horiz, on) {\n        import('scrollHelper').then((scrollHelper) => {\n            const fn = on ? 'on' : 'off';\n            scrollHelper.centerFocus[fn](elem, horiz);\n        });\n    }\n\n    export function createDialog(options) {\n        options = options || {};\n\n        // If there's no native dialog support, use a plain div\n        // Also not working well in samsung tizen browser, content inside not clickable\n        // Just go ahead and always use a plain div because we're seeing issues overlaying absoltutely positioned content over a modal dialog\n        const dlg = document.createElement('div');\n\n        dlg.classList.add('focuscontainer');\n        dlg.classList.add('hide');\n\n        if (shouldLockDocumentScroll(options)) {\n            dlg.setAttribute('data-lockscroll', 'true');\n        }\n\n        if (options.enableHistory !== false) {\n            dlg.setAttribute('data-history', 'true');\n        }\n\n        // without this safari will scroll the background instead of the dialog contents\n        // but not needed here since this is already on top of an existing dialog\n        // but skip it in IE because it's causing the entire browser to hang\n        // Also have to disable for firefox because it's causing select elements to not be clickable\n        if (options.modal !== false) {\n            dlg.setAttribute('modal', 'modal');\n        }\n\n        if (options.autoFocus !== false) {\n            dlg.setAttribute('data-autofocus', 'true');\n        }\n\n        const defaultEntryAnimation = 'scaleup';\n        const defaultExitAnimation = 'scaledown';\n        const entryAnimation = options.entryAnimation || defaultEntryAnimation;\n        const exitAnimation = options.exitAnimation || defaultExitAnimation;\n\n        // If it's not fullscreen then lower the default animation speed to make it open really fast\n        const entryAnimationDuration = options.entryAnimationDuration || (options.size !== 'fullscreen' ? 180 : 280);\n        const exitAnimationDuration = options.exitAnimationDuration || (options.size !== 'fullscreen' ? 120 : 220);\n\n        dlg.animationConfig = {\n            // scale up\n            'entry': {\n                name: entryAnimation,\n                timing: {\n                    duration: entryAnimationDuration,\n                    easing: 'ease-out'\n                }\n            },\n            // fade out\n            'exit': {\n                name: exitAnimation,\n                timing: {\n                    duration: exitAnimationDuration,\n                    easing: 'ease-out',\n                    fill: 'both'\n                }\n            }\n        };\n\n        dlg.classList.add('dialog');\n\n        if (options.scrollX) {\n            dlg.classList.add('scrollX');\n            dlg.classList.add('smoothScrollX');\n\n            if (layoutManager.tv) {\n                centerFocus(dlg, true, true);\n            }\n        } else if (options.scrollY !== false) {\n            dlg.classList.add('smoothScrollY');\n\n            if (layoutManager.tv) {\n                centerFocus(dlg, false, true);\n            }\n        }\n\n        if (options.removeOnClose) {\n            dlg.setAttribute('data-removeonclose', 'true');\n        }\n\n        if (options.size) {\n            dlg.classList.add('dialog-fixedSize');\n            dlg.classList.add(`dialog-${options.size}`);\n        }\n\n        if (enableAnimation()) {\n            switch (dlg.animationConfig.entry.name) {\n                case 'fadein':\n                    dlg.style.animation = `fadein ${entryAnimationDuration}ms ease-out normal`;\n                    break;\n                case 'scaleup':\n                    dlg.style.animation = `scaleup ${entryAnimationDuration}ms ease-out normal both`;\n                    break;\n                case 'slideup':\n                    dlg.style.animation = `slideup ${entryAnimationDuration}ms ease-out normal`;\n                    break;\n                case 'slidedown':\n                    dlg.style.animation = `slidedown ${entryAnimationDuration}ms ease-out normal`;\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return dlg;\n    }\n\n    export function setOnOpen(val) {\n        globalOnOpenCallback = val;\n    }\n\n/* eslint-enable indent */\n\nexport default {\n    open: open,\n    close: close,\n    createDialog: createDialog,\n    setOnOpen: setOnOpen\n};\n"]}