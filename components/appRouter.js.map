{"version":3,"sources":["components/appRouter.js"],"names":["define","_require","_exports","_apphost","_appSettings","_backdrop","_browser","_connectionManager","_events","_globalize","_itemHelper","_loading","_page","_viewManager","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","_defineProperty","value","_default","AppRouter","_this","this","_classCallCheck","instance","Constructor","TypeError","page","clickHandler","window","addEventListener","popstateOccurred","document","resolve","resolveOnNextShow","baseRoute","location","href","split","replace","getRequestFile","endsWith","substring","setBaseRoute","_createClass","protoProps","staticProps","pathname","lastIndexOf","console","debug","base","addRoute","path","newRoute","getHandler","allRoutes","push","showLocalLogin","serverId","Dashboard","navigate","showVideoOsd","showSelectServer","AppInfo","isNativeApp","showWelcome","showSettings","showNowPlaying","show","beginConnectionWizard","_this2","backdrop","clearBackdrop","loading","connectionManager","connect","enableAutoLogin","appSettings","then","result","handleConnectionResult","param","name","url","results","RegExp","exec","getWindowLocationSearch","decodeURIComponent","back","options","_this3","indexOf","baseUrl","currentRouteInfo","route","type","hide","Promise","showDirect","start","_this4","initApiClients","events","on","appHost","onBeforeExit","onAppResume","firstConnectionResult","click","hashbang","catch","canGoBack","curr","current","querySelector","startPages","history","invokeShortcut","id","showItem","getRouteUrl","item","_this5","apiClient","getApiClient","currentApiClient","getItem","getCurrentUserId","itemObject","arguments","setTransparency","level","backdropContainer","backgroundContainer","documentElement","classList","add","externalBackdrop","remove","getRoutes","pushState","state","title","enableNativeHistory","_this6","State","Emby","Page","goHome","ApiClient","getPublicUsers","users","Servers","Id","_resolve","_reject","imported","_ref","alert","text","globalize","translate","html","loadContentUrl","ctx","next","request","_this7","contentPath","querystring","enableContentQueryString","concat","_ref2","loadContent","handleRoute","_this8","authenticate","initRoute","_this9","onInitComplete","controllerFactory","sendRouteToViewManager","controller","cancelCurrentLoadRequest","currentRequest","currentViewLoadRequest","cancel","_this10","isDummyBackToHome","isBackNav","isBack","transition","fullscreen","supportsThemeMedia","enableMediaControl","autoFocus","onNewViewNeeded","viewManager","tryRestoreView","cancelled","onForcedLogoutMessageTimeout","msg","forcedLogoutMsg","showForcedLogoutMessage","msgTimeout","clearTimeout","setTimeout","onRequestFail","e","data","status","errorCode","anonymous","startup","browser","web0s","restorePreviousState","normalizeImageOptions","setQuality","maxWidth","width","maxHeight","height","quality","getMaxBandwidth","navigator","connection","max","downlinkMax","Number","POSITIVE_INFINITY","parseInt","getMaxBandwidthIOS","onApiClientCreated","newApiClient","iOS","off","initApiClient","_this11","getApiClients","forEach","ensureWebSocket","callback","firstResult","toLowerCase","isCurrentRouteStartup","shouldExitApp","isDefaultRoute","isLoggedIn","supports","exit","roles","validateRoles","_this12","all","map","role","validateRole","getCurrentUser","user","Policy","IsAdministrator","reject","translateHtml","dictionary","view","loadView","handled","index","_this13","currentPath","search","showGuide","showSearch","showLiveTV","showRecordedTV","showFavorites","setTitle","LibraryMenu","Error","context","ItemId","itemType","Type","ServerId","itemTypes","isFavorite","section","CollectionType","parentId","itemHelper","isLocalItem","IsFolder"],"mappings":"AAAAA,OAAO,CAAC,UAAW,UAAW,UAAW,cAAe,WAAY,UAAW,oBAAqB,SAAU,YAAa,aAAc,UAAW,OAAQ,gBAAgB,SAAUC,SAAUC,SAAUC,SAAUC,aAAcC,UAAWC,SAAUC,mBAAoBC,QAASC,WAAYC,YAAaC,SAAUC,MAAOC,cAC5T,aAkBA,SAASC,uBAAuBC,KAAO,OAAOA,KAAOA,IAAIC,WAAaD,IAAM,CAAEE,QAASF,KAEvF,SAASG,QAAQH,KAAmV,OAAtOG,QAArD,mBAAXC,QAAoD,iBAApBA,OAAOC,SAAmC,SAASF,QAAQH,KAAO,cAAcA,KAA2B,SAASG,QAAQH,KAAO,OAAOA,KAAyB,mBAAXI,QAAyBJ,IAAIM,cAAgBF,QAAUJ,MAAQI,OAAOG,UAAY,gBAAkBP,MAAyBA,KAEnX,SAASQ,2BAA6B,GAAuB,mBAAZC,QAAwB,OAAO,KAAM,IAAIC,MAAQ,IAAID,QAA6F,OAAlFD,yBAA2B,SAASA,2BAA6B,OAAOE,OAAiBA,MAE1M,SAASC,wBAAwBX,KAAO,GAAIA,KAAOA,IAAIC,WAAc,OAAOD,IAAO,GAAY,OAARA,KAAiC,WAAjBG,QAAQH,MAAoC,mBAARA,IAAsB,MAAO,CAAEE,QAASF,KAAS,IAAIU,MAAQF,2BAA4B,GAAIE,OAASA,MAAME,IAAIZ,KAAQ,OAAOU,MAAMG,IAAIb,KAAQ,IAAIc,OAAS,GAAQC,sBAAwBC,OAAOC,gBAAkBD,OAAOE,yBAA0B,IAAK,IAAIC,OAAOnB,IAAO,GAAIgB,OAAOT,UAAUa,eAAeC,KAAKrB,IAAKmB,KAAM,CAAE,IAAIG,KAAOP,sBAAwBC,OAAOE,yBAAyBlB,IAAKmB,KAAO,KAAUG,OAASA,KAAKT,KAAOS,KAAKC,KAAQP,OAAOC,eAAeH,OAAQK,IAAKG,MAAgBR,OAAOK,KAAOnB,IAAImB,KAAyE,OAA7DL,OAAOZ,QAAUF,IAASU,OAASA,MAAMa,IAAIvB,IAAKc,QAAkBA,OAIhuB,SAASU,kBAAkBC,OAAQC,OAAS,IAAK,IAAIC,EAAI,EAAGA,EAAID,MAAME,OAAQD,IAAK,CAAE,IAAIE,WAAaH,MAAMC,GAAIE,WAAWC,WAAaD,WAAWC,aAAc,EAAOD,WAAWE,cAAe,EAAU,UAAWF,aAAYA,WAAWG,UAAW,GAAMhB,OAAOC,eAAeQ,OAAQI,WAAWV,IAAKU,aAI7S,SAASI,gBAAgBjC,IAAKmB,IAAKe,OAAiK,OAApJf,OAAOnB,IAAOgB,OAAOC,eAAejB,IAAKmB,IAAK,CAAEe,MAAOA,MAAOJ,YAAY,EAAMC,cAAc,EAAMC,UAAU,IAAkBhC,IAAImB,KAAOe,MAAgBlC,IA9B3MgB,OAAOC,eAAe9B,SAAU,aAAc,CAC5C+C,OAAO,IAET/C,SAASe,aAAU,EANrBd,SAAAW,uBAAAX,UACAC,aAAAU,uBAAAV,cACAC,UAAAS,uBAAAT,WACAC,SAAAQ,uBAAAR,UACAC,mBAAAO,uBAAAP,oBACAC,QAAAM,uBAAAN,SACAC,WAAAK,uBAAAL,YACAC,YAAAI,uBAAAJ,aACAC,SAAAG,uBAAAH,UACAC,MAAAE,uBAAAF,OACAC,aAAAC,uBAAAD,cAyBE,IAw9BIqC,SA5KS,IA5yBgB,WAL3B,SAAAC,YAAc,IAAAC,MAAAC,MAHhB,SAASC,gBAAgBC,SAAUC,aAAe,KAAMD,oBAAoBC,aAAgB,MAAM,IAAIC,UAAU,qCAGhGH,CAAAD,KAAAF,WAAAH,gBAAAK,KAAA,YAjBF,IAiBEL,gBAAAK,KAAA,yBAAA,GAAAL,gBAAAK,KAAA,2BAAA,GAAAL,gBAAAK,KAAA,wBAAA,GAAAL,gBAAAK,KAAA,8BAAA,GAAAL,gBAAAK,KAAA,6BAAA,GAAAL,gBAAAK,KAAA,uBAAA,GAAAL,gBAAAK,KAAA,oBAVMK,MAAAA,QAAKC,cAUXX,gBAAAK,KAAA,yBAAA,GAAAL,gBAAAK,KAAA,kBAAA,GAAAL,gBAAAK,KAAA,oBAPK,GAOLL,gBAAAK,KAAA,yBAAA,GAAAL,gBAAAK,KAAA,aAFD,CAAC,OAAQ,QAAS,iBAG3BO,OAAOC,iBAAiB,YAAY,WAChCT,MAAKU,kBAAmB,KAG5BC,SAASF,iBAAiB,YAAY,WAClC,IAAMG,QAAUZ,MAAKa,kBACjBD,UACAZ,MAAKa,kBAAoB,KACzBD,cAIRX,KAAKa,UAAYN,OAAOO,SAASC,KAAKC,MAAM,KAAK,GAAGC,QAAQjB,KAAKkB,iBAAkB,IAEnFlB,KAAKa,UAAYb,KAAKa,UAAUG,MAAM,KAAK,GACvChB,KAAKa,UAAUM,SAAS,OAASnB,KAAKa,UAAUM,SAAS,SACzDnB,KAAKa,UAAYb,KAAKa,UAAUO,UAAU,EAAGpB,KAAKa,UAAUvB,OAAS,IAGzEU,KAAKqB,eAs8BT,OAz9BF,SAASC,aAAanB,YAAaoB,WAAYC,aAAmJ,OAAhID,YAAYrC,kBAAkBiB,YAAYlC,UAAWsD,YAAiBC,aAAatC,kBAAkBiB,YAAaqB,aAAqBrB,YAiEvMmB,CAAaxB,UAAW,CAAC,CACvBjB,IAAK,eACLe,MAAO,SAASyB,eAzCd,IAAIR,UAAYN,OAAOO,SAASW,SAASR,QAAQjB,KAAKkB,iBAAkB,IACpEL,UAAUa,YAAY,OAASb,UAAUvB,OAAS,IAClDuB,UAAYA,UAAUO,UAAU,EAAGP,UAAUvB,OAAS,IAE1DqC,QAAQC,MAAM,wBAA0Bf,WACxCR,MAAAA,QAAKwB,KAAKhB,aA+CX,CACDhC,IAAK,WACLe,MAAO,SAASkC,SA9CTC,KAAMC,WACX,EAAAzE,MAAAK,SAAKmE,KAAM/B,KAAKiC,WAAWD,WAC3BhC,KAAKkC,UAAUC,KAAKH,YAgDrB,CACDnD,IAAK,iBACLe,MAAO,SAASwC,eA/CHC,UACXC,UAAUC,SAAS,uBAAyBF,YAiD7C,CACDxD,IAAK,eACLe,MAAO,SAAS4C,eA/Cd,OAAOF,UAAUC,SAAS,WAkD3B,CACD1D,IAAK,mBACLe,MAAO,SAAS6C,mBAhDdH,UAAUC,SAASG,QAAQC,YAAc,oBAAsB,gBAmDhE,CACD9D,IAAK,cACLe,MAAO,SAASgD,cAjDdN,UAAUC,SAASG,QAAQC,YAAc,oBAAsB,gBAoDhE,CACD9D,IAAK,eACLe,MAAO,SAASiD,eAlDdP,UAAUC,SAAS,4BAqDpB,CACD1D,IAAK,iBACLe,MAAO,SAASkD,iBAnDd9C,KAAK+C,KAAK,WAsDX,CACDlE,IAAK,wBACLe,MAAO,SAASoD,wBArDM,IAAAC,OAAAjD,KACpBkD,UAAAA,QAASC,gBACTC,SAAAA,QAAQL,OACRM,mBAAAA,QAAkBC,QAAQ,CACtBC,gBAAiBC,aAAAA,QAAYD,oBAC9BE,MAAK,SAACC,QACLT,OAAKU,uBAAuBD,aA4DjC,CACD7E,IAAK,QACLe,MAAO,SAASgE,MA1DZC,KAAMC,KACRD,KAAOA,KAAK5C,QAAQ,MAAO,OAAOA,QAAQ,OAAQ,OAClD,IAGM8C,QAFQ,IAAIC,OADH,SAAWH,KAAO,YACA,KAEXI,KAAKH,KAAOI,2BAClC,OAAe,MAAXH,QACO,GAEAI,mBAAmBJ,QAAQ,GAAG9C,QAAQ,MAAO,QA6DzD,CACDpC,IAAK,OACLe,MAAO,SAASwE,OA1Dd/D,MAAAA,QAAK+D,SA6DN,CACDvF,IAAK,OACLe,MAAO,SAASmD,KA5DbhB,KAAMsC,SAAS,IAAAC,OAAAtE,KAOhB,OAN0B,IAAtB+B,KAAKwC,QAAQ,OAAuC,IAAzBxC,KAAKwC,QAAQ,SACxCxC,KAAO,IAAMA,MAGjBA,KAAOA,KAAKd,QAAQjB,KAAKwE,UAAW,IAEhCxE,KAAKyE,kBAAoBzE,KAAKyE,iBAAiB1C,OAASA,MAEf,SAArC/B,KAAKyE,iBAAiBC,MAAMC,MAC5BvB,SAAAA,QAAQwB,OACDC,QAAQlE,WAIhB,IAAIkE,SAAQ,SAAClE,SAChB2D,OAAK1D,kBAAoBD,QACzBN,MAAAA,QAAK0C,KAAKhB,KAAMsC,cAmErB,CACDxF,IAAK,aACLe,MAAO,SAASkF,WAjEP/C,MACP,OAAO,IAAI8C,SAAQ,SAASlE,SACxBX,KAAKY,kBAAoBD,QACzBN,MAAAA,QAAK0C,KAAK/C,KAAKwE,UAAYzC,WAqEhC,CACDlD,IAAK,QACLe,MAAO,SAASmF,MAnEZV,SAAS,IAAAW,OAAAhF,KACXoD,SAAAA,QAAQL,OACR/C,KAAKiF,iBAELC,QAAAA,QAAOC,GAAGC,SAAAA,QAAS,aAAcpF,KAAKqF,cACtCH,QAAAA,QAAOC,GAAGC,SAAAA,QAAS,SAAUpF,KAAKsF,aAElCjC,mBAAAA,QAAkBC,QAAQ,CACtBC,gBAAiBC,aAAAA,QAAYD,oBAC9BE,MAAK,SAACC,QACLsB,OAAKO,sBAAwB7B,OAC7BW,QAAUA,SAAW,IACrB,EAAA9G,MAAAK,SAAK,CACD4H,OAAyB,IAAlBnB,QAAQmB,MACfC,UAA+B,IAArBpB,QAAQoB,cAEvBC,QAAQjC,MAAK,WACZL,SAAAA,QAAQwB,YA0Eb,CACD/F,IAAK,UACLe,MAAO,SAAS4E,UAvEd,OAAOxE,KAAKa,YA0Eb,CACDhC,IAAK,YACLe,MAAO,SAAS+F,YAxEd,IAAMC,KAAO5F,KAAK6F,UAClB,QAAKD,UAIAlF,SAASoF,cAAc,sBAA+D,IAAxC9F,KAAK+F,WAAWxB,QAAQqB,KAAKjB,QAIzEpE,OAAOyF,QAAQ1G,OAAS,KA4EhC,CACDT,IAAK,UACLe,MAAO,SAASiG,UA1Ed,OAAO7F,KAAKyE,iBAAmBzE,KAAKyE,iBAAiBC,MAAQ,OA6E9D,CACD7F,IAAK,iBACLe,MAAO,SAASqG,eA5EHC,IACoB,IAA3BA,GAAG3B,QAAQ,aAEX2B,IADAA,GAAKA,GAAGjF,QAAQ,WAAY,KACpBD,MAAM,KAEdhB,KAAKmG,SAASD,GAAG,GAAIA,GAAG,KACO,IAAxBA,GAAG3B,QAAQ,UAElB2B,IADAA,GAAKA,GAAGjF,QAAQ,QAAS,KACjBD,MAAM,KACdhB,KAAKmG,SAASD,GAAG,GAAIA,GAAG,MAExBA,GAAKA,GAAGlF,MAAM,KACdhB,KAAK+C,KAAK/C,KAAKoG,YAAYF,GAAG,GAAI,CAC9B7D,SAAU6D,GAAG,SA+EtB,CACDrH,IAAK,WACLe,MAAO,SAASuG,SA5ETE,KAAMhE,SAAUgC,SAAS,IAAAiC,OAAAtG,KAE9B,GAAsB,iBAAVqG,KAAoB,CAC5B,IAAME,UAAYlE,SAAWgB,mBAAAA,QAAkBmD,aAAanE,UAAYgB,mBAAAA,QAAkBoD,mBAC1FF,UAAUG,QAAQH,UAAUI,mBAAoBN,MAAM5C,MAAK,SAACmD,YACxDN,OAAKH,SAASS,WAAYvC,gBAE3B,CACsB,IAArBwC,UAAUvH,SACV+E,QAAUwC,UAAU,IAGxB,IAAM/C,IAAM9D,KAAKoG,YAAYC,KAAMhC,SACnCrE,KAAK+C,KAAKe,IAAK,CACXuC,KAAMA,UAkFf,CACDxH,IAAK,kBACLe,MAAO,SAASkH,gBA/EFC,OACP/G,KAAKgH,oBACNhH,KAAKgH,kBAAoBtG,SAASoF,cAAc,uBAE/C9F,KAAKiH,sBACNjH,KAAKiH,oBAAsBvG,SAASoF,cAAc,yBAGxC,SAAViB,OAA8B,IAAVA,OACpB7D,UAAAA,QAASC,eAAc,GACvBzC,SAASwG,gBAAgBC,UAAUC,IAAI,uBACvCpH,KAAKiH,oBAAoBE,UAAUC,IAAI,mCACvCpH,KAAKgH,kBAAkBG,UAAUC,IAAI,SACpB,aAAVL,OAAkC,IAAVA,OAC/B7D,UAAAA,QAASmE,kBAAiB,GAC1B3G,SAASwG,gBAAgBC,UAAUC,IAAI,uBACvCpH,KAAKiH,oBAAoBE,UAAUC,IAAI,mCACvCpH,KAAKgH,kBAAkBG,UAAUC,IAAI,UAErClE,UAAAA,QAASmE,kBAAiB,GAC1B3G,SAASwG,gBAAgBC,UAAUG,OAAO,uBAC1CtH,KAAKiH,oBAAoBE,UAAUG,OAAO,mCAC1CtH,KAAKgH,kBAAkBG,UAAUG,OAAO,WAsF7C,CACDzI,IAAK,YACLe,MAAO,SAAS2H,YAnFd,OAAOvH,KAAKkC,YAsFb,CACDrD,IAAK,YACLe,MAAO,SAAS4H,UArFRC,MAAOC,MAAO5D,KACpB2D,MAAMlF,UAAW,EACjBhC,OAAOyF,QAAQwB,UAAUC,MAAOC,MAAO5D,OAuFxC,CACDjF,IAAK,sBACLe,MAAO,SAAS+H,sBArFd,OAAO,IAwFR,CACD9I,IAAK,yBACLe,MAAO,SAAS+D,uBAvFKD,QAAQ,IAAAkE,OAAA5H,KAC3B,OAAQ0D,OAAOmE,OACX,IAAK,WACDzE,SAAAA,QAAQwB,OACRkD,KAAKC,KAAKC,SACV,MACJ,IAAK,eACDtE,OAAOuE,UAAUC,iBAAiBzE,MAAK,SAAC0E,OAChCA,MAAM7I,OACNsI,OAAKxF,eAAesB,OAAO0E,QAAQ,GAAGC,IAEtCT,OAAKxF,eAAesB,OAAO0E,QAAQ,GAAGC,IAAI,MAGlD,MACJ,IAAK,kBACDrI,KAAKyC,mBACL,MACJ,IAAK,gBACDzC,KAAK4C,cACL,MACJ,IAAK,qBACD,IAAAiC,SAAA,SAAAyD,SAAAC,SAAA,OAAA3L,SAAA,CAAO,UAAP,SAAA4L,UAAA,OAAAF,SAAAjK,wBAAAmK,aAAAD,YAAgB9E,MAAK,SAAAgF,OACjBC,EADsCD,KAAnB7K,SACb,CACF+K,KAAMC,WAAAA,QAAUC,UAAU,qBAAsB,wCAChDC,KAAMF,WAAAA,QAAUC,UAAU,qBAAsB,6FACjDpF,MAAK,WACJmE,OAAKnF,4BA4GtB,CACD5D,IAAK,iBACLe,MAAO,SAASmJ,eArGHC,IAAKC,KAAMvE,MAAOwE,SAAS,IAClCpF,IADkCqF,OAAAnJ,MAQV,KALxB8D,IADAY,MAAM0E,aAA8C,mBAAvB1E,MAAM0E,YAC7B1E,MAAM0E,YAAYJ,IAAIK,aAEtB3E,MAAM0E,aAAe1E,MAAM3C,MAG7BwC,QAAQ,SAEa,IAArBT,IAAIS,QAAQ,OACZT,IAAM,IAAMA,KAGhBA,IAAM9D,KAAKwE,UAAYV,KAGvBkF,IAAIK,aAAe3E,MAAM4E,2BACzBxF,KAAO,IAAMkF,IAAIK,aAGrB,IAAAxE,SAAA,SAAAyD,SAAAC,SAAA,OAAA3L,SAAA,CAAA,GAAA2M,OAAO,QAAUzF,OAAjB,SAAA0E,UAAA,OAAAF,SAAAjK,wBAAAmK,aAAAD,YAAsB9E,MAAK,SAAA+F,OAAqB,IAAVV,KAAUU,MAAnB5L,QACzBuL,OAAKM,YAAYT,IAAKtE,MAAOoE,KAAMI,cAiHxC,CACDrK,IAAK,cACLe,MAAO,SAAS8J,YA/GNV,IAAKC,KAAMvE,OAAO,IAAAiF,OAAA3J,KAC1BA,KAAK4J,aAAaZ,IAAKtE,OAAO,WAC1BiF,OAAKE,UAAUb,IAAKC,KAAMvE,YAoH/B,CACD7F,IAAK,YACLe,MAAO,SAASiK,UAlHRb,IAAKC,KAAMvE,OAAO,IAAAoF,OAAA9J,KAClB+J,eAAiB,SAAjBA,eAAkBC,mBACpBF,OAAKG,uBAAuBjB,IAAKC,KAAMvE,MAAOsF,oBAG9CtF,MAAMwF,WACN,IAAArF,SAAA,SAAAyD,SAAAC,SAAA,OAAA3L,SAAA,CAAA,GAAA2M,OAAO,eAAiB7E,MAAMwF,cAA9B,SAAA1B,UAAA,OAAAF,SAAAjK,wBAAAmK,aAAAD,YAA0C9E,KAAKsG,gBAE/CA,mBA2HL,CACDlL,IAAK,2BACLe,MAAO,SAASuK,2BAxHd,IAAMC,eAAiBpK,KAAKqK,uBACxBD,iBACAA,eAAeE,QAAS,KA6H7B,CACDzL,IAAK,yBACLe,MAAO,SAASqK,uBA3HKjB,IAAKC,KAAMvE,MAAOsF,mBAAmB,IAAAO,QAAAvK,KACxD,GAAIA,KAAKwK,mBAAoC,SAAf9F,MAAMC,KAChC3E,KAAKwK,mBAAoB,MAD7B,CAKAxK,KAAKmK,2BACL,IAAMM,UAAYzB,IAAI0B,OAEhBN,eAAiB,CACnBtG,IAAK9D,KAAKwE,UAAYwE,IAAIjH,KAC1B4I,WAAYjG,MAAMiG,WAClBD,OAAQD,UACRhD,MAAOuB,IAAIvB,MACX9C,KAAMD,MAAMC,KACZiG,WAAYlG,MAAMkG,WAClBZ,kBAAmBA,kBACnB3F,QAAS,CACLwG,mBAAoBnG,MAAMmG,qBAAsB,EAChDC,oBAAiD,IAA7BpG,MAAMoG,oBAE9BC,UAAWrG,MAAMqG,WAErB/K,KAAKqK,uBAAyBD,eAE9B,IAAMY,gBAAkB,SAAlBA,kBACwB,iBAAftG,MAAM3C,KACbwI,QAAKxB,eAAeC,IAAKC,KAAMvE,MAAO0F,gBAEtCnB,QAIHwB,UAILQ,aAAAA,QAAYC,eAAed,gBAAgB,WACvCG,QAAK9F,iBAAmB,CACpBC,MAAOA,MACP3C,KAAMiH,IAAIjH,SAEf2D,OAAM,SAAChC,QACDA,QAAWA,OAAOyH,WACnBH,qBAVJA,qBA2IL,CACDnM,IAAK,+BACLe,MAAO,SAASwL,+BA7Hd,IAAMC,IAAMrL,KAAKsL,gBACjBtL,KAAKsL,gBAAkB,KAEnBD,KACA,IAAAxG,SAAA,SAAAyD,SAAAC,SAAA,OAAA3L,SAAA,CAAO,UAAP,SAAA4L,UAAA,OAAAF,SAAAjK,wBAAAmK,aAAAD,YAAgB9E,MAAK,SAACiF,OAClBA,MAAM2C,UAsIf,CACDxM,IAAK,0BACLe,MAAO,SAAS2L,wBAnIMF,KACpBrL,KAAKsL,gBAAkBD,IACnBrL,KAAKwL,YACLC,aAAazL,KAAKwL,YAGtBxL,KAAKwL,WAAaE,WAAW1L,KAAKoL,6BAA8B,OAsIjE,CACDvM,IAAK,gBACLe,MAAO,SAAS+L,cArIJC,EAAGC,MAGO,MAAhBA,KAAKC,SACkB,oBAAnBD,KAAKE,aACoB/L,KAAKyE,mBAAoBzE,KAAKyE,iBAAiBC,MAAMsH,WAAahM,KAAKyE,iBAAiBC,MAAMuH,WAInHjM,KAAKuL,wBAAwB3C,WAAAA,QAAUC,UAAU,kCACjD7I,KAAKoC,eATCpC,KASwBqC,iBAyI3C,CACDxD,IAAK,eACLe,MAAO,SAASyF,eApIV6G,SAAAA,QAAQC,OACR9L,MAAAA,QAAK+L,yBAwIV,CACDvN,IAAK,wBACLe,MAAO,SAASyM,sBAtIIhI,SAClB,IAAIiI,YACAjI,QAAQkI,UAAYlI,QAAQmI,OAASnI,QAAQoI,WAAapI,QAAQqI,UAClEJ,YAAa,GAGbA,aAAejI,QAAQsI,UACvBtI,QAAQsI,QAAU,MA0IvB,CACD9N,IAAK,kBACLe,MAAO,SAASgN,kBAtId,GAAIC,UAAUC,WAAY,CACtB,IAAIC,IAAMF,UAAUC,WAAWE,YAC/B,GAAID,KAAOA,IAAM,GAAKA,IAAME,OAAOC,kBAI/B,OAHAH,KAAO,EACPA,KAAO,IACPA,KAAO,GACAI,SAASJ,IAAK,IAK7B,OAAO,OA4IR,CACDlO,IAAK,qBACLe,MAAO,SAASwN,qBA1Id,OAAO,MA6IR,CACDvO,IAAK,qBACLe,MAAO,SAASyN,mBA5ICzB,EAAG0B,cAClBA,aAAajB,sBAAwBrM,KAAKqM,sBAEtCH,SAAAA,QAAQqB,IACRD,aAAaV,gBAAkB5M,KAAKoN,mBAEpCE,aAAaV,gBAAkB5M,KAAK4M,gBAGxC1H,QAAAA,QAAOsI,IAAIF,aAAc,cAAetN,KAAK2L,eAC7CzG,QAAAA,QAAOC,GAAGmI,aAAc,cAAetN,KAAK2L,iBA+I7C,CACD9M,IAAK,gBACLe,MAAO,SAAS6N,cA9IJlH,UAAWrG,UACrBA,SAASmN,mBAAmB,GAAI9G,aAgJjC,CACD1H,IAAK,iBACLe,MAAO,SAASqF,iBA/ID,IAAAyI,QAAA1N,KACbqD,mBAAAA,QAAkBsK,gBAAgBC,SAAQ,SAACrH,WACvCmH,QAAKD,cAAclH,UAAWmH,YAGlCxI,QAAAA,QAAOC,GAAG9B,mBAAAA,QAAmB,mBAAoBrD,KAAKqN,sBAmJvD,CACDxO,IAAK,cACLe,MAAO,SAAS0F,cAjJd,IAAMiB,UAAYlD,mBAAAA,QAAkBoD,mBAEhCF,WACAA,UAAUsH,oBAqJf,CACDhP,IAAK,eACLe,MAAO,SAASgK,aAnJLZ,IAAKtE,MAAOoJ,UACrB,IAAMC,YAAc/N,KAAKuF,sBACzB,IAAIwI,cACA/N,KAAKuF,sBAAwB,KAEH,aAAtBwI,YAAYlG,OAAyBnD,MAAMsH,WAHnD,CASA,IAAMzF,UAAYlD,mBAAAA,QAAkBoD,mBAC9BhF,SAAWuH,IAAIvH,SAASuM,cAE9BrM,QAAQC,MAAM,uCAAyCH,UAEvD,IAAMwM,uBAAwBjO,KAAKyE,kBAAmBzE,KAAKyE,iBAAiBC,MAAMuH,QAC5EiC,cAAgBlF,IAAI0B,QAAUhG,MAAMyJ,gBAAkBF,sBAE5D,KAAKC,eAAmB3H,WAAcA,UAAU6H,cAAkB1J,MAAMsH,WAGpE,OAFArK,QAAQC,MAAM,gFACd5B,KAAKgD,wBAIT,GAAIkL,cACA,OAAI9I,SAAAA,QAAQiJ,SAAS,aACjBjJ,SAAAA,QAAQkJ,YAGZ,EAGJ,GAAI/H,WAAaA,UAAU6H,aAAc,CAGrC,GAFAzM,QAAQC,MAAM,qCAEV8C,MAAMyJ,eAGN,OAFAxM,QAAQC,MAAM,2CACdkG,KAAKC,KAAKC,SAEP,GAAItD,MAAM6J,MAIb,YAHAvO,KAAKwO,cAAcjI,UAAW7B,MAAM6J,OAAO9K,MAAK,WAC5CqK,aACD9N,KAAKgD,uBAKhBrB,QAAQC,MAAM,6BAA+BH,UAC7CqM,gBA3CQ9N,KAAK2D,uBAAuBoK,eAkMrC,CACDlP,IAAK,gBACLe,MAAO,SAAS4O,cAtJJjI,UAAWgI,OAAO,IAAAE,QAAAzO,KAC5B,OAAO6E,QAAQ6J,IAAIH,MAAMvN,MAAM,KAAK2N,KAAI,SAACC,MACrC,OAAOH,QAAKI,aAAatI,UAAWqI,YA2JzC,CACD/P,IAAK,eACLe,MAAO,SAASiP,aAzJLtI,UAAWqI,MACpB,MAAa,UAATA,KACOrI,UAAUuI,iBAAiBrL,MAAK,SAACsL,MACpC,OAAIA,KAAKC,OAAOC,gBACLpK,QAAQlE,UAEZkE,QAAQqK,YAKhBrK,QAAQlE,YA4JhB,CACD9B,IAAK,cACLe,MAAO,SAAS6J,YA3JNT,IAAKtE,MAAOoE,KAAMI,SAC1BJ,KAAOF,WAAAA,QAAUuG,cAAcrG,KAAMpE,MAAM0K,YAC3ClG,QAAQmG,KAAOvG,KAEfmC,aAAAA,QAAYqE,SAASpG,SAErBlJ,KAAKyE,iBAAmB,CACpBC,MAAOA,MACP3C,KAAMiH,IAAIjH,MAGdiH,IAAIuG,SAAU,IA4Jf,CACD1Q,IAAK,iBACLe,MAAO,SAASsB,iBA1Jd,IAAIa,KAAOxB,OAAOO,SAASW,UAAY,GAEjC+N,MAAQzN,KAAKL,YAAY,KAW/B,OATIK,MADW,IAAXyN,MACOzN,KAAKX,UAAUoO,OAEf,IAAMzN,OAGK,MAATA,OACTA,KAAO,eAGJA,OA6JR,CACDlD,IAAK,aACLe,MAAO,SAASqC,WA5JPyC,OAAO,IAAA+K,QAAAzP,KACd,OAAO,SAACgJ,IAAKC,MACTD,IAAI0B,OAAS+E,QAAKhP,iBAClBgP,QAAK/F,YAAYV,IAAKC,KAAMvE,OAC5B+K,QAAKhP,kBAAmB,KAmK7B,CACD5B,IAAK,0BACLe,MAAO,SAASsE,0BAhKd,IAAMwL,YAAc1P,KAAKyE,kBAAoBzE,KAAKyE,iBAAiB1C,MAAc,GAE3EyN,MAAQE,YAAYnL,QAAQ,KAC9BoL,OAAS,GAMb,OAJe,IAAXH,QACAG,OAASD,YAAYtO,UAAUoO,QAG5BG,QAAU,KAkKlB,CACD9Q,IAAK,YACLe,MAAO,SAASgQ,YAhKdtN,UAAUC,SAAS,uBAmKpB,CACD1D,IAAK,SACLe,MAAO,SAASoI,SAjKd1F,UAAUC,SAAS,eAoKpB,CACD1D,IAAK,aACLe,MAAO,SAASiQ,aAlKdvN,UAAUC,SAAS,iBAqKpB,CACD1D,IAAK,aACLe,MAAO,SAASkQ,aAnKdxN,UAAUC,SAAS,iBAsKpB,CACD1D,IAAK,iBACLe,MAAO,SAASmQ,iBApKdzN,UAAUC,SAAS,uBAuKpB,CACD1D,IAAK,gBACLe,MAAO,SAASoQ,gBArKd1N,UAAUC,SAAS,qBAwKpB,CACD1D,IAAK,WACLe,MAAO,SAASqQ,SAvKTvI,OACLwI,YAAYD,SAASvI,SAyKtB,CACD7I,IAAK,cACLe,MAAO,SAASwG,YAxKNC,KAAMhC,SACd,IAAKgC,KACD,MAAM,IAAI8J,MAAM,uBAGpB,GAAI9J,KAAKvC,IACL,OAAOuC,KAAKvC,IAGhB,IAOIA,IAPEsM,QAAU/L,QAAUA,QAAQ+L,QAAU,KACtClK,GAAKG,KAAKgC,IAAMhC,KAAKgK,OAEtBhM,UACDA,QAAU,IAKd,IAAMiM,SAAWjK,KAAKkK,OAASlM,QAAUA,QAAQiM,SAAW,MACtDjO,SAAWgE,KAAKmK,UAAYnM,QAAQhC,SAE1C,GAAa,aAATgE,KACA,MAAO,yBAGX,GAAa,WAATA,KACA,MAAO,mBAGX,GAAa,iBAATA,KACA,MAAO,iBAGX,GAAa,eAATA,KACA,MAAO,8BAAgChC,QAAQhC,SAGnD,GAAa,WAATgE,KACA,MAAO,kCAAoChC,QAAQhC,SAGvD,GAAa,SAATgE,KAAiB,CACjB,IAAIvC,KAAM,sBAAwBO,QAAQhC,SAAW,SAAWgC,QAAQoM,UAMxE,OAJIpM,QAAQqM,aACR5M,MAAO,oBAGJA,KAGX,GAAa,WAATuC,KACA,MAAwB,aAApBhC,QAAQsM,QACD,8BAAgCtM,QAAQhC,SAE3B,UAApBgC,QAAQsM,QACD,8BAAgCtM,QAAQhC,SAG3B,WAApBgC,QAAQsM,QACD,iDAAmDtM,QAAQhC,SAG9C,UAApBgC,QAAQsM,QACD,6EAA+EtM,QAAQhC,SAG1E,WAApBgC,QAAQsM,QACD,kDAAoDtM,QAAQhC,SAG/C,SAApBgC,QAAQsM,QACD,gDAAkDtM,QAAQhC,SAG7C,SAApBgC,QAAQsM,QACD,gDAAkDtM,QAAQhC,SAG7C,UAApBgC,QAAQsM,QACD,kDAAoDtM,QAAQhC,SAG/C,gBAApBgC,QAAQsM,QACD,8BAAgCtM,QAAQhC,SAG3B,oBAApBgC,QAAQsM,QACD,8BAAgCtM,QAAQhC,SAG5C,wBAA0BgC,QAAQhC,SAG7C,GAAgB,eAAZiO,SACA,MAAO,yBAA2BpK,GAAK,aAAe7D,SAG1D,GAA2B,UAAvBgE,KAAKuK,eACL,MAAO,cAGX,GAAkB,UAAdvK,KAAKkK,KAWL,OAVAzM,IAAM,qBAAuBuC,KAAKgC,GAAK,aAAehG,SAEtC,WAAZ+N,UACAtM,KAAO,kBAGPO,QAAQwM,WACR/M,KAAO,aAAeO,QAAQwM,UAG3B/M,IAGX,GAAkB,eAAduC,KAAKkK,KAOL,OANAzM,IAAM,0BAA4BuC,KAAKgC,GAAK,aAAehG,SAEvDgC,QAAQwM,WACR/M,KAAO,aAAeO,QAAQwM,UAG3B/M,IAGX,GAAkB,WAAduC,KAAKkK,KAOL,OANAzM,IAAM,sBAAwBuC,KAAKgC,GAAK,aAAehG,SAEnDgC,QAAQwM,WACR/M,KAAO,aAAeO,QAAQwM,UAG3B/M,IAGX,GAAgB,YAAZsM,UAA0BU,YAAAA,QAAWC,YAAY1K,MAAO,CACxD,GAA2B,UAAvBA,KAAKuK,eAOL,OANA9M,IAAM,2BAA6BuC,KAAKgC,GAEpChE,SAA+B,WAApBA,QAAQsM,UACnB7M,KAAO,UAGJA,IAGX,GAA2B,WAAvBuC,KAAKuK,eAOL,OANA9M,IAAM,uBAAyBuC,KAAKgC,GAEhChE,SAA+B,WAApBA,QAAQsM,UACnB7M,KAAO,UAGJA,IAGX,GAA2B,SAAvBuC,KAAKuK,eACL,MAAO,0BAA4BvK,KAAKgC,GAMhD,MAFkB,CAAC,WAAY,YAAa,UAAW,SAAU,aAAc,aAAc,SAAU,YAAa,eAEtG9D,QAAQ+L,WAAa,EACxB,cAAgBpK,GAAK,aAAe7D,SAK/B,UAAZiO,UAAoC,UAAZA,UAAoC,WAAZA,SACzC,cAAgBpK,IAHLkK,QAAU,YAAcA,QAAU,IAGR,aAAe/N,SAG3DgE,KAAK2K,SACD9K,GACO,sBAAwBA,GAAK,aAAe7D,SAGhD,IAGJ,cAAgB6D,GAAK,aAAe7D,aA6KxCvC,UAr9BoB,IA09B7BjD,SAASe,QAAUiC","file":"appRouter.js","sourcesContent":["import appHost from 'apphost';\nimport appSettings from 'appSettings';\nimport backdrop from 'backdrop';\nimport browser from 'browser';\nimport connectionManager from 'connectionManager';\nimport events from 'events';\nimport globalize from 'globalize';\nimport itemHelper from 'itemHelper';\nimport loading from 'loading';\nimport page from 'page';\nimport viewManager from 'viewManager';\n\nclass AppRouter {\n    allRoutes = [];\n    backdropContainer;\n    backgroundContainer;\n    currentRouteInfo;\n    currentViewLoadRequest;\n    firstConnectionResult;\n    forcedLogoutMsg;\n    handleAnchorClick = page.clickHandler;\n    isDummyBackToHome;\n    msgTimeout;\n    popstateOccurred = false;\n    resolveOnNextShow;\n    /**\n     * Pages of \"no return\" (when \"Go back\" should behave differently, probably quitting the application).\n     */\n    startPages = ['home', 'login', 'selectserver'];\n\n    constructor() {\n        window.addEventListener('popstate', () => {\n            this.popstateOccurred = true;\n        });\n\n        document.addEventListener('viewshow', () => {\n            const resolve = this.resolveOnNextShow;\n            if (resolve) {\n                this.resolveOnNextShow = null;\n                resolve();\n            }\n        });\n\n        this.baseRoute = window.location.href.split('?')[0].replace(this.getRequestFile(), '');\n        // support hashbang\n        this.baseRoute = this.baseRoute.split('#')[0];\n        if (this.baseRoute.endsWith('/') && !this.baseRoute.endsWith('://')) {\n            this.baseRoute = this.baseRoute.substring(0, this.baseRoute.length - 1);\n        }\n\n        this.setBaseRoute();\n    }\n\n    /**\n     * @private\n     */\n    setBaseRoute() {\n        let baseRoute = window.location.pathname.replace(this.getRequestFile(), '');\n        if (baseRoute.lastIndexOf('/') === baseRoute.length - 1) {\n            baseRoute = baseRoute.substring(0, baseRoute.length - 1);\n        }\n        console.debug('setting page base to ' + baseRoute);\n        page.base(baseRoute);\n    }\n\n    addRoute(path, newRoute) {\n        page(path, this.getHandler(newRoute));\n        this.allRoutes.push(newRoute);\n    }\n\n    showLocalLogin(serverId) {\n        Dashboard.navigate('login.html?serverid=' + serverId);\n    }\n\n    showVideoOsd() {\n        return Dashboard.navigate('video');\n    }\n\n    showSelectServer() {\n        Dashboard.navigate(AppInfo.isNativeApp ? 'selectserver.html' : 'login.html');\n    }\n\n    showWelcome() {\n        Dashboard.navigate(AppInfo.isNativeApp ? 'selectserver.html' : 'login.html');\n    }\n\n    showSettings() {\n        Dashboard.navigate('mypreferencesmenu.html');\n    }\n\n    showNowPlaying() {\n        this.show('queue');\n    }\n\n    beginConnectionWizard() {\n        backdrop.clearBackdrop();\n        loading.show();\n        connectionManager.connect({\n            enableAutoLogin: appSettings.enableAutoLogin()\n        }).then((result) => {\n            this.handleConnectionResult(result);\n        });\n    }\n\n    param(name, url) {\n        name = name.replace(/[[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n        const regexS = '[\\\\?&]' + name + '=([^&#]*)';\n        const regex = new RegExp(regexS, 'i');\n\n        const results = regex.exec(url || getWindowLocationSearch());\n        if (results == null) {\n            return '';\n        } else {\n            return decodeURIComponent(results[1].replace(/\\+/g, ' '));\n        }\n    }\n\n    back() {\n        page.back();\n    }\n\n    show(path, options) {\n        if (path.indexOf('/') !== 0 && path.indexOf('://') === -1) {\n            path = '/' + path;\n        }\n\n        path = path.replace(this.baseUrl(), '');\n\n        if (this.currentRouteInfo && this.currentRouteInfo.path === path) {\n            // can't use this with home right now due to the back menu\n            if (this.currentRouteInfo.route.type !== 'home') {\n                loading.hide();\n                return Promise.resolve();\n            }\n        }\n\n        return new Promise((resolve) => {\n            this.resolveOnNextShow = resolve;\n            page.show(path, options);\n        });\n    }\n\n    showDirect(path) {\n        return new Promise(function(resolve) {\n            this.resolveOnNextShow = resolve;\n            page.show(this.baseUrl() + path);\n        });\n    }\n\n    start(options) {\n        loading.show();\n        this.initApiClients();\n\n        events.on(appHost, 'beforeexit', this.onBeforeExit);\n        events.on(appHost, 'resume', this.onAppResume);\n\n        connectionManager.connect({\n            enableAutoLogin: appSettings.enableAutoLogin()\n        }).then((result) => {\n            this.firstConnectionResult = result;\n            options = options || {};\n            page({\n                click: options.click !== false,\n                hashbang: options.hashbang !== false\n            });\n        }).catch().then(() => {\n            loading.hide();\n        });\n    }\n\n    baseUrl() {\n        return this.baseRoute;\n    }\n\n    canGoBack() {\n        const curr = this.current();\n        if (!curr) {\n            return false;\n        }\n\n        if (!document.querySelector('.dialogContainer') && this.startPages.indexOf(curr.type) !== -1) {\n            return false;\n        }\n\n        return window.history.length > 1;\n    }\n\n    current() {\n        return this.currentRouteInfo ? this.currentRouteInfo.route : null;\n    }\n\n    invokeShortcut(id) {\n        if (id.indexOf('library-') === 0) {\n            id = id.replace('library-', '');\n            id = id.split('_');\n\n            this.showItem(id[0], id[1]);\n        } else if (id.indexOf('item-') === 0) {\n            id = id.replace('item-', '');\n            id = id.split('_');\n            this.showItem(id[0], id[1]);\n        } else {\n            id = id.split('_');\n            this.show(this.getRouteUrl(id[0], {\n                serverId: id[1]\n            }));\n        }\n    }\n\n    showItem(item, serverId, options) {\n        // TODO: Refactor this so it only gets items, not strings.\n        if (typeof (item) === 'string') {\n            const apiClient = serverId ? connectionManager.getApiClient(serverId) : connectionManager.currentApiClient();\n            apiClient.getItem(apiClient.getCurrentUserId(), item).then((itemObject) => {\n                this.showItem(itemObject, options);\n            });\n        } else {\n            if (arguments.length === 2) {\n                options = arguments[1];\n            }\n\n            const url = this.getRouteUrl(item, options);\n            this.show(url, {\n                item: item\n            });\n        }\n    }\n\n    setTransparency(level) {\n        if (!this.backdropContainer) {\n            this.backdropContainer = document.querySelector('.backdropContainer');\n        }\n        if (!this.backgroundContainer) {\n            this.backgroundContainer = document.querySelector('.backgroundContainer');\n        }\n\n        if (level === 'full' || level === 2) {\n            backdrop.clearBackdrop(true);\n            document.documentElement.classList.add('transparentDocument');\n            this.backgroundContainer.classList.add('backgroundContainer-transparent');\n            this.backdropContainer.classList.add('hide');\n        } else if (level === 'backdrop' || level === 1) {\n            backdrop.externalBackdrop(true);\n            document.documentElement.classList.add('transparentDocument');\n            this.backgroundContainer.classList.add('backgroundContainer-transparent');\n            this.backdropContainer.classList.add('hide');\n        } else {\n            backdrop.externalBackdrop(false);\n            document.documentElement.classList.remove('transparentDocument');\n            this.backgroundContainer.classList.remove('backgroundContainer-transparent');\n            this.backdropContainer.classList.remove('hide');\n        }\n    }\n\n    getRoutes() {\n        return this.allRoutes;\n    }\n\n    pushState(state, title, url) {\n        state.navigate = false;\n        window.history.pushState(state, title, url);\n    }\n\n    enableNativeHistory() {\n        return false;\n    }\n\n    handleConnectionResult(result) {\n        switch (result.State) {\n            case 'SignedIn':\n                loading.hide();\n                Emby.Page.goHome();\n                break;\n            case 'ServerSignIn':\n                result.ApiClient.getPublicUsers().then((users) => {\n                    if (users.length) {\n                        this.showLocalLogin(result.Servers[0].Id);\n                    } else {\n                        this.showLocalLogin(result.Servers[0].Id, true);\n                    }\n                });\n                break;\n            case 'ServerSelection':\n                this.showSelectServer();\n                break;\n            case 'ConnectSignIn':\n                this.showWelcome();\n                break;\n            case 'ServerUpdateNeeded':\n                import('alert').then(({default: alert}) =>{\n                    alert({\n                        text: globalize.translate('ServerUpdateNeeded', 'https://github.com/jellyfin/jellyfin'),\n                        html: globalize.translate('ServerUpdateNeeded', '<a href=\"https://github.com/jellyfin/jellyfin\">https://github.com/jellyfin/jellyfin</a>')\n                    }).then(() => {\n                        this.showSelectServer();\n                    });\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    loadContentUrl(ctx, next, route, request) {\n        let url;\n        if (route.contentPath && typeof (route.contentPath) === 'function') {\n            url = route.contentPath(ctx.querystring);\n        } else {\n            url = route.contentPath || route.path;\n        }\n\n        if (url.indexOf('://') === -1) {\n            // Put a slash at the beginning but make sure to avoid a double slash\n            if (url.indexOf('/') !== 0) {\n                url = '/' + url;\n            }\n\n            url = this.baseUrl() + url;\n        }\n\n        if (ctx.querystring && route.enableContentQueryString) {\n            url += '?' + ctx.querystring;\n        }\n\n        import('text!' + url).then(({default: html}) => {\n            this.loadContent(ctx, route, html, request);\n        });\n    }\n\n    handleRoute(ctx, next, route) {\n        this.authenticate(ctx, route, () => {\n            this.initRoute(ctx, next, route);\n        });\n    }\n\n    initRoute(ctx, next, route) {\n        const onInitComplete = (controllerFactory) => {\n            this.sendRouteToViewManager(ctx, next, route, controllerFactory);\n        };\n\n        if (route.controller) {\n            import('controllers/' + route.controller).then(onInitComplete);\n        } else {\n            onInitComplete();\n        }\n    }\n\n    cancelCurrentLoadRequest() {\n        const currentRequest = this.currentViewLoadRequest;\n        if (currentRequest) {\n            currentRequest.cancel = true;\n        }\n    }\n\n    sendRouteToViewManager(ctx, next, route, controllerFactory) {\n        if (this.isDummyBackToHome && route.type === 'home') {\n            this.isDummyBackToHome = false;\n            return;\n        }\n\n        this.cancelCurrentLoadRequest();\n        const isBackNav = ctx.isBack;\n\n        const currentRequest = {\n            url: this.baseUrl() + ctx.path,\n            transition: route.transition,\n            isBack: isBackNav,\n            state: ctx.state,\n            type: route.type,\n            fullscreen: route.fullscreen,\n            controllerFactory: controllerFactory,\n            options: {\n                supportsThemeMedia: route.supportsThemeMedia || false,\n                enableMediaControl: route.enableMediaControl !== false\n            },\n            autoFocus: route.autoFocus\n        };\n        this.currentViewLoadRequest = currentRequest;\n\n        const onNewViewNeeded = () => {\n            if (typeof route.path === 'string') {\n                this.loadContentUrl(ctx, next, route, currentRequest);\n            } else {\n                next();\n            }\n        };\n\n        if (!isBackNav) {\n            onNewViewNeeded();\n            return;\n        }\n        viewManager.tryRestoreView(currentRequest, () => {\n            this.currentRouteInfo = {\n                route: route,\n                path: ctx.path\n            };\n        }).catch((result) => {\n            if (!result || !result.cancelled) {\n                onNewViewNeeded();\n            }\n        });\n    }\n\n    onForcedLogoutMessageTimeout() {\n        const msg = this.forcedLogoutMsg;\n        this.forcedLogoutMsg = null;\n\n        if (msg) {\n            import('alert').then((alert) => {\n                alert(msg);\n            });\n        }\n    }\n\n    showForcedLogoutMessage(msg) {\n        this.forcedLogoutMsg = msg;\n        if (this.msgTimeout) {\n            clearTimeout(this.msgTimeout);\n        }\n\n        this.msgTimeout = setTimeout(this.onForcedLogoutMessageTimeout, 100);\n    }\n\n    onRequestFail(e, data) {\n        const apiClient = this;\n\n        if (data.status === 403) {\n            if (data.errorCode === 'ParentalControl') {\n                const isCurrentAllowed = this.currentRouteInfo ? (this.currentRouteInfo.route.anonymous || this.currentRouteInfo.route.startup) : true;\n\n                // Bounce to the login screen, but not if a password entry fails, obviously\n                if (!isCurrentAllowed) {\n                    this.showForcedLogoutMessage(globalize.translate('AccessRestrictedTryAgainLater'));\n                    this.showLocalLogin(apiClient.serverId());\n                }\n            }\n        }\n    }\n\n    onBeforeExit() {\n        if (browser.web0s) {\n            page.restorePreviousState();\n        }\n    }\n\n    normalizeImageOptions(options) {\n        let setQuality;\n        if (options.maxWidth || options.width || options.maxHeight || options.height) {\n            setQuality = true;\n        }\n\n        if (setQuality && !options.quality) {\n            options.quality = 90;\n        }\n    }\n\n    getMaxBandwidth() {\n        /* eslint-disable compat/compat */\n        if (navigator.connection) {\n            let max = navigator.connection.downlinkMax;\n            if (max && max > 0 && max < Number.POSITIVE_INFINITY) {\n                max /= 8;\n                max *= 1000000;\n                max *= 0.7;\n                return parseInt(max, 10);\n            }\n        }\n        /* eslint-enable compat/compat */\n\n        return null;\n    }\n\n    getMaxBandwidthIOS() {\n        return 800000;\n    }\n\n    onApiClientCreated(e, newApiClient) {\n        newApiClient.normalizeImageOptions = this.normalizeImageOptions;\n\n        if (browser.iOS) {\n            newApiClient.getMaxBandwidth = this.getMaxBandwidthIOS;\n        } else {\n            newApiClient.getMaxBandwidth = this.getMaxBandwidth;\n        }\n\n        events.off(newApiClient, 'requestfail', this.onRequestFail);\n        events.on(newApiClient, 'requestfail', this.onRequestFail);\n    }\n\n    initApiClient(apiClient, instance) {\n        instance.onApiClientCreated({}, apiClient);\n    }\n\n    initApiClients() {\n        connectionManager.getApiClients().forEach((apiClient) => {\n            this.initApiClient(apiClient, this);\n        });\n\n        events.on(connectionManager, 'apiclientcreated', this.onApiClientCreated);\n    }\n\n    onAppResume() {\n        const apiClient = connectionManager.currentApiClient();\n\n        if (apiClient) {\n            apiClient.ensureWebSocket();\n        }\n    }\n\n    authenticate(ctx, route, callback) {\n        const firstResult = this.firstConnectionResult;\n        if (firstResult) {\n            this.firstConnectionResult = null;\n\n            if (firstResult.State !== 'SignedIn' && !route.anonymous) {\n                this.handleConnectionResult(firstResult);\n                return;\n            }\n        }\n\n        const apiClient = connectionManager.currentApiClient();\n        const pathname = ctx.pathname.toLowerCase();\n\n        console.debug('appRouter - processing path request ' + pathname);\n\n        const isCurrentRouteStartup = this.currentRouteInfo ? this.currentRouteInfo.route.startup : true;\n        const shouldExitApp = ctx.isBack && route.isDefaultRoute && isCurrentRouteStartup;\n\n        if (!shouldExitApp && (!apiClient || !apiClient.isLoggedIn()) && !route.anonymous) {\n            console.debug('appRouter - route does not allow anonymous access, redirecting to login');\n            this.beginConnectionWizard();\n            return;\n        }\n\n        if (shouldExitApp) {\n            if (appHost.supports('exit')) {\n                appHost.exit();\n                return;\n            }\n            return;\n        }\n\n        if (apiClient && apiClient.isLoggedIn()) {\n            console.debug('appRouter - user is authenticated');\n\n            if (route.isDefaultRoute) {\n                console.debug('appRouter - loading skin home page');\n                Emby.Page.goHome();\n                return;\n            } else if (route.roles) {\n                this.validateRoles(apiClient, route.roles).then(() => {\n                    callback();\n                }, this.beginConnectionWizard);\n                return;\n            }\n        }\n\n        console.debug('appRouter - proceeding to ' + pathname);\n        callback();\n    }\n\n    validateRoles(apiClient, roles) {\n        return Promise.all(roles.split(',').map((role) => {\n            return this.validateRole(apiClient, role);\n        }));\n    }\n\n    validateRole(apiClient, role) {\n        if (role === 'admin') {\n            return apiClient.getCurrentUser().then((user) => {\n                if (user.Policy.IsAdministrator) {\n                    return Promise.resolve();\n                }\n                return Promise.reject();\n            });\n        }\n\n        // Unknown role\n        return Promise.resolve();\n    }\n\n    loadContent(ctx, route, html, request) {\n        html = globalize.translateHtml(html, route.dictionary);\n        request.view = html;\n\n        viewManager.loadView(request);\n\n        this.currentRouteInfo = {\n            route: route,\n            path: ctx.path\n        };\n\n        ctx.handled = true;\n    }\n\n    getRequestFile() {\n        let path = window.location.pathname || '';\n\n        const index = path.lastIndexOf('/');\n        if (index !== -1) {\n            path = path.substring(index);\n        } else {\n            path = '/' + path;\n        }\n\n        if (!path || path === '/') {\n            path = '/index.html';\n        }\n\n        return path;\n    }\n\n    getHandler(route) {\n        return (ctx, next) => {\n            ctx.isBack = this.popstateOccurred;\n            this.handleRoute(ctx, next, route);\n            this.popstateOccurred = false;\n        };\n    }\n\n    getWindowLocationSearch() {\n        const currentPath = this.currentRouteInfo ? (this.currentRouteInfo.path || '') : '';\n\n        const index = currentPath.indexOf('?');\n        let search = '';\n\n        if (index !== -1) {\n            search = currentPath.substring(index);\n        }\n\n        return search || '';\n    }\n\n    showGuide() {\n        Dashboard.navigate('livetv.html?tab=1');\n    }\n\n    goHome() {\n        Dashboard.navigate('home.html');\n    }\n\n    showSearch() {\n        Dashboard.navigate('search.html');\n    }\n\n    showLiveTV() {\n        Dashboard.navigate('livetv.html');\n    }\n\n    showRecordedTV() {\n        Dashboard.navigate('livetv.html?tab=3');\n    }\n\n    showFavorites() {\n        Dashboard.navigate('home.html?tab=1');\n    }\n\n    setTitle(title) {\n        LibraryMenu.setTitle(title);\n    }\n\n    getRouteUrl(item, options) {\n        if (!item) {\n            throw new Error('item cannot be null');\n        }\n\n        if (item.url) {\n            return item.url;\n        }\n\n        const context = options ? options.context : null;\n        const id = item.Id || item.ItemId;\n\n        if (!options) {\n            options = {};\n        }\n\n        let url;\n        // TODO: options will never be false. Replace condition with lodash's isEmpty()\n        const itemType = item.Type || (options ? options.itemType : null);\n        const serverId = item.ServerId || options.serverId;\n\n        if (item === 'settings') {\n            return 'mypreferencesmenu.html';\n        }\n\n        if (item === 'wizard') {\n            return 'wizardstart.html';\n        }\n\n        if (item === 'manageserver') {\n            return 'dashboard.html';\n        }\n\n        if (item === 'recordedtv') {\n            return 'livetv.html?tab=3&serverId=' + options.serverId;\n        }\n\n        if (item === 'nextup') {\n            return 'list.html?type=nextup&serverId=' + options.serverId;\n        }\n\n        if (item === 'list') {\n            let url = 'list.html?serverId=' + options.serverId + '&type=' + options.itemTypes;\n\n            if (options.isFavorite) {\n                url += '&IsFavorite=true';\n            }\n\n            return url;\n        }\n\n        if (item === 'livetv') {\n            if (options.section === 'programs') {\n                return 'livetv.html?tab=0&serverId=' + options.serverId;\n            }\n            if (options.section === 'guide') {\n                return 'livetv.html?tab=1&serverId=' + options.serverId;\n            }\n\n            if (options.section === 'movies') {\n                return 'list.html?type=Programs&IsMovie=true&serverId=' + options.serverId;\n            }\n\n            if (options.section === 'shows') {\n                return 'list.html?type=Programs&IsSeries=true&IsMovie=false&IsNews=false&serverId=' + options.serverId;\n            }\n\n            if (options.section === 'sports') {\n                return 'list.html?type=Programs&IsSports=true&serverId=' + options.serverId;\n            }\n\n            if (options.section === 'kids') {\n                return 'list.html?type=Programs&IsKids=true&serverId=' + options.serverId;\n            }\n\n            if (options.section === 'news') {\n                return 'list.html?type=Programs&IsNews=true&serverId=' + options.serverId;\n            }\n\n            if (options.section === 'onnow') {\n                return 'list.html?type=Programs&IsAiring=true&serverId=' + options.serverId;\n            }\n\n            if (options.section === 'dvrschedule') {\n                return 'livetv.html?tab=4&serverId=' + options.serverId;\n            }\n\n            if (options.section === 'seriesrecording') {\n                return 'livetv.html?tab=5&serverId=' + options.serverId;\n            }\n\n            return 'livetv.html?serverId=' + options.serverId;\n        }\n\n        if (itemType == 'SeriesTimer') {\n            return 'details?seriesTimerId=' + id + '&serverId=' + serverId;\n        }\n\n        if (item.CollectionType == 'livetv') {\n            return 'livetv.html';\n        }\n\n        if (item.Type === 'Genre') {\n            url = 'list.html?genreId=' + item.Id + '&serverId=' + serverId;\n\n            if (context === 'livetv') {\n                url += '&type=Programs';\n            }\n\n            if (options.parentId) {\n                url += '&parentId=' + options.parentId;\n            }\n\n            return url;\n        }\n\n        if (item.Type === 'MusicGenre') {\n            url = 'list.html?musicGenreId=' + item.Id + '&serverId=' + serverId;\n\n            if (options.parentId) {\n                url += '&parentId=' + options.parentId;\n            }\n\n            return url;\n        }\n\n        if (item.Type === 'Studio') {\n            url = 'list.html?studioId=' + item.Id + '&serverId=' + serverId;\n\n            if (options.parentId) {\n                url += '&parentId=' + options.parentId;\n            }\n\n            return url;\n        }\n\n        if (context !== 'folders' && !itemHelper.isLocalItem(item)) {\n            if (item.CollectionType == 'movies') {\n                url = 'movies.html?topParentId=' + item.Id;\n\n                if (options && options.section === 'latest') {\n                    url += '&tab=1';\n                }\n\n                return url;\n            }\n\n            if (item.CollectionType == 'tvshows') {\n                url = 'tv.html?topParentId=' + item.Id;\n\n                if (options && options.section === 'latest') {\n                    url += '&tab=2';\n                }\n\n                return url;\n            }\n\n            if (item.CollectionType == 'music') {\n                return 'music.html?topParentId=' + item.Id;\n            }\n        }\n\n        const itemTypes = ['Playlist', 'TvChannel', 'Program', 'BoxSet', 'MusicAlbum', 'MusicGenre', 'Person', 'Recording', 'MusicArtist'];\n\n        if (itemTypes.indexOf(itemType) >= 0) {\n            return 'details?id=' + id + '&serverId=' + serverId;\n        }\n\n        const contextSuffix = context ? '&context=' + context : '';\n\n        if (itemType == 'Series' || itemType == 'Season' || itemType == 'Episode') {\n            return 'details?id=' + id + contextSuffix + '&serverId=' + serverId;\n        }\n\n        if (item.IsFolder) {\n            if (id) {\n                return 'list.html?parentId=' + id + '&serverId=' + serverId;\n            }\n\n            return '#';\n        }\n\n        return 'details?id=' + id + '&serverId=' + serverId;\n    }\n}\n\nexport default new AppRouter();\n"]}