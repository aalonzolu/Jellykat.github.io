{"version":3,"sources":["components/multiSelect/multiSelect.js"],"names":["define","_require","_exports","_browser","_apphost","_loading","_connectionManager","_globalize","_dom","_multiSelect","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","value","_default","options","touchTarget","touchStartTimeout","touchStartX","touchStartY","container","onTapHold","e","card","dom","parentWithClass","target","showSelections","preventDefault","stopPropagation","getTouches","changedTouches","targetTouches","touches","onTouchStart","touch","clientX","clientY","element","clearTimeout","setTimeout","onTouchStartTimerFired","onTouchMove","deltaX","deltaY","touchEndX","touchEndY","Math","abs","onMouseOut","onTouchEnd","onMouseDown","initTapHold","browser","safari","addEventListener","passive","bindOnClick","onContainerClick","this","destroy","removeEventListener","currentSelectionCommandsPanel","selectedItems","selectedElements","hideSelections","selectionCommandsPanel","parentNode","removeChild","elems","document","querySelectorAll","i","length","parent","classList","remove","updateItemSelection","chkItemSelect","selected","id","parentWithAttribute","getAttribute","filter","push","itemSelectionCount","querySelector","innerHTML","onSelectionChange","checked","showSelection","item","isChecked","itemSelectionPanel","createElement","add","appendChild","cssClass","firefox","checkedAttribute","concat","deleteItems","apiClient","itemIds","Promise","resolve","reject","msg","globalize","translate","title","_resolve","_reject","imported","then","_ref2","confirm","promises","map","itemId","deleteItem","all","alertText","_ref","alert","showMenuForSelectedItems","connectionManager","currentApiClient","getCurrentUser","user","menuItems","name","icon","Policy","EnableContentDeletion","EnableContentDownloading","appHost","supports","IsAdministrator","_ref3","show","items","positionTo","callback","slice","serverId","serverInfo","Id","_ref4","collectionEditor","dispatchNeedsRefresh","_ref5","playlistEditor","combineVersions","selection","_ref7","text","loading","ajax","type","url","getUrl","Ids","join","hide","forEach","markPlayed","getCurrentUserId","markUnplayed","_ref6","refreshDialog","includes","notifyRefreshNeeded","initialCard","cards","showSelectionCommands","body","html","btnSelectionPanelOptions","onItemSelectionPanelClick","contains","newValue"],"mappings":"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","file":"multiSelect.js","sourcesContent":["import browser from 'browser';\nimport appHost from 'apphost';\nimport loading from 'loading';\nimport connectionManager from 'connectionManager';\nimport globalize from 'globalize';\nimport dom from 'dom';\nimport 'css!./multiSelect';\n\n/* eslint-disable indent */\n\n    let selectedItems = [];\n    let selectedElements = [];\n    let currentSelectionCommandsPanel;\n\n    function hideSelections() {\n        const selectionCommandsPanel = currentSelectionCommandsPanel;\n        if (selectionCommandsPanel) {\n            selectionCommandsPanel.parentNode.removeChild(selectionCommandsPanel);\n            currentSelectionCommandsPanel = null;\n\n            selectedItems = [];\n            selectedElements = [];\n            const elems = document.querySelectorAll('.itemSelectionPanel');\n            for (let i = 0, length = elems.length; i < length; i++) {\n                const parent = elems[i].parentNode;\n                parent.removeChild(elems[i]);\n                parent.classList.remove('withMultiSelect');\n            }\n        }\n    }\n\n    function onItemSelectionPanelClick(e, itemSelectionPanel) {\n        // toggle the checkbox, if it wasn't clicked on\n        if (!dom.parentWithClass(e.target, 'chkItemSelect')) {\n            const chkItemSelect = itemSelectionPanel.querySelector('.chkItemSelect');\n\n            if (chkItemSelect) {\n                if (chkItemSelect.classList.contains('checkedInitial')) {\n                    chkItemSelect.classList.remove('checkedInitial');\n                } else {\n                    const newValue = !chkItemSelect.checked;\n                    chkItemSelect.checked = newValue;\n                    updateItemSelection(chkItemSelect, newValue);\n                }\n            }\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n\n    function updateItemSelection(chkItemSelect, selected) {\n        const id = dom.parentWithAttribute(chkItemSelect, 'data-id').getAttribute('data-id');\n\n        if (selected) {\n            const current = selectedItems.filter(i => {\n                return i === id;\n            });\n\n            if (!current.length) {\n                selectedItems.push(id);\n                selectedElements.push(chkItemSelect);\n            }\n        } else {\n            selectedItems = selectedItems.filter(i => {\n                return i !== id;\n            });\n            selectedElements = selectedElements.filter(i => {\n                return i !== chkItemSelect;\n            });\n        }\n\n        if (selectedItems.length) {\n            const itemSelectionCount = document.querySelector('.itemSelectionCount');\n            if (itemSelectionCount) {\n                itemSelectionCount.innerHTML = selectedItems.length;\n            }\n        } else {\n            hideSelections();\n        }\n    }\n\n    function onSelectionChange(e) {\n        updateItemSelection(this, this.checked);\n    }\n\n    function showSelection(item, isChecked) {\n        let itemSelectionPanel = item.querySelector('.itemSelectionPanel');\n\n        if (!itemSelectionPanel) {\n            itemSelectionPanel = document.createElement('div');\n            itemSelectionPanel.classList.add('itemSelectionPanel');\n\n            const parent = item.querySelector('.cardBox') || item.querySelector('.cardContent');\n            parent.classList.add('withMultiSelect');\n            parent.appendChild(itemSelectionPanel);\n\n            let cssClass = 'chkItemSelect';\n            if (isChecked && !browser.firefox) {\n                // In firefox, the initial tap hold doesnt' get treated as a click\n                // In other browsers it does, so we need to make sure that initial click is ignored\n                cssClass += ' checkedInitial';\n            }\n            const checkedAttribute = isChecked ? ' checked' : '';\n            itemSelectionPanel.innerHTML = `<label class=\"checkboxContainer\"><input type=\"checkbox\" is=\"emby-checkbox\" data-outlineclass=\"multiSelectCheckboxOutline\" class=\"${cssClass}\"${checkedAttribute}/><span></span></label>`;\n            const chkItemSelect = itemSelectionPanel.querySelector('.chkItemSelect');\n            chkItemSelect.addEventListener('change', onSelectionChange);\n        }\n    }\n\n    function showSelectionCommands() {\n        let selectionCommandsPanel = currentSelectionCommandsPanel;\n\n        if (!selectionCommandsPanel) {\n            selectionCommandsPanel = document.createElement('div');\n            selectionCommandsPanel.classList.add('selectionCommandsPanel');\n\n            document.body.appendChild(selectionCommandsPanel);\n            currentSelectionCommandsPanel = selectionCommandsPanel;\n\n            let html = '';\n\n            html += '<button is=\"paper-icon-button-light\" class=\"btnCloseSelectionPanel autoSize\"><span class=\"material-icons close\"></span></button>';\n            html += '<h1 class=\"itemSelectionCount\"></h1>';\n\n            const moreIcon = 'more_vert';\n            html += `<button is=\"paper-icon-button-light\" class=\"btnSelectionPanelOptions autoSize\" style=\"margin-left:auto;\"><span class=\"material-icons ${moreIcon}\"></span></button>`;\n\n            selectionCommandsPanel.innerHTML = html;\n\n            selectionCommandsPanel.querySelector('.btnCloseSelectionPanel').addEventListener('click', hideSelections);\n\n            const btnSelectionPanelOptions = selectionCommandsPanel.querySelector('.btnSelectionPanelOptions');\n\n            dom.addEventListener(btnSelectionPanelOptions, 'click', showMenuForSelectedItems, { passive: true });\n        }\n    }\n\n    function alertText(options) {\n        return new Promise((resolve, reject) => {\n            import('alert').then(({default: alert}) => {\n                alert(options).then(resolve, resolve);\n            });\n        });\n    }\n\n    function deleteItems(apiClient, itemIds) {\n        return new Promise((resolve, reject) => {\n            let msg = globalize.translate('ConfirmDeleteItem');\n            let title = globalize.translate('HeaderDeleteItem');\n\n            if (itemIds.length > 1) {\n                msg = globalize.translate('ConfirmDeleteItems');\n                title = globalize.translate('HeaderDeleteItems');\n            }\n\n            import('confirm').then(({default: confirm}) => {\n                confirm(msg, title).then(() => {\n                    const promises = itemIds.map(itemId => {\n                        apiClient.deleteItem(itemId);\n                    });\n\n                    Promise.all(promises).then(resolve, () => {\n                        alertText(globalize.translate('ErrorDeletingItem')).then(reject, reject);\n                    });\n                }, reject);\n            });\n        });\n    }\n\n    function showMenuForSelectedItems(e) {\n        const apiClient = connectionManager.currentApiClient();\n\n        apiClient.getCurrentUser().then(user => {\n            const menuItems = [];\n\n            menuItems.push({\n                name: globalize.translate('AddToCollection'),\n                id: 'addtocollection',\n                icon: 'add'\n            });\n\n            menuItems.push({\n                name: globalize.translate('AddToPlaylist'),\n                id: 'playlist',\n                icon: 'playlist_add'\n            });\n\n            // TODO: Be more dynamic based on what is selected\n            if (user.Policy.EnableContentDeletion) {\n                menuItems.push({\n                    name: globalize.translate('Delete'),\n                    id: 'delete',\n                    icon: 'delete'\n                });\n            }\n\n            if (user.Policy.EnableContentDownloading && appHost.supports('filedownload')) {\n                menuItems.push({\n                    name: globalize.translate('Download'),\n                    id: 'download',\n                    icon: 'file_download'\n                });\n            }\n\n            if (user.Policy.IsAdministrator) {\n                menuItems.push({\n                    name: globalize.translate('GroupVersions'),\n                    id: 'groupvideos',\n                    icon: 'call_merge'\n                });\n            }\n\n            menuItems.push({\n                name: globalize.translate('MarkPlayed'),\n                id: 'markplayed',\n                icon: 'check_box'\n            });\n\n            menuItems.push({\n                name: globalize.translate('MarkUnplayed'),\n                id: 'markunplayed',\n                icon: 'check_box_outline_blank'\n            });\n\n            menuItems.push({\n                name: globalize.translate('RefreshMetadata'),\n                id: 'refresh',\n                icon: 'refresh'\n            });\n\n            import('actionsheet').then(({default: actionsheet}) => {\n                actionsheet.show({\n                    items: menuItems,\n                    positionTo: e.target,\n                    callback: function (id) {\n                        const items = selectedItems.slice(0);\n                        const serverId = apiClient.serverInfo().Id;\n\n                        switch (id) {\n                            case 'addtocollection':\n                                import('collectionEditor').then(({default: collectionEditor}) => {\n                                    new collectionEditor({\n                                        items: items,\n                                        serverId: serverId\n                                    });\n                                });\n                                hideSelections();\n                                dispatchNeedsRefresh();\n                                break;\n                            case 'playlist':\n                                import('playlistEditor').then(({default: playlistEditor}) => {\n                                    new playlistEditor({\n                                        items: items,\n                                        serverId: serverId\n                                    });\n                                });\n                                hideSelections();\n                                dispatchNeedsRefresh();\n                                break;\n                            case 'delete':\n                                deleteItems(apiClient, items).then(dispatchNeedsRefresh);\n                                hideSelections();\n                                dispatchNeedsRefresh();\n                                break;\n                            case 'groupvideos':\n                                combineVersions(apiClient, items);\n                                break;\n                            case 'markplayed':\n                                items.forEach(itemId => {\n                                    apiClient.markPlayed(apiClient.getCurrentUserId(), itemId);\n                                });\n                                hideSelections();\n                                dispatchNeedsRefresh();\n                                break;\n                            case 'markunplayed':\n                                items.forEach(itemId => {\n                                    apiClient.markUnplayed(apiClient.getCurrentUserId(), itemId);\n                                });\n                                hideSelections();\n                                dispatchNeedsRefresh();\n                                break;\n                            case 'refresh':\n                                import('refreshDialog').then(({default: refreshDialog}) => {\n                                    new refreshDialog({\n                                        itemIds: items,\n                                        serverId: serverId\n                                    }).show();\n                                });\n                                hideSelections();\n                                dispatchNeedsRefresh();\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                });\n            });\n        });\n    }\n\n    function dispatchNeedsRefresh() {\n        const elems = [];\n\n        [].forEach.call(selectedElements, i => {\n            const container = dom.parentWithAttribute(i, 'is', 'emby-itemscontainer');\n\n            if (container && !elems.includes(container)) {\n                elems.push(container);\n            }\n        });\n\n        for (let i = 0, length = elems.length; i < length; i++) {\n            elems[i].notifyRefreshNeeded(true);\n        }\n    }\n\n    function combineVersions(apiClient, selection) {\n        if (selection.length < 2) {\n            import('alert').then(({default: alert}) => {\n                alert({\n\n                    text: globalize.translate('PleaseSelectTwoItems')\n                });\n            });\n            return;\n        }\n\n        loading.show();\n\n        apiClient.ajax({\n\n            type: 'POST',\n            url: apiClient.getUrl('Videos/MergeVersions', { Ids: selection.join(',') })\n\n        }).then(() => {\n            loading.hide();\n            hideSelections();\n            dispatchNeedsRefresh();\n        });\n    }\n\n    function showSelections(initialCard) {\n        import('emby-checkbox').then(() => {\n            const cards = document.querySelectorAll('.card');\n            for (let i = 0, length = cards.length; i < length; i++) {\n                showSelection(cards[i], initialCard === cards[i]);\n            }\n\n            showSelectionCommands();\n            updateItemSelection(initialCard, true);\n        });\n    }\n\n    function onContainerClick(e) {\n        const target = e.target;\n\n        if (selectedItems.length) {\n            const card = dom.parentWithClass(target, 'card');\n            if (card) {\n                const itemSelectionPanel = card.querySelector('.itemSelectionPanel');\n                if (itemSelectionPanel) {\n                    return onItemSelectionPanelClick(e, itemSelectionPanel);\n                }\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n        }\n    }\n\n    document.addEventListener('viewbeforehide', hideSelections);\n\n    export default function (options) {\n        const self = this;\n\n        const container = options.container;\n\n        function onTapHold(e) {\n            const card = dom.parentWithClass(e.target, 'card');\n\n            if (card) {\n                showSelections(card);\n            }\n\n            e.preventDefault();\n            // It won't have this if it's a hammer event\n            if (e.stopPropagation) {\n                e.stopPropagation();\n            }\n            return false;\n        }\n\n        function getTouches(e) {\n            return e.changedTouches || e.targetTouches || e.touches;\n        }\n\n        let touchTarget;\n        let touchStartTimeout;\n        let touchStartX;\n        let touchStartY;\n        function onTouchStart(e) {\n            const touch = getTouches(e)[0];\n            touchTarget = null;\n            touchStartX = 0;\n            touchStartY = 0;\n\n            if (touch) {\n                touchStartX = touch.clientX;\n                touchStartY = touch.clientY;\n                const element = touch.target;\n\n                if (element) {\n                    const card = dom.parentWithClass(element, 'card');\n\n                    if (card) {\n                        if (touchStartTimeout) {\n                            clearTimeout(touchStartTimeout);\n                            touchStartTimeout = null;\n                        }\n\n                        touchTarget = card;\n                        touchStartTimeout = setTimeout(onTouchStartTimerFired, 550);\n                    }\n                }\n            }\n        }\n\n        function onTouchMove(e) {\n            if (touchTarget) {\n                const touch = getTouches(e)[0];\n                let deltaX;\n                let deltaY;\n\n                if (touch) {\n                    const touchEndX = touch.clientX || 0;\n                    const touchEndY = touch.clientY || 0;\n                    deltaX = Math.abs(touchEndX - (touchStartX || 0));\n                    deltaY = Math.abs(touchEndY - (touchStartY || 0));\n                } else {\n                    deltaX = 100;\n                    deltaY = 100;\n                }\n                if (deltaX >= 5 || deltaY >= 5) {\n                    onMouseOut(e);\n                }\n            }\n        }\n\n        function onTouchEnd(e) {\n            onMouseOut(e);\n        }\n\n        function onMouseDown(e) {\n            if (touchStartTimeout) {\n                clearTimeout(touchStartTimeout);\n                touchStartTimeout = null;\n            }\n\n            touchTarget = e.target;\n            touchStartTimeout = setTimeout(onTouchStartTimerFired, 550);\n        }\n\n        function onMouseOut(e) {\n            if (touchStartTimeout) {\n                clearTimeout(touchStartTimeout);\n                touchStartTimeout = null;\n            }\n            touchTarget = null;\n        }\n\n        function onTouchStartTimerFired() {\n            if (!touchTarget) {\n                return;\n            }\n\n            const card = dom.parentWithClass(touchTarget, 'card');\n            touchTarget = null;\n\n            if (card) {\n                showSelections(card);\n            }\n        }\n\n        function initTapHold(element) {\n            // mobile safari doesn't allow contextmenu override\n            if (browser.touch && !browser.safari) {\n                element.addEventListener('contextmenu', onTapHold);\n            } else {\n                dom.addEventListener(element, 'touchstart', onTouchStart, {\n                    passive: true\n                });\n                dom.addEventListener(element, 'touchmove', onTouchMove, {\n                    passive: true\n                });\n                dom.addEventListener(element, 'touchend', onTouchEnd, {\n                    passive: true\n                });\n                dom.addEventListener(element, 'touchcancel', onTouchEnd, {\n                    passive: true\n                });\n                dom.addEventListener(element, 'mousedown', onMouseDown, {\n                    passive: true\n                });\n                dom.addEventListener(element, 'mouseleave', onMouseOut, {\n                    passive: true\n                });\n                dom.addEventListener(element, 'mouseup', onMouseOut, {\n                    passive: true\n                });\n            }\n        }\n\n        initTapHold(container);\n\n        if (options.bindOnClick !== false) {\n            container.addEventListener('click', onContainerClick);\n        }\n\n        self.onContainerClick = onContainerClick;\n\n        self.destroy = () => {\n            container.removeEventListener('click', onContainerClick);\n            container.removeEventListener('contextmenu', onTapHold);\n\n            const element = container;\n\n            dom.removeEventListener(element, 'touchstart', onTouchStart, {\n                passive: true\n            });\n            dom.removeEventListener(element, 'touchmove', onTouchMove, {\n                passive: true\n            });\n            dom.removeEventListener(element, 'touchend', onTouchEnd, {\n                passive: true\n            });\n            dom.removeEventListener(element, 'mousedown', onMouseDown, {\n                passive: true\n            });\n            dom.removeEventListener(element, 'mouseleave', onMouseOut, {\n                passive: true\n            });\n            dom.removeEventListener(element, 'mouseup', onMouseOut, {\n                passive: true\n            });\n        };\n    }\n\n/* eslint-enable indent */\n"]}