{"version":3,"sources":["components/subtitleeditor/subtitleeditor.js"],"names":["define","_require","_exports","_dialogHelper","_layoutManager","_globalize","userSettings","_connectionManager","_loading","_focusManager","_dom","_embySelect","_listViewStyle","_paperIconButtonLight","_formdialog","_materialIcons","_subtitleeditor","_embyButton","_flexStyles","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","currentItem","hasChanges","downloadRemoteSubtitles","context","id","url","Id","apiClient","connectionManager","getApiClient","ServerId","ajax","type","getUrl","then","Promise","_resolve","_reject","imported","_ref","toast","globalize","translate","focusManager","autoFocus","searchForSubtitles","language","loading","show","getJSON","results","renderSearchResults","lastProvider","html","length","querySelector","classList","remove","innerHTML","hide","add","i","result","provider","ProviderName","tagName","layoutManager","tv","className","Comment","IsHashMatch","Name","Format","DownloadCount","reload","itemId","onGetItem","item","fillSubtitleList","subs","MediaStreams","filter","s","Type","map","itemHtml","Path","Index","DisplayTitle","join","elem","file","index","Math","max","lastIndexOf","substring","getItem","getCurrentUserId","onSearchSubmit","e","lang","this","value","dom","parentWithClass","preventDefault","onSubtitleListClick","btnDelete","target","getAttribute","deleteLocalSubtitle","msg","_ref2","confirm","title","text","confirmText","primary","onSubtitleResultsClick","subtitleId","btnOptions","showDownloadOptions","button","items","push","name","_ref3","positionTo","btnDownload","centerFocus","horiz","on","_ref4","scrollHelper","fn","showEditorInternal","serverId","template","dialogOptions","removeOnClose","scrollY","size","dlg","dialogHelper","createDialog","translateHtml","addEventListener","btnSubmit","editorContent","getCultures","languages","fillLanguages","selectLanguage","l","ThreeLetterISOLanguageName","DisplayName","lastLanguage","getCurrentUser","user","Configuration","SubtitleLanguagePreference","close","resolve","reject","open","_default","showEditor","_ref5"],"mappings":"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","file":"subtitleeditor.js","sourcesContent":["import dialogHelper from 'dialogHelper';\nimport layoutManager from 'layoutManager';\nimport globalize from 'globalize';\nimport * as userSettings from 'userSettings';\nimport connectionManager from 'connectionManager';\nimport loading from 'loading';\nimport focusManager from 'focusManager';\nimport dom from 'dom';\nimport 'emby-select';\nimport 'listViewStyle';\nimport 'paper-icon-button-light';\nimport 'css!./../formdialog';\nimport 'material-icons';\nimport 'css!./subtitleeditor';\nimport 'emby-button';\nimport 'flexStyles';\n\nlet currentItem;\nlet hasChanges;\n\nfunction downloadRemoteSubtitles(context, id) {\n    let url = 'Items/' + currentItem.Id + '/RemoteSearch/Subtitles/' + id;\n\n    let apiClient = connectionManager.getApiClient(currentItem.ServerId);\n    apiClient.ajax({\n\n        type: 'POST',\n        url: apiClient.getUrl(url)\n\n    }).then(function () {\n        hasChanges = true;\n\n        import('toast').then(({default: toast}) => {\n            toast(globalize.translate('MessageDownloadQueued'));\n        });\n\n        focusManager.autoFocus(context);\n    });\n}\n\nfunction deleteLocalSubtitle(context, index) {\n    let msg = globalize.translate('MessageAreYouSureDeleteSubtitles');\n\n    import('confirm').then(({default: confirm}) => {\n        confirm({\n\n            title: globalize.translate('ConfirmDeletion'),\n            text: msg,\n            confirmText: globalize.translate('Delete'),\n            primary: 'delete'\n\n        }).then(function () {\n            loading.show();\n\n            let itemId = currentItem.Id;\n            let url = 'Videos/' + itemId + '/Subtitles/' + index;\n\n            let apiClient = connectionManager.getApiClient(currentItem.ServerId);\n\n            apiClient.ajax({\n\n                type: 'DELETE',\n                url: apiClient.getUrl(url)\n\n            }).then(function () {\n                hasChanges = true;\n                reload(context, apiClient, itemId);\n            });\n        });\n    });\n}\n\nfunction fillSubtitleList(context, item) {\n    let streams = item.MediaStreams || [];\n\n    let subs = streams.filter(function (s) {\n        return s.Type === 'Subtitle';\n    });\n\n    let html = '';\n\n    if (subs.length) {\n        html += '<h2>' + globalize.translate('MySubtitles') + '</h2>';\n\n        html += '<div>';\n\n        html += subs.map(function (s) {\n            let itemHtml = '';\n\n            let tagName = layoutManager.tv ? 'button' : 'div';\n            let className = layoutManager.tv && s.Path ? 'listItem listItem-border btnDelete' : 'listItem listItem-border';\n\n            if (layoutManager.tv) {\n                className += ' listItem-focusscale listItem-button';\n            }\n\n            className += ' listItem-noborder';\n\n            itemHtml += '<' + tagName + ' class=\"' + className + '\" data-index=\"' + s.Index + '\">';\n\n            itemHtml += '<span class=\"listItemIcon material-icons closed_caption\"></span>';\n\n            itemHtml += '<div class=\"listItemBody two-line\">';\n\n            itemHtml += '<div>';\n            itemHtml += s.DisplayTitle || '';\n            itemHtml += '</div>';\n\n            if (s.Path) {\n                itemHtml += '<div class=\"secondary listItemBodyText\">' + (s.Path) + '</div>';\n            }\n\n            itemHtml += '</a>';\n            itemHtml += '</div>';\n\n            if (!layoutManager.tv) {\n                if (s.Path) {\n                    itemHtml += '<button is=\"paper-icon-button-light\" data-index=\"' + s.Index + '\" title=\"' + globalize.translate('Delete') + '\" class=\"btnDelete listItemButton\"><span class=\"material-icons delete\"></span></button>';\n                }\n            }\n\n            itemHtml += '</' + tagName + '>';\n\n            return itemHtml;\n        }).join('');\n\n        html += '</div>';\n    }\n\n    let elem = context.querySelector('.subtitleList');\n\n    if (subs.length) {\n        elem.classList.remove('hide');\n    } else {\n        elem.classList.add('hide');\n    }\n    elem.innerHTML = html;\n}\n\nfunction fillLanguages(context, apiClient, languages) {\n    let selectLanguage = context.querySelector('#selectLanguage');\n\n    selectLanguage.innerHTML = languages.map(function (l) {\n        return '<option value=\"' + l.ThreeLetterISOLanguageName + '\">' + l.DisplayName + '</option>';\n    });\n\n    let lastLanguage = userSettings.get('subtitleeditor-language');\n    if (lastLanguage) {\n        selectLanguage.value = lastLanguage;\n    } else {\n        apiClient.getCurrentUser().then(function (user) {\n            let lang = user.Configuration.SubtitleLanguagePreference;\n\n            if (lang) {\n                selectLanguage.value = lang;\n            }\n        });\n    }\n}\n\nfunction renderSearchResults(context, results) {\n    let lastProvider = '';\n    let html = '';\n\n    if (!results.length) {\n        context.querySelector('.noSearchResults').classList.remove('hide');\n        context.querySelector('.subtitleResults').innerHTML = '';\n        loading.hide();\n        return;\n    }\n\n    context.querySelector('.noSearchResults').classList.add('hide');\n\n    for (let i = 0, length = results.length; i < length; i++) {\n        let result = results[i];\n\n        let provider = result.ProviderName;\n\n        if (provider !== lastProvider) {\n            if (i > 0) {\n                html += '</div>';\n            }\n            html += '<h2>' + provider + '</h2>';\n            html += '<div>';\n            lastProvider = provider;\n        }\n\n        let tagName = layoutManager.tv ? 'button' : 'div';\n        let className = layoutManager.tv ? 'listItem listItem-border btnOptions' : 'listItem listItem-border';\n        if (layoutManager.tv) {\n            className += ' listItem-focusscale listItem-button';\n        }\n\n        html += '<' + tagName + ' class=\"' + className + '\" data-subid=\"' + result.Id + '\">';\n\n        html += '<span class=\"listItemIcon material-icons closed_caption\"></span>';\n\n        let bodyClass = result.Comment || result.IsHashMatch ? 'three-line' : 'two-line';\n\n        html += '<div class=\"listItemBody ' + bodyClass + '\">';\n\n        html += '<div>' + (result.Name) + '</div>';\n        html += '<div class=\"secondary listItemBodyText\">';\n\n        if (result.Format) {\n            html += '<span style=\"margin-right:1em;\">' + globalize.translate('FormatValue', result.Format) + '</span>';\n        }\n\n        if (result.DownloadCount != null) {\n            html += '<span>' + globalize.translate('DownloadsValue', result.DownloadCount) + '</span>';\n        }\n        html += '</div>';\n\n        if (result.Comment) {\n            html += '<div class=\"secondary listItemBodyText\">' + (result.Comment) + '</div>';\n        }\n\n        if (result.IsHashMatch) {\n            html += '<div class=\"secondary listItemBodyText\"><div class=\"inline-flex align-items-center justify-content-center\" style=\"background:#3388cc;color:#fff;padding: .3em 1em;border-radius:1000em;\">' + globalize.translate('PerfectMatch') + '</div></div>';\n        }\n\n        html += '</div>';\n\n        if (!layoutManager.tv) {\n            html += '<button type=\"button\" is=\"paper-icon-button-light\" data-subid=\"' + result.Id + '\" class=\"btnDownload listItemButton\"><span class=\"material-icons file_download\"></span></button>';\n        }\n\n        html += '</' + tagName + '>';\n    }\n\n    if (results.length) {\n        html += '</div>';\n    }\n\n    let elem = context.querySelector('.subtitleResults');\n    elem.innerHTML = html;\n\n    loading.hide();\n}\n\nfunction searchForSubtitles(context, language) {\n    userSettings.set('subtitleeditor-language', language);\n\n    loading.show();\n\n    let apiClient = connectionManager.getApiClient(currentItem.ServerId);\n    let url = apiClient.getUrl('Items/' + currentItem.Id + '/RemoteSearch/Subtitles/' + language);\n\n    apiClient.getJSON(url).then(function (results) {\n        renderSearchResults(context, results);\n    });\n}\n\nfunction reload(context, apiClient, itemId) {\n    context.querySelector('.noSearchResults').classList.add('hide');\n\n    function onGetItem(item) {\n        currentItem = item;\n\n        fillSubtitleList(context, item);\n        let file = item.Path || '';\n        let index = Math.max(file.lastIndexOf('/'), file.lastIndexOf('\\\\'));\n        if (index > -1) {\n            file = file.substring(index + 1);\n        }\n\n        if (file) {\n            context.querySelector('.pathValue').innerHTML = file;\n            context.querySelector('.originalFile').classList.remove('hide');\n        } else {\n            context.querySelector('.pathValue').innerHTML = '';\n            context.querySelector('.originalFile').classList.add('hide');\n        }\n\n        loading.hide();\n    }\n\n    if (typeof itemId === 'string') {\n        apiClient.getItem(apiClient.getCurrentUserId(), itemId).then(onGetItem);\n    } else {\n        onGetItem(itemId);\n    }\n}\n\nfunction onSearchSubmit(e) {\n    let form = this;\n\n    let lang = form.querySelector('#selectLanguage', form).value;\n\n    searchForSubtitles(dom.parentWithClass(form, 'formDialogContent'), lang);\n\n    e.preventDefault();\n    return false;\n}\n\nfunction onSubtitleListClick(e) {\n    let btnDelete = dom.parentWithClass(e.target, 'btnDelete');\n    if (btnDelete) {\n        let index = btnDelete.getAttribute('data-index');\n        let context = dom.parentWithClass(btnDelete, 'subtitleEditorDialog');\n        deleteLocalSubtitle(context, index);\n    }\n}\n\nfunction onSubtitleResultsClick(e) {\n    let subtitleId;\n    let context;\n\n    let btnOptions = dom.parentWithClass(e.target, 'btnOptions');\n    if (btnOptions) {\n        subtitleId = btnOptions.getAttribute('data-subid');\n        context = dom.parentWithClass(btnOptions, 'subtitleEditorDialog');\n        showDownloadOptions(btnOptions, context, subtitleId);\n    }\n\n    let btnDownload = dom.parentWithClass(e.target, 'btnDownload');\n    if (btnDownload) {\n        subtitleId = btnDownload.getAttribute('data-subid');\n        context = dom.parentWithClass(btnDownload, 'subtitleEditorDialog');\n        downloadRemoteSubtitles(context, subtitleId);\n    }\n}\n\nfunction showDownloadOptions(button, context, subtitleId) {\n    let items = [];\n\n    items.push({\n        name: globalize.translate('Download'),\n        id: 'download'\n    });\n\n    import('actionsheet').then(({default: actionsheet}) => {\n        actionsheet.show({\n            items: items,\n            positionTo: button\n\n        }).then(function (id) {\n            switch (id) {\n                case 'download':\n                    downloadRemoteSubtitles(context, subtitleId);\n                    break;\n                default:\n                    break;\n            }\n        });\n    });\n}\n\nfunction centerFocus(elem, horiz, on) {\n    import('scrollHelper').then(({default: scrollHelper}) => {\n        let fn = on ? 'on' : 'off';\n        scrollHelper.centerFocus[fn](elem, horiz);\n    });\n}\n\nfunction showEditorInternal(itemId, serverId, template) {\n    hasChanges = false;\n\n    let apiClient = connectionManager.getApiClient(serverId);\n    return apiClient.getItem(apiClient.getCurrentUserId(), itemId).then(function (item) {\n        let dialogOptions = {\n            removeOnClose: true,\n            scrollY: false\n        };\n\n        if (layoutManager.tv) {\n            dialogOptions.size = 'fullscreen';\n        } else {\n            dialogOptions.size = 'small';\n        }\n\n        let dlg = dialogHelper.createDialog(dialogOptions);\n\n        dlg.classList.add('formDialog');\n        dlg.classList.add('subtitleEditorDialog');\n\n        dlg.innerHTML = globalize.translateHtml(template, 'core');\n\n        dlg.querySelector('.originalSubtitleFileLabel').innerHTML = globalize.translate('File');\n\n        dlg.querySelector('.subtitleSearchForm').addEventListener('submit', onSearchSubmit);\n\n        let btnSubmit = dlg.querySelector('.btnSubmit');\n\n        if (layoutManager.tv) {\n            centerFocus(dlg.querySelector('.formDialogContent'), false, true);\n            dlg.querySelector('.btnSearchSubtitles').classList.add('hide');\n        } else {\n            btnSubmit.classList.add('hide');\n        }\n\n        let editorContent = dlg.querySelector('.formDialogContent');\n\n        dlg.querySelector('.subtitleList').addEventListener('click', onSubtitleListClick);\n        dlg.querySelector('.subtitleResults').addEventListener('click', onSubtitleResultsClick);\n\n        apiClient.getCultures().then(function (languages) {\n            fillLanguages(editorContent, apiClient, languages);\n        });\n\n        dlg.querySelector('.btnCancel').addEventListener('click', function () {\n            dialogHelper.close(dlg);\n        });\n\n        return new Promise(function (resolve, reject) {\n            dlg.addEventListener('close', function () {\n                if (layoutManager.tv) {\n                    centerFocus(dlg.querySelector('.formDialogContent'), false, false);\n                }\n\n                if (hasChanges) {\n                    resolve();\n                } else {\n                    reject();\n                }\n            });\n\n            dialogHelper.open(dlg);\n\n            reload(editorContent, apiClient, item);\n        });\n    });\n}\n\nfunction showEditor(itemId, serverId) {\n    loading.show();\n\n    return new Promise(function (resolve, reject) {\n        import('text!./subtitleeditor.template.html').then(({default: template}) => {\n            showEditorInternal(itemId, serverId, template).then(resolve, reject);\n        });\n    });\n}\n\nexport default {\n    show: showEditor\n};\n"]}