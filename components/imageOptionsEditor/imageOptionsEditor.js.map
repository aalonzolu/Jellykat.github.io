{"version":3,"sources":["components/imageOptionsEditor/imageOptionsEditor.js"],"names":["define","_exports","_globalize","_dom","_dialogHelper","_embyCheckbox","_embySelect","_embyInput","_interopRequireDefault","obj","__esModule","default","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","findImageOptions","imageOptions","type","filter","i","Type","getImageConfig","options","availableOptions","imageType","itemType","ImageOptions","DefaultImageOptions","getDefaultImageConfig","MinWidth","Limit","setVisibilityOfBackdrops","elem","visible","classList","remove","querySelector","setAttribute","add","removeAttribute","loadValues","context","supportedImageTypes","SupportedImageTypes","includes","Array","prototype","forEach","call","querySelectorAll","getAttribute","container","dom","parentWithTag","checked","backdropConfig","screenshotConfig","saveValues","map","c","push","showEditor","_x","_x2","_x3","_showEditor","regeneratorRuntime","mark","_callee","response","template","dlg","wrap","_callee$","_context","prev","next","fetch","sent","text","dialogHelper","createDialog","size","removeOnClose","scrollY","innerHTML","globalize","translateHtml","addEventListener","open","catch","close","stop","Object","defineProperty","editor","_classCallCheck","instance","Constructor","TypeError","show","_default"],"mappings":"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","file":"imageOptionsEditor.js","sourcesContent":["/* eslint-disable indent */\n\n/**\n * Module for image Options Editor.\n * @module components/imageOptionsEditor/imageOptionsEditor\n */\n\nimport globalize from 'globalize';\nimport dom from 'dom';\nimport dialogHelper from 'dialogHelper';\nimport 'emby-checkbox';\nimport 'emby-select';\nimport 'emby-input';\n\n    function getDefaultImageConfig(itemType, type) {\n        return {\n            Type: type,\n            MinWidth: 0,\n            Limit: type === 'Primary' ? 1 : 0\n        };\n    }\n\n    function findImageOptions(imageOptions, type) {\n        return imageOptions.filter(i => {\n            return i.Type == type;\n        })[0];\n    }\n\n    function getImageConfig(options, availableOptions, imageType, itemType) {\n        return findImageOptions(options.ImageOptions || [], imageType) || findImageOptions(availableOptions.DefaultImageOptions || [], imageType) || getDefaultImageConfig(itemType, imageType);\n    }\n\n    function setVisibilityOfBackdrops(elem, visible) {\n        if (visible) {\n            elem.classList.remove('hide');\n            elem.querySelector('input').setAttribute('required', 'required');\n        } else {\n            elem.classList.add('hide');\n            elem.querySelector('input').setAttribute('required', '');\n            elem.querySelector('input').removeAttribute('required');\n        }\n    }\n\n    function loadValues(context, itemType, options, availableOptions) {\n        const supportedImageTypes = availableOptions.SupportedImageTypes || [];\n        setVisibilityOfBackdrops(context.querySelector('.backdropFields'), supportedImageTypes.includes('Backdrop'));\n        setVisibilityOfBackdrops(context.querySelector('.screenshotFields'), supportedImageTypes.includes('Screenshot'));\n        Array.prototype.forEach.call(context.querySelectorAll('.imageType'), i => {\n            const imageType = i.getAttribute('data-imagetype');\n            const container = dom.parentWithTag(i, 'LABEL');\n\n            if (!supportedImageTypes.includes(imageType)) {\n                container.classList.add('hide');\n            } else {\n                container.classList.remove('hide');\n            }\n\n            if (getImageConfig(options, availableOptions, imageType, itemType).Limit) {\n                i.checked = true;\n            } else {\n                i.checked = false;\n            }\n        });\n        const backdropConfig = getImageConfig(options, availableOptions, 'Backdrop', itemType);\n        context.querySelector('#txtMaxBackdrops').value = backdropConfig.Limit;\n        context.querySelector('#txtMinBackdropDownloadWidth').value = backdropConfig.MinWidth;\n        const screenshotConfig = getImageConfig(options, availableOptions, 'Screenshot', itemType);\n        context.querySelector('#txtMaxScreenshots').value = screenshotConfig.Limit;\n        context.querySelector('#txtMinScreenshotDownloadWidth').value = screenshotConfig.MinWidth;\n    }\n\n    function saveValues(context, options) {\n        options.ImageOptions = Array.prototype.map.call(context.querySelectorAll('.imageType:not(.hide)'), c => {\n            return {\n                Type: c.getAttribute('data-imagetype'),\n                Limit: c.checked ? 1 : 0,\n                MinWidth: 0\n            };\n        });\n        options.ImageOptions.push({\n            Type: 'Backdrop',\n            Limit: context.querySelector('#txtMaxBackdrops').value,\n            MinWidth: context.querySelector('#txtMinBackdropDownloadWidth').value\n        });\n        options.ImageOptions.push({\n            Type: 'Screenshot',\n            Limit: context.querySelector('#txtMaxScreenshots').value,\n            MinWidth: context.querySelector('#txtMinScreenshotDownloadWidth').value\n        });\n    }\n\n    async function showEditor(itemType, options, availableOptions) {\n        const response = await fetch('components/imageOptionsEditor/imageOptionsEditor.template.html');\n        const template = await response.text();\n\n        var dlg = dialogHelper.createDialog({\n            size: 'small',\n            removeOnClose: true,\n            scrollY: false\n        });\n        dlg.classList.add('formDialog');\n        dlg.innerHTML = globalize.translateHtml(template);\n        dlg.addEventListener('close', function () {\n            saveValues(dlg, options);\n        });\n        loadValues(dlg, itemType, options, availableOptions);\n        dialogHelper.open(dlg).then(() => {\n            return;\n        }).catch(() => {\n            return;\n        });\n        dlg.querySelector('.btnCancel').addEventListener('click', function () {\n            dialogHelper.close(dlg);\n        });\n    }\n\nexport class editor {\n    constructor() {\n        this.show = showEditor;\n    }\n}\n\n/* eslint-enable indent */\nexport default editor;\n"]}