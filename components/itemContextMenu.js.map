{"version":3,"sources":["components/itemContextMenu.js"],"names":["define","_require","_exports","_apphost","_globalize","_connectionManager","_itemHelper","_appRouter","_playbackManager","_browser","_actionsheet","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","getCommands","options","item","user","canPlay","playbackManager","restrictOptions","browser","operaTv","web0s","Policy","IsAdministrator","commands","MediaType","play","push","name","globalize","translate","id","icon","playAllFromHere","Type","getCurrentPlayer","stopPlayback","clearQueue","canQueue","queue","IsFolder","CollectionType","shuffle","instantMix","itemHelper","isLocalItem","length","divider","supportsAddingToCollection","supportsAddingToPlaylist","playlist","EnableLiveTvManagement","cancelTimer","Status","CanDelete","deleteItem","CanDownload","appHost","supports","canEdit","edit","text","canEditImages","editImages","LocationType","editSubtitles","identify","canIdentify","MediaSources","moremediainfo","record","TimerId","canRefreshMetadata","PlaylistItemId","playlistId","collectionId","share","canShare","sync","canSync","openAlbum","AlbumId","openArtist","AlbumArtists","getResolveFunction","resolve","changed","deleted","command","updated","executeCommand","itemId","Id","serverId","ServerId","apiClient","connectionManager","getApiClient","Promise","reject","_resolve","_reject","imported","then","_ref","collectionEditor","items","_ref2","playlistEditor","fileDownloader","downloadHref","getItemDownloadUrl","download","url","title","Name","filename","Path","replace","textAreaCopy","textArea","document","createElement","value","body","appendChild","focus","select","execCommand","_ref3","toast","prompt","removeChild","undefined","navigator","clipboard","writeText","_ref4","catch","_ref5","show","editItem","serverInfo","_ref12","_ref13","_ref14","_ref6","_ref7","_ref8","refresh","_ref16","refreshDialog","itemIds","mode","appRouter","showItem","stop","_ref9","_ref15","navigate","Overview","concat","serverAddress","getRouteUrl","ajax","getUrl","EntryIds","join","type","Ids","deleteTimer","_ref10","recordingHelper","timerId","cancelTimerWithConfirmation","deleteSeriesTimer","_ref11","cancelSeriesTimerWithConfirmation","resume","queueNext","method","startPosition","UserData","PlaybackPositionTicks","ids","ChannelId","startPositionTicks","actionsheet","positionTo","resolveOnClick","_default"],"mappings":"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","file":"itemContextMenu.js","sourcesContent":["import appHost from 'apphost';\nimport globalize from 'globalize';\nimport connectionManager from 'connectionManager';\nimport itemHelper from 'itemHelper';\nimport appRouter from 'appRouter';\nimport playbackManager from 'playbackManager';\nimport browser from 'browser';\nimport actionsheet from 'actionsheet';\n\n/* eslint-disable indent */\n    export function getCommands(options) {\n        const item = options.item;\n        const user = options.user;\n\n        const canPlay = playbackManager.canPlay(item);\n        const restrictOptions = (browser.operaTv || browser.web0s) && !user.Policy.IsAdministrator;\n\n        const commands = [];\n\n        if (canPlay && item.MediaType !== 'Photo') {\n            if (options.play !== false) {\n                commands.push({\n                    name: globalize.translate('Play'),\n                    id: 'resume',\n                    icon: 'play_arrow'\n                });\n            }\n\n            if (options.playAllFromHere && item.Type !== 'Program' && item.Type !== 'TvChannel') {\n                commands.push({\n                    name: globalize.translate('PlayAllFromHere'),\n                    id: 'playallfromhere',\n                    icon: 'play_arrow'\n                });\n            }\n        }\n\n        if (playbackManager.getCurrentPlayer() !== null) {\n            if (options.stopPlayback) {\n                commands.push({\n                    name: globalize.translate('StopPlayback'),\n                    id: 'stopPlayback',\n                    icon: 'stop'\n                });\n            }\n            if (options.clearQueue) {\n                commands.push({\n                    name: globalize.translate('ClearQueue'),\n                    id: 'clearQueue',\n                    icon: 'clear_all'\n                });\n            }\n        }\n\n        if (playbackManager.canQueue(item)) {\n            if (options.queue !== false) {\n                commands.push({\n                    name: globalize.translate('AddToPlayQueue'),\n                    id: 'queue',\n                    icon: 'playlist_add'\n                });\n            }\n\n            if (options.queue !== false) {\n                commands.push({\n                    name: globalize.translate('PlayNext'),\n                    id: 'queuenext',\n                    icon: 'playlist_add'\n                });\n            }\n        }\n\n        if (item.IsFolder || item.Type === 'MusicArtist' || item.Type === 'MusicGenre') {\n            if (item.CollectionType !== 'livetv') {\n                if (options.shuffle !== false) {\n                    commands.push({\n                        name: globalize.translate('Shuffle'),\n                        id: 'shuffle',\n                        icon: 'shuffle'\n                    });\n                }\n            }\n        }\n\n        if (item.MediaType === 'Audio' || item.Type === 'MusicAlbum' || item.Type === 'MusicArtist' || item.Type === 'MusicGenre') {\n            if (options.instantMix !== false && !itemHelper.isLocalItem(item)) {\n                commands.push({\n                    name: globalize.translate('InstantMix'),\n                    id: 'instantmix',\n                    icon: 'explore'\n                });\n            }\n        }\n\n        if (commands.length) {\n            commands.push({\n                divider: true\n            });\n        }\n\n        if (!restrictOptions) {\n            if (itemHelper.supportsAddingToCollection(item)) {\n                commands.push({\n                    name: globalize.translate('AddToCollection'),\n                    id: 'addtocollection',\n                    icon: 'playlist_add'\n                });\n            }\n\n            if (itemHelper.supportsAddingToPlaylist(item) && options.playlist !== false) {\n                commands.push({\n                    name: globalize.translate('AddToPlaylist'),\n                    id: 'addtoplaylist',\n                    icon: 'playlist_add'\n                });\n            }\n        }\n\n        if ((item.Type === 'Timer') && user.Policy.EnableLiveTvManagement && options.cancelTimer !== false) {\n            commands.push({\n                name: globalize.translate('CancelRecording'),\n                id: 'canceltimer',\n                icon: 'cancel'\n            });\n        }\n\n        if ((item.Type === 'Recording' && item.Status === 'InProgress') && user.Policy.EnableLiveTvManagement && options.cancelTimer !== false) {\n            commands.push({\n                name: globalize.translate('CancelRecording'),\n                id: 'canceltimer',\n                icon: 'cancel'\n            });\n        }\n\n        if ((item.Type === 'SeriesTimer') && user.Policy.EnableLiveTvManagement && options.cancelTimer !== false) {\n            commands.push({\n                name: globalize.translate('CancelSeries'),\n                id: 'cancelseriestimer',\n                icon: 'cancel'\n            });\n        }\n\n        if (item.CanDelete && options.deleteItem !== false) {\n            if (item.Type === 'Playlist' || item.Type === 'BoxSet') {\n                commands.push({\n                    name: globalize.translate('Delete'),\n                    id: 'delete',\n                    icon: 'delete'\n                });\n            } else {\n                commands.push({\n                    name: globalize.translate('DeleteMedia'),\n                    id: 'delete',\n                    icon: 'delete'\n                });\n            }\n        }\n\n        // Books are promoted to major download Button and therefor excluded in the context menu\n        if ((item.CanDownload && appHost.supports('filedownload')) && item.Type !== 'Book') {\n            commands.push({\n                name: globalize.translate('Download'),\n                id: 'download',\n                icon: 'file_download'\n            });\n\n            commands.push({\n                name: globalize.translate('CopyStreamURL'),\n                id: 'copy-stream',\n                icon: 'content_copy'\n            });\n        }\n\n        if (commands.length) {\n            commands.push({\n                divider: true\n            });\n        }\n\n        const canEdit = itemHelper.canEdit(user, item);\n        if (canEdit) {\n            if (options.edit !== false && item.Type !== 'SeriesTimer') {\n                const text = (item.Type === 'Timer' || item.Type === 'SeriesTimer') ? globalize.translate('Edit') : globalize.translate('EditMetadata');\n                commands.push({\n                    name: text,\n                    id: 'edit',\n                    icon: 'edit'\n                });\n            }\n        }\n\n        if (itemHelper.canEditImages(user, item)) {\n            if (options.editImages !== false) {\n                commands.push({\n                    name: globalize.translate('EditImages'),\n                    id: 'editimages',\n                    icon: 'image'\n                });\n            }\n        }\n\n        if (canEdit) {\n            if (item.MediaType === 'Video' && item.Type !== 'TvChannel' && item.Type !== 'Program' && item.LocationType !== 'Virtual' && !(item.Type === 'Recording' && item.Status !== 'Completed')) {\n                if (options.editSubtitles !== false) {\n                    commands.push({\n                        name: globalize.translate('EditSubtitles'),\n                        id: 'editsubtitles',\n                        icon: 'closed_caption'\n                    });\n                }\n            }\n        }\n\n        if (options.identify !== false) {\n            if (itemHelper.canIdentify(user, item)) {\n                commands.push({\n                    name: globalize.translate('Identify'),\n                    id: 'identify',\n                    icon: 'edit'\n                });\n            }\n        }\n\n        if (item.MediaSources) {\n            if (options.moremediainfo !== false) {\n                commands.push({\n                    name: globalize.translate('MoreMediaInfo'),\n                    id: 'moremediainfo',\n                    icon: 'info'\n                });\n            }\n        }\n\n        if (item.Type === 'Program' && options.record !== false) {\n            if (item.TimerId) {\n                commands.push({\n                    name: globalize.translate('ManageRecording'),\n                    id: 'record',\n                    icon: 'fiber_manual_record'\n                });\n            }\n        }\n\n        if (item.Type === 'Program' && options.record !== false) {\n            if (!item.TimerId) {\n                commands.push({\n                    name: globalize.translate('Record'),\n                    id: 'record',\n                    icon: 'fiber_manual_record'\n                });\n            }\n        }\n\n        if (itemHelper.canRefreshMetadata(item, user)) {\n            commands.push({\n                name: globalize.translate('RefreshMetadata'),\n                id: 'refresh',\n                icon: 'refresh'\n            });\n        }\n\n        if (item.PlaylistItemId && options.playlistId) {\n            commands.push({\n                name: globalize.translate('RemoveFromPlaylist'),\n                id: 'removefromplaylist',\n                icon: 'remove'\n            });\n        }\n\n        if (options.collectionId) {\n            commands.push({\n                name: globalize.translate('RemoveFromCollection'),\n                id: 'removefromcollection',\n                icon: 'remove'\n            });\n        }\n\n        if (!restrictOptions) {\n            if (options.share === true) {\n                if (itemHelper.canShare(item, user)) {\n                    commands.push({\n                        name: globalize.translate('Share'),\n                        id: 'share',\n                        icon: 'share'\n                    });\n                }\n            }\n        }\n\n        if (options.sync !== false) {\n            if (itemHelper.canSync(user, item)) {\n                commands.push({\n                    name: globalize.translate('Sync'),\n                    id: 'sync',\n                    icon: 'sync'\n                });\n            }\n        }\n\n        if (options.openAlbum !== false && item.AlbumId && item.MediaType !== 'Photo') {\n            commands.push({\n                name: globalize.translate('ViewAlbum'),\n                id: 'album',\n                icon: 'album'\n            });\n        }\n        // Show Album Artist by default, as a song can have multiple artists, which specific one would this option refer to?\n        // Although some albums can have multiple artists, it's not as common as songs.\n        if (options.openArtist !== false && item.AlbumArtists && item.AlbumArtists.length) {\n            commands.push({\n                name: globalize.translate('ViewAlbumArtist'),\n                id: 'artist',\n                icon: 'person'\n            });\n        }\n\n        return commands;\n    }\n\n    function getResolveFunction(resolve, id, changed, deleted) {\n        return function () {\n            resolve({\n                command: id,\n                updated: changed,\n                deleted: deleted\n            });\n        };\n    }\n\n    function executeCommand(item, id, options) {\n        const itemId = item.Id;\n        const serverId = item.ServerId;\n        const apiClient = connectionManager.getApiClient(serverId);\n\n        return new Promise(function (resolve, reject) {\n            switch (id) {\n                case 'addtocollection':\n                    import('collectionEditor').then(({default: collectionEditor}) => {\n                        new collectionEditor({\n                            items: [itemId],\n                            serverId: serverId\n                        }).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case 'addtoplaylist':\n                    import('playlistEditor').then(({default: playlistEditor}) => {\n                        new playlistEditor({\n                            items: [itemId],\n                            serverId: serverId\n                        }).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case 'download':\n                    import('fileDownloader').then((fileDownloader) => {\n                        const downloadHref = apiClient.getItemDownloadUrl(itemId);\n                        fileDownloader.download([{\n                            url: downloadHref,\n                            itemId: itemId,\n                            serverId: serverId,\n                            title: item.Name,\n                            filename: item.Path.replace(/^.*[\\\\\\/]/, '')\n                        }]);\n                        getResolveFunction(getResolveFunction(resolve, id), id)();\n                    });\n                    break;\n                case 'copy-stream': {\n                    const downloadHref = apiClient.getItemDownloadUrl(itemId);\n                    const textAreaCopy = function () {\n                        const textArea = document.createElement('textarea');\n                        textArea.value = downloadHref;\n                        document.body.appendChild(textArea);\n                        textArea.focus();\n                        textArea.select();\n\n                        if (document.execCommand('copy')) {\n                            import('toast').then(({default: toast}) => {\n                                toast(globalize.translate('CopyStreamURLSuccess'));\n                            });\n                        } else {\n                            prompt(globalize.translate('CopyStreamURL'), downloadHref);\n                        }\n                        document.body.removeChild(textArea);\n                    };\n\n                    /* eslint-disable-next-line compat/compat */\n                    if (navigator.clipboard === undefined) {\n                        textAreaCopy();\n                    } else {\n                        /* eslint-disable-next-line compat/compat */\n                        navigator.clipboard.writeText(downloadHref).then(function () {\n                            import('toast').then(({default: toast}) => {\n                                toast(globalize.translate('CopyStreamURLSuccess'));\n                            });\n                        }).catch(function () {\n                            textAreaCopy();\n                        });\n                    }\n                    getResolveFunction(resolve, id)();\n                    break;\n                }\n                case 'editsubtitles':\n                    import('subtitleEditor').then(({default: subtitleEditor}) => {\n                        subtitleEditor.show(itemId, serverId).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case 'edit':\n                    editItem(apiClient, item).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    break;\n                case 'editimages':\n                    import('imageEditor').then(({default: imageEditor}) => {\n                        imageEditor.show({\n                            itemId: itemId,\n                            serverId: serverId\n                        }).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case 'identify':\n                    import('itemIdentifier').then(({default: itemIdentifier}) => {\n                        itemIdentifier.show(itemId, serverId).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case 'moremediainfo':\n                    import('itemMediaInfo').then(({default: itemMediaInfo}) => {\n                        itemMediaInfo.show(itemId, serverId).then(getResolveFunction(resolve, id), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case 'refresh':\n                    refresh(apiClient, item);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'open':\n                    appRouter.showItem(item);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'play':\n                    play(item, false);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'resume':\n                    play(item, true);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'queue':\n                    play(item, false, true);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'queuenext':\n                    play(item, false, true, true);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'stopPlayback':\n                    playbackManager.stop();\n                    break;\n                case 'clearQueue':\n                    playbackManager.clearQueue();\n                    break;\n                case 'record':\n                    import('recordingCreator').then(({default: recordingCreator}) => {\n                        recordingCreator.show(itemId, serverId).then(getResolveFunction(resolve, id, true), getResolveFunction(resolve, id));\n                    });\n                    break;\n                case 'shuffle':\n                    playbackManager.shuffle(item);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'instantmix':\n                    playbackManager.instantMix(item);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'delete':\n                    deleteItem(apiClient, item).then(getResolveFunction(resolve, id, true, true), getResolveFunction(resolve, id));\n                    break;\n                case 'share':\n                    navigator.share({\n                        title: item.Name,\n                        text: item.Overview,\n                        url: `${apiClient.serverAddress()}/web/index.html#!/${appRouter.getRouteUrl(item)}`\n                    });\n                    break;\n                case 'album':\n                    appRouter.showItem(item.AlbumId, item.ServerId);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'artist':\n                    appRouter.showItem(item.AlbumArtists[0].Id, item.ServerId);\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'playallfromhere':\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'queueallfromhere':\n                    getResolveFunction(resolve, id)();\n                    break;\n                case 'removefromplaylist':\n                    apiClient.ajax({\n                        url: apiClient.getUrl('Playlists/' + options.playlistId + '/Items', {\n                            EntryIds: [item.PlaylistItemId].join(',')\n                        }),\n                        type: 'DELETE'\n                    }).then(function () {\n                        getResolveFunction(resolve, id, true)();\n                    });\n                    break;\n                case 'removefromcollection':\n                    apiClient.ajax({\n                        type: 'DELETE',\n                        url: apiClient.getUrl('Collections/' + options.collectionId + '/Items', {\n\n                            Ids: [item.Id].join(',')\n                        })\n                    }).then(function () {\n                        getResolveFunction(resolve, id, true)();\n                    });\n                    break;\n                case 'canceltimer':\n                    deleteTimer(apiClient, item, resolve, id);\n                    break;\n                case 'cancelseriestimer':\n                    deleteSeriesTimer(apiClient, item, resolve, id);\n                    break;\n                default:\n                    reject();\n                    break;\n            }\n        });\n    }\n\n    function deleteTimer(apiClient, item, resolve, command) {\n        import('recordingHelper').then(({default: recordingHelper}) => {\n            const timerId = item.TimerId || item.Id;\n            recordingHelper.cancelTimerWithConfirmation(timerId, item.ServerId).then(function () {\n                getResolveFunction(resolve, command, true)();\n            });\n        });\n    }\n\n    function deleteSeriesTimer(apiClient, item, resolve, command) {\n        import('recordingHelper').then(({default: recordingHelper}) => {\n            recordingHelper.cancelSeriesTimerWithConfirmation(item.Id, item.ServerId).then(function () {\n                getResolveFunction(resolve, command, true)();\n            });\n        });\n    }\n\n    function play(item, resume, queue, queueNext) {\n        const method = queue ? (queueNext ? 'queueNext' : 'queue') : 'play';\n\n        let startPosition = 0;\n        if (resume && item.UserData && item.UserData.PlaybackPositionTicks) {\n            startPosition = item.UserData.PlaybackPositionTicks;\n        }\n\n        if (item.Type === 'Program') {\n            playbackManager[method]({\n                ids: [item.ChannelId],\n                startPositionTicks: startPosition,\n                serverId: item.ServerId\n            });\n        } else {\n            playbackManager[method]({\n                items: [item],\n                startPositionTicks: startPosition\n            });\n        }\n    }\n\n    function editItem(apiClient, item) {\n        return new Promise(function (resolve, reject) {\n            const serverId = apiClient.serverInfo().Id;\n\n            if (item.Type === 'Timer') {\n                import('recordingEditor').then(({default: recordingEditor}) => {\n                    recordingEditor.show(item.Id, serverId).then(resolve, reject);\n                });\n            } else if (item.Type === 'SeriesTimer') {\n                import('seriesRecordingEditor').then(({default: recordingEditor}) => {\n                    recordingEditor.show(item.Id, serverId).then(resolve, reject);\n                });\n            } else {\n                import('metadataEditor').then(({default: metadataEditor}) => {\n                    metadataEditor.show(item.Id, serverId).then(resolve, reject);\n                });\n            }\n        });\n    }\n\n    function deleteItem(apiClient, item) {\n        return new Promise(function (resolve, reject) {\n            import('deleteHelper').then(({default: deleteHelper}) => {\n                deleteHelper.deleteItem({\n                    item: item,\n                    navigate: false\n                }).then(function () {\n                    resolve(true);\n                }, reject);\n            });\n        });\n    }\n\n    function refresh(apiClient, item) {\n        import('refreshDialog').then(({default: refreshDialog}) => {\n            new refreshDialog({\n                itemIds: [item.Id],\n                serverId: apiClient.serverInfo().Id,\n                mode: item.Type === 'CollectionFolder' ? 'scan' : null\n            }).show();\n        });\n    }\n\n    export function show(options) {\n        const commands = getCommands(options);\n        if (!commands.length) {\n            return Promise.reject();\n        }\n\n        return actionsheet.show({\n            items: commands,\n            positionTo: options.positionTo,\n            resolveOnClick: ['share']\n        }).then(function (id) {\n            return executeCommand(options.item, id, options);\n        });\n    }\n\n/* eslint-enable indent */\n\nexport default {\n    getCommands: getCommands,\n    show: show\n};\n"]}