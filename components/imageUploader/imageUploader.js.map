{"version":3,"sources":["components/imageUploader/imageUploader.js"],"names":["define","_require","_exports","_dialogHelper","_connectionManager","_dom","_loading","_scrollHelper","_layoutManager","_globalize","_embyButton","_embySelect","_formDialogStyle","_style","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","currentItemId","currentServerId","currentFile","value","show","hasChanges","onFileReaderError","evt","loading","hide","target","error","code","NOT_FOUND_ERR","Promise","_resolve","_reject","imported","then","_ref","toast","globalize","translate","ABORT_ERR","_ref2","onSubmit","e","file","type","startsWith","_ref3","preventDefault","dlg","dom","parentWithClass","this","imageType","querySelector","_ref4","connectionManager","getApiClient","uploadItemImage","dialogHelper","close","initEditor","page","addEventListener","setFiles","files","match","innerHTML","classList","add","theFile","reader","FileReader","onerror","onloadstart","onabort","console","debug","onload","html","result","escape","name","join","remove","readAsDataURL","click","options","resolve","showEditor","_ref5","template","itemId","serverId","dialogOptions","removeOnClose","layoutManager","tv","size","createDialog","translateHtml","scrollHelper","centerFocus","on","off","open","_default"],"mappings":"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","file":"imageUploader.js","sourcesContent":["/* eslint-disable indent */\n\n/**\n * Module for imageUploader.\n * @module components/imageUploader/imageUploader\n */\n\nimport dialogHelper from 'dialogHelper';\nimport connectionManager from 'connectionManager';\nimport dom from 'dom';\nimport loading from 'loading';\nimport scrollHelper from 'scrollHelper';\nimport layoutManager from 'layoutManager';\nimport globalize from 'globalize';\nimport 'emby-button';\nimport 'emby-select';\nimport 'formDialogStyle';\nimport 'css!./style';\n\n    let currentItemId;\n    let currentServerId;\n    let currentFile;\n    let hasChanges = false;\n\n    function onFileReaderError(evt) {\n        loading.hide();\n\n        switch (evt.target.error.code) {\n            case evt.target.error.NOT_FOUND_ERR:\n                import('toast').then(({default: toast}) => {\n                    toast(globalize.translate('MessageFileReadError'));\n                });\n                break;\n            case evt.target.error.ABORT_ERR:\n                break; // noop\n            default:\n                import('toast').then(({default: toast}) => {\n                    toast(globalize.translate('MessageFileReadError'));\n                });\n                break;\n        }\n    }\n\n    function setFiles(page, files) {\n        const file = files[0];\n\n        if (!file || !file.type.match('image.*')) {\n            page.querySelector('#imageOutput').innerHTML = '';\n            page.querySelector('#fldUpload').classList.add('hide');\n            currentFile = null;\n            return;\n        }\n\n        currentFile = file;\n\n        const reader = new FileReader();\n\n        reader.onerror = onFileReaderError;\n        reader.onloadstart = () => {\n            page.querySelector('#fldUpload').classList.add('hide');\n        };\n        reader.onabort = () => {\n            loading.hide();\n            console.debug('File read cancelled');\n        };\n\n        // Closure to capture the file information.\n        reader.onload = (theFile => {\n            return e => {\n                // Render thumbnail.\n                const html = ['<img style=\"max-width:100%;max-height:100%;\" src=\"', e.target.result, '\" title=\"', escape(theFile.name), '\"/>'].join('');\n\n                page.querySelector('#imageOutput').innerHTML = html;\n                page.querySelector('#dropImageText').classList.add('hide');\n                page.querySelector('#fldUpload').classList.remove('hide');\n            };\n        })(file);\n\n        // Read in the image file as a data URL.\n        reader.readAsDataURL(file);\n    }\n\n    function onSubmit(e) {\n        const file = currentFile;\n\n        if (!file) {\n            return false;\n        }\n\n        if (!file.type.startsWith('image/')) {\n            import('toast').then(({default: toast}) => {\n                toast(globalize.translate('MessageImageFileTypeAllowed'));\n            });\n            e.preventDefault();\n            return false;\n        }\n\n        loading.show();\n\n        const dlg = dom.parentWithClass(this, 'dialog');\n\n        const imageType = dlg.querySelector('#selectImageType').value;\n        if (imageType === 'None') {\n            import('toast').then(({default: toast}) => {\n                toast(globalize.translate('MessageImageTypeNotSelected'));\n            });\n            e.preventDefault();\n            return false;\n        }\n\n        connectionManager.getApiClient(currentServerId).uploadItemImage(currentItemId, imageType, file).then(() => {\n            dlg.querySelector('#uploadImage').value = '';\n\n            loading.hide();\n            hasChanges = true;\n            dialogHelper.close(dlg);\n        });\n\n        e.preventDefault();\n        return false;\n    }\n\n    function initEditor(page) {\n        page.querySelector('form').addEventListener('submit', onSubmit);\n\n        page.querySelector('#uploadImage').addEventListener('change', function () {\n            setFiles(page, this.files);\n        });\n\n        page.querySelector('.btnBrowse').addEventListener('click', () => {\n            page.querySelector('#uploadImage').click();\n        });\n    }\n\n    function showEditor(options, resolve) {\n        options = options || {};\n\n        return import('text!./imageUploader.template.html').then(({default: template}) => {\n            currentItemId = options.itemId;\n            currentServerId = options.serverId;\n\n            const dialogOptions = {\n                removeOnClose: true\n            };\n\n            if (layoutManager.tv) {\n                dialogOptions.size = 'fullscreen';\n            } else {\n                dialogOptions.size = 'small';\n            }\n\n            const dlg = dialogHelper.createDialog(dialogOptions);\n\n            dlg.classList.add('formDialog');\n\n            dlg.innerHTML = globalize.translateHtml(template, 'core');\n\n            if (layoutManager.tv) {\n                scrollHelper.centerFocus.on(dlg, false);\n            }\n\n            // Has to be assigned a z-index after the call to .open()\n            dlg.addEventListener('close', () => {\n                if (layoutManager.tv) {\n                    scrollHelper.centerFocus.off(dlg, false);\n                }\n\n                loading.hide();\n                resolve(hasChanges);\n            });\n\n            dialogHelper.open(dlg);\n\n            initEditor(dlg);\n\n            dlg.querySelector('#selectImageType').value = options.imageType || 'Primary';\n\n            dlg.querySelector('.btnCancel').addEventListener('click', () => {\n                dialogHelper.close(dlg);\n            });\n        });\n    }\n\n    export function show(options) {\n        return new Promise(resolve => {\n            hasChanges = false;\n\n            showEditor(options, resolve);\n        });\n    }\n\n/* eslint-enable indent */\nexport default {\n    show: show\n};\n"]}