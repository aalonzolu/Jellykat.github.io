{"version":3,"sources":["components/notifications/notifications.js"],"names":["define","_serverNotifications","_playbackManager","_events","_globalize","_interopRequireDefault","obj","__esModule","default","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","from","test","length","i","F","s","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","onOneDocumentClick","document","removeEventListener","window","Notification","permission","requestPermission","serviceWorkerRegistration","resetRegistration","serviceWorker","navigator","ready","then","registration","showNonPersistentNotification","title","options","timeoutMs","notif","show","closeAfter","notification","setTimeout","close","cancel","actions","showNotification","apiClient","data","serverId","serverInfo","Id","icon","getIconUrl","badge","showPersistentNotification","showNewItemNotification","item","playbackManager","isPlayingLocally","body","Name","SeriesName","Type","vibrate","tag","imageTags","ImageTags","Primary","getScaledImageUrl","width","type","showPackageInstallNotification","installation","status","getCurrentUser","user","Policy","IsAdministrator","globalize","translate","Version","action","id","percentComplete","Math","round","PercentComplete","addEventListener","events","on","serverNotifications","onLibraryChanged","newItems","ItemsAdded","getItems","getCurrentUserId","Recursive","Limit","Filters","SortBy","SortOrder","Ids","join","MediaTypes","EnableTotalRecordCount","result","_step","_iterator","Items"],"mappings":"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","file":"notifications.js","sourcesContent":["import serverNotifications from 'serverNotifications';\nimport playbackManager from 'playbackManager';\nimport events from 'events';\nimport globalize from 'globalize';\n\nfunction onOneDocumentClick() {\n    document.removeEventListener('click', onOneDocumentClick);\n    document.removeEventListener('keydown', onOneDocumentClick);\n\n    // don't request notification permissions if they're already granted or denied\n    if (window.Notification && window.Notification.permission === 'default') {\n        /* eslint-disable-next-line compat/compat */\n        Notification.requestPermission();\n    }\n}\n\ndocument.addEventListener('click', onOneDocumentClick);\ndocument.addEventListener('keydown', onOneDocumentClick);\n\nlet serviceWorkerRegistration;\n\nfunction closeAfter(notification, timeoutMs) {\n    setTimeout(function () {\n        if (notification.close) {\n            notification.close();\n        } else if (notification.cancel) {\n            notification.cancel();\n        }\n    }, timeoutMs);\n}\n\nfunction resetRegistration() {\n    /* eslint-disable-next-line compat/compat */\n    let serviceWorker = navigator.serviceWorker;\n    if (serviceWorker) {\n        serviceWorker.ready.then(function (registration) {\n            serviceWorkerRegistration = registration;\n        });\n    }\n}\n\nresetRegistration();\n\nfunction showPersistentNotification(title, options, timeoutMs) {\n    serviceWorkerRegistration.showNotification(title, options);\n}\n\nfunction showNonPersistentNotification(title, options, timeoutMs) {\n    try {\n        let notif = new Notification(title, options); /* eslint-disable-line compat/compat */\n\n        if (notif.show) {\n            notif.show();\n        }\n\n        if (timeoutMs) {\n            closeAfter(notif, timeoutMs);\n        }\n    } catch (err) {\n        if (options.actions) {\n            options.actions = [];\n            showNonPersistentNotification(title, options, timeoutMs);\n        } else {\n            throw err;\n        }\n    }\n}\n\nfunction showNotification(options, timeoutMs, apiClient) {\n    let title = options.title;\n\n    options.data = options.data || {};\n    options.data.serverId = apiClient.serverInfo().Id;\n    options.icon = options.icon || getIconUrl();\n    options.badge = options.badge || getIconUrl('badge.png');\n\n    resetRegistration();\n\n    if (serviceWorkerRegistration) {\n        showPersistentNotification(title, options, timeoutMs);\n        return;\n    }\n\n    showNonPersistentNotification(title, options, timeoutMs);\n}\n\nfunction showNewItemNotification(item, apiClient) {\n    if (playbackManager.isPlayingLocally(['Video'])) {\n        return;\n    }\n\n    let body = item.Name;\n\n    if (item.SeriesName) {\n        body = item.SeriesName + ' - ' + body;\n    }\n\n    let notification = {\n        title: 'New ' + item.Type,\n        body: body,\n        vibrate: true,\n        tag: 'newItem' + item.Id,\n        data: {}\n    };\n\n    let imageTags = item.ImageTags || {};\n\n    if (imageTags.Primary) {\n        notification.icon = apiClient.getScaledImageUrl(item.Id, {\n            width: 80,\n            tag: imageTags.Primary,\n            type: 'Primary'\n        });\n    }\n\n    showNotification(notification, 15000, apiClient);\n}\n\nfunction onLibraryChanged(data, apiClient) {\n    let newItems = data.ItemsAdded;\n\n    if (!newItems.length) {\n        return;\n    }\n\n    // Don't put a massive number of Id's onto the query string\n    if (newItems.length > 12) {\n        newItems.length = 12;\n    }\n\n    apiClient.getItems(apiClient.getCurrentUserId(), {\n\n        Recursive: true,\n        Limit: 3,\n        Filters: 'IsNotFolder',\n        SortBy: 'DateCreated',\n        SortOrder: 'Descending',\n        Ids: newItems.join(','),\n        MediaTypes: 'Audio,Video',\n        EnableTotalRecordCount: false\n\n    }).then(function (result) {\n        let items = result.Items;\n\n        for (const item of items) {\n            showNewItemNotification(item, apiClient);\n        }\n    });\n}\n\nfunction getIconUrl(name) {\n    name = name || 'notificationicon.png';\n    return './components/notifications/' + name;\n}\n\nfunction showPackageInstallNotification(apiClient, installation, status) {\n    apiClient.getCurrentUser().then(function (user) {\n        if (!user.Policy.IsAdministrator) {\n            return;\n        }\n\n        let notification = {\n            tag: 'install' + installation.Id,\n            data: {}\n        };\n\n        if (status === 'completed') {\n            notification.title = globalize.translate('PackageInstallCompleted', installation.Name, installation.Version);\n            notification.vibrate = true;\n        } else if (status === 'cancelled') {\n            notification.title = globalize.translate('PackageInstallCancelled', installation.Name, installation.Version);\n        } else if (status === 'failed') {\n            notification.title = globalize.translate('PackageInstallFailed', installation.Name, installation.Version);\n            notification.vibrate = true;\n        } else if (status === 'progress') {\n            notification.title = globalize.translate('InstallingPackage', installation.Name, installation.Version);\n\n            notification.actions =\n                [\n                    {\n                        action: 'cancel-install',\n                        title: globalize.translate('ButtonCancel'),\n                        icon: getIconUrl()\n                    }\n                ];\n\n            notification.data.id = installation.id;\n        }\n\n        if (status === 'progress') {\n            let percentComplete = Math.round(installation.PercentComplete || 0);\n\n            notification.body = percentComplete + '% complete.';\n        }\n\n        let timeout = status === 'cancelled' ? 5000 : 0;\n\n        showNotification(notification, timeout, apiClient);\n    });\n}\n\nevents.on(serverNotifications, 'LibraryChanged', function (e, apiClient, data) {\n    onLibraryChanged(data, apiClient);\n});\n\nevents.on(serverNotifications, 'PackageInstallationCompleted', function (e, apiClient, data) {\n    showPackageInstallNotification(apiClient, data, 'completed');\n});\n\nevents.on(serverNotifications, 'PackageInstallationFailed', function (e, apiClient, data) {\n    showPackageInstallNotification(apiClient, data, 'failed');\n});\n\nevents.on(serverNotifications, 'PackageInstallationCancelled', function (e, apiClient, data) {\n    showPackageInstallNotification(apiClient, data, 'cancelled');\n});\n\nevents.on(serverNotifications, 'PackageInstalling', function (e, apiClient, data) {\n    showPackageInstallNotification(apiClient, data, 'progress');\n});\n\nevents.on(serverNotifications, 'ServerShuttingDown', function (e, apiClient, data) {\n    let serverId = apiClient.serverInfo().Id;\n    let notification = {\n        tag: 'restart' + serverId,\n        title: globalize.translate('ServerNameIsShuttingDown', apiClient.serverInfo().Name)\n    };\n    showNotification(notification, 0, apiClient);\n});\n\nevents.on(serverNotifications, 'ServerRestarting', function (e, apiClient, data) {\n    let serverId = apiClient.serverInfo().Id;\n    let notification = {\n        tag: 'restart' + serverId,\n        title: globalize.translate('ServerNameIsRestarting', apiClient.serverInfo().Name)\n    };\n    showNotification(notification, 0, apiClient);\n});\n\nevents.on(serverNotifications, 'RestartRequired', function (e, apiClient) {\n    let serverId = apiClient.serverInfo().Id;\n    let notification = {\n        tag: 'restart' + serverId,\n        title: globalize.translate('PleaseRestartServerName', apiClient.serverInfo().Name)\n    };\n\n    notification.actions =\n        [\n            {\n                action: 'restart',\n                title: globalize.translate('ButtonRestart'),\n                icon: getIconUrl()\n            }\n        ];\n\n    showNotification(notification, 0, apiClient);\n});\n\n"]}