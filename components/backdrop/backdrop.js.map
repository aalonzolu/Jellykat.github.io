{"version":3,"sources":["components/backdrop/backdrop.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","define","_exports","_browser","_connectionManager","_playbackManager","_dom","userSettings","_backdrop","_getRequireWildcardCache","WeakMap","cache","_interopRequireDefault","__esModule","default","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","value","clearBackdrop","externalBackdrop","setBackdrops","setBackdrop","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","call","desc","set","backdropContainer","backgroundContainer","hasInternalBackdrop","hasExternalBackdrop","currentLoadingBackdrop","rotationInterval","Backdrop","_classCallCheck","instance","Constructor","TypeError","this","_createClass","protoProps","staticProps","load","url","parent","existingBackdropImage","img","Image","self","onload","isDestroyed","backdropImage","document","createElement","classList","add","style","backgroundImage","concat","setAttribute","appendChild","enableAnimation","elem","browser","slow","parentNode","removeChild","internalBackdrop","dom","addEventListener","whichAnimationEvent","onAnimationComplete","removeEventListener","once","currentAnimatingElement","src","cancelAnimation","remove","destroy","getBackdropContainer","querySelector","body","insertBefore","firstChild","clearAll","clearRotation","innerHTML","getBackgroundContainer","setBackgroundContainerBackgroundEnabled","enabled","setBackdropImage","getAttribute","getItemImageUrls","item","imageOptions","apiClient","connectionManager","getApiClient","ServerId","BackdropImageTags","map","imgTag","index","getScaledImageUrl","BackdropItemId","Id","assign","type","tag","maxWidth","getScreenWidth","ParentBackdropItemId","ParentBackdropImageTags","getImageUrls","items","list","onImg","push","forEach","currentRotatingImages","currentRotationIndex","enableImageRotation","enableBackdrops","images","startRotation","arraysEqual","a","b","enableRotation","tv","firefox","setInterval","onRotationInterval","playbackManager","isPlayingLocally","newIndex","clearInterval","_default"],"mappings":"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","file":"backdrop.js","sourcesContent":["import browser from 'browser';\nimport connectionManager from 'connectionManager';\nimport playbackManager from 'playbackManager';\nimport dom from 'dom';\nimport * as userSettings from 'userSettings';\nimport 'css!./backdrop';\n\n/* eslint-disable indent */\n\n    function enableAnimation(elem) {\n        if (browser.slow) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function enableRotation() {\n        if (browser.tv) {\n            return false;\n        }\n\n        // Causes high cpu usage\n        if (browser.firefox) {\n            return false;\n        }\n\n        return true;\n    }\n\n    class Backdrop {\n        load(url, parent, existingBackdropImage) {\n            const img = new Image();\n            const self = this;\n\n            img.onload = () => {\n                if (self.isDestroyed) {\n                    return;\n                }\n\n                const backdropImage = document.createElement('div');\n                backdropImage.classList.add('backdropImage');\n                backdropImage.classList.add('displayingBackdropImage');\n                backdropImage.style.backgroundImage = `url('${url}')`;\n                backdropImage.setAttribute('data-url', url);\n\n                backdropImage.classList.add('backdropImageFadeIn');\n                parent.appendChild(backdropImage);\n\n                if (!enableAnimation(backdropImage)) {\n                    if (existingBackdropImage && existingBackdropImage.parentNode) {\n                        existingBackdropImage.parentNode.removeChild(existingBackdropImage);\n                    }\n                    internalBackdrop(true);\n                    return;\n                }\n\n                const onAnimationComplete = () => {\n                    dom.removeEventListener(backdropImage, dom.whichAnimationEvent(), onAnimationComplete, {\n                        once: true\n                    });\n                    if (backdropImage === self.currentAnimatingElement) {\n                        self.currentAnimatingElement = null;\n                    }\n                    if (existingBackdropImage && existingBackdropImage.parentNode) {\n                        existingBackdropImage.parentNode.removeChild(existingBackdropImage);\n                    }\n                };\n\n                dom.addEventListener(backdropImage, dom.whichAnimationEvent(), onAnimationComplete, {\n                    once: true\n                });\n\n                internalBackdrop(true);\n            };\n\n            img.src = url;\n        }\n\n        cancelAnimation() {\n            const elem = this.currentAnimatingElement;\n            if (elem) {\n                elem.classList.remove('backdropImageFadeIn');\n                this.currentAnimatingElement = null;\n            }\n        }\n\n        destroy() {\n            this.isDestroyed = true;\n            this.cancelAnimation();\n        }\n    }\n\n    let backdropContainer;\n    function getBackdropContainer() {\n        if (!backdropContainer) {\n            backdropContainer = document.querySelector('.backdropContainer');\n        }\n\n        if (!backdropContainer) {\n            backdropContainer = document.createElement('div');\n            backdropContainer.classList.add('backdropContainer');\n            document.body.insertBefore(backdropContainer, document.body.firstChild);\n        }\n\n        return backdropContainer;\n    }\n\n    export function clearBackdrop(clearAll) {\n        clearRotation();\n\n        if (currentLoadingBackdrop) {\n            currentLoadingBackdrop.destroy();\n            currentLoadingBackdrop = null;\n        }\n\n        const elem = getBackdropContainer();\n        elem.innerHTML = '';\n\n        if (clearAll) {\n            hasExternalBackdrop = false;\n        }\n\n        internalBackdrop(false);\n    }\n\n    let backgroundContainer;\n    function getBackgroundContainer() {\n        if (!backgroundContainer) {\n            backgroundContainer = document.querySelector('.backgroundContainer');\n        }\n        return backgroundContainer;\n    }\n\n    function setBackgroundContainerBackgroundEnabled() {\n        if (hasInternalBackdrop || hasExternalBackdrop) {\n            getBackgroundContainer().classList.add('withBackdrop');\n        } else {\n            getBackgroundContainer().classList.remove('withBackdrop');\n        }\n    }\n\n    let hasInternalBackdrop;\n    function internalBackdrop(enabled) {\n        hasInternalBackdrop = enabled;\n        setBackgroundContainerBackgroundEnabled();\n    }\n\n    let hasExternalBackdrop;\n    export function externalBackdrop(enabled) {\n        hasExternalBackdrop = enabled;\n        setBackgroundContainerBackgroundEnabled();\n    }\n\n    let currentLoadingBackdrop;\n    function setBackdropImage(url) {\n        if (currentLoadingBackdrop) {\n            currentLoadingBackdrop.destroy();\n            currentLoadingBackdrop = null;\n        }\n\n        const elem = getBackdropContainer();\n        const existingBackdropImage = elem.querySelector('.displayingBackdropImage');\n\n        if (existingBackdropImage && existingBackdropImage.getAttribute('data-url') === url) {\n            if (existingBackdropImage.getAttribute('data-url') === url) {\n                return;\n            }\n            existingBackdropImage.classList.remove('displayingBackdropImage');\n        }\n\n        const instance = new Backdrop();\n        instance.load(url, elem, existingBackdropImage);\n        currentLoadingBackdrop = instance;\n    }\n\n    function getItemImageUrls(item, imageOptions) {\n        imageOptions = imageOptions || {};\n\n        const apiClient = connectionManager.getApiClient(item.ServerId);\n        if (item.BackdropImageTags && item.BackdropImageTags.length > 0) {\n            return item.BackdropImageTags.map((imgTag, index) => {\n                return apiClient.getScaledImageUrl(item.BackdropItemId || item.Id, Object.assign(imageOptions, {\n                    type: 'Backdrop',\n                    tag: imgTag,\n                    maxWidth: dom.getScreenWidth(),\n                    index: index\n                }));\n            });\n        }\n\n        if (item.ParentBackdropItemId && item.ParentBackdropImageTags && item.ParentBackdropImageTags.length) {\n            return item.ParentBackdropImageTags.map((imgTag, index) => {\n                return apiClient.getScaledImageUrl(item.ParentBackdropItemId, Object.assign(imageOptions, {\n                    type: 'Backdrop',\n                    tag: imgTag,\n                    maxWidth: dom.getScreenWidth(),\n                    index: index\n                }));\n            });\n        }\n\n        return [];\n    }\n\n    function getImageUrls(items, imageOptions) {\n        const list = [];\n        const onImg = img => {\n            list.push(img);\n        };\n\n        for (let i = 0, length = items.length; i < length; i++) {\n            const itemImages = getItemImageUrls(items[i], imageOptions);\n            itemImages.forEach(onImg);\n        }\n\n        return list;\n    }\n\n    function arraysEqual(a, b) {\n        if (a === b) {\n            return true;\n        }\n        if (a == null || b == null) {\n            return false;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        // If you don't care about the order of the elements inside\n        // the array, you should sort both arrays here.\n        for (let i = 0; i < a.length; ++i) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function enabled() {\n        return userSettings.enableBackdrops();\n    }\n\n    let rotationInterval;\n    let currentRotatingImages = [];\n    let currentRotationIndex = -1;\n    export function setBackdrops(items, imageOptions, enableImageRotation) {\n        if (enabled()) {\n            const images = getImageUrls(items, imageOptions);\n\n            if (images.length) {\n                startRotation(images, enableImageRotation);\n            } else {\n                clearBackdrop();\n            }\n        }\n    }\n\n    function startRotation(images, enableImageRotation) {\n        if (arraysEqual(images, currentRotatingImages)) {\n            return;\n        }\n\n        clearRotation();\n\n        currentRotatingImages = images;\n        currentRotationIndex = -1;\n\n        if (images.length > 1 && enableImageRotation !== false && enableRotation()) {\n            rotationInterval = setInterval(onRotationInterval, 24000);\n        }\n\n        onRotationInterval();\n    }\n\n    function onRotationInterval() {\n        if (playbackManager.isPlayingLocally(['Video'])) {\n            return;\n        }\n\n        let newIndex = currentRotationIndex + 1;\n        if (newIndex >= currentRotatingImages.length) {\n            newIndex = 0;\n        }\n\n        currentRotationIndex = newIndex;\n        setBackdropImage(currentRotatingImages[newIndex]);\n    }\n\n    function clearRotation() {\n        const interval = rotationInterval;\n        if (interval) {\n            clearInterval(interval);\n        }\n\n        rotationInterval = null;\n        currentRotatingImages = [];\n        currentRotationIndex = -1;\n    }\n\n    export function setBackdrop(url, imageOptions) {\n        if (url && typeof url !== 'string') {\n            url = getImageUrls([url], imageOptions)[0];\n        }\n\n        if (url) {\n            clearRotation();\n            setBackdropImage(url);\n        } else {\n            clearBackdrop();\n        }\n    }\n\n/* eslint-enable indent */\n\nexport default {\n    setBackdrops: setBackdrops,\n    setBackdrop: setBackdrop,\n    clearBackdrop: clearBackdrop,\n    externalBackdrop: externalBackdrop\n};\n"]}