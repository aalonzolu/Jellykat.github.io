{"version":3,"sources":["components/playback/playersettingsmenu.js"],"names":["define","_exports","_connectionManager","_actionsheet","_playbackManager","_globalize","_qualityoptions","_interopRequireDefault","obj","__esModule","default","showWithUser","options","player","user","supportedCommands","playbackManager","getSupportedCommands","menuItems","indexOf","currentAspectRatioId","getAspectRatio","currentAspectRatio","getSupportedAspectRatios","filter","i","id","push","name","globalize","translate","asideText","currentPlaybackRateId","getPlaybackRate","currentPlaybackRate","getSupportedPlaybackRates","Policy","EnableVideoPlaybackTranscoding","secondaryQualityText","getQualitySecondaryText","state","getPlayerState","videoStream","currentMediaSource","MediaStreams","stream","Type","videoWidth","Width","videoHeight","Height","selectedOption","qualityoptions","getVideoQualityOptions","currentMaxBitrate","getMaxStreamingBitrate","isAutomaticBitrateEnabled","enableAutomaticBitrateDetection","enableAuto","o","selected","length","text","autoText","PlayState","PlayMethod","repeatMode","getRepeatMode","RunTimeTicks","suboffset","stats","actionsheet","show","items","positionTo","then","handleSelectedOption","showQualityMenu","btn","map","opt","bitrate","secondaryText","selectedId","parseInt","setMaxStreamingBitrate","maxBitrate","showAspectRatioMenu","currentId","setAspectRatio","Promise","resolve","reject","showPlaybackRateMenu","setPlaybackRate","showRepeatModeMenu","currentValue","mode","setRepeatMode","onOption","currentItem","ServerId","connectionManager","getApiClient","getCurrentUser","Object","defineProperty","value","_default"],"mappings":"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","file":"playersettingsmenu.js","sourcesContent":["import connectionManager from 'connectionManager';\nimport actionsheet from 'actionsheet';\nimport playbackManager from 'playbackManager';\nimport globalize from 'globalize';\nimport qualityoptions from 'qualityoptions';\n\nfunction showQualityMenu(player, btn) {\n    var videoStream = playbackManager.currentMediaSource(player).MediaStreams.filter(function (stream) {\n        return stream.Type === 'Video';\n    })[0];\n    var videoWidth = videoStream ? videoStream.Width : null;\n    var videoHeight = videoStream ? videoStream.Height : null;\n\n    var options = qualityoptions.getVideoQualityOptions({\n        currentMaxBitrate: playbackManager.getMaxStreamingBitrate(player),\n        isAutomaticBitrateEnabled: playbackManager.enableAutomaticBitrateDetection(player),\n        videoWidth: videoWidth,\n        videoHeight: videoHeight,\n        enableAuto: true\n    });\n\n    var menuItems = options.map(function (o) {\n        var opt = {\n            name: o.name,\n            id: o.bitrate,\n            asideText: o.secondaryText\n        };\n\n        if (o.selected) {\n            opt.selected = true;\n        }\n\n        return opt;\n    });\n\n    var selectedId = options.filter(function (o) {\n        return o.selected;\n    });\n\n    selectedId = selectedId.length ? selectedId[0].bitrate : null;\n\n    return actionsheet.show({\n        items: menuItems,\n        positionTo: btn\n    }).then(function (id) {\n        var bitrate = parseInt(id);\n        if (bitrate !== selectedId) {\n            playbackManager.setMaxStreamingBitrate({\n                enableAutomaticBitrateDetection: bitrate ? false : true,\n                maxBitrate: bitrate\n            }, player);\n        }\n    });\n}\n\nfunction showRepeatModeMenu(player, btn) {\n    var menuItems = [];\n    var currentValue = playbackManager.getRepeatMode(player);\n\n    menuItems.push({\n        name: globalize.translate('RepeatAll'),\n        id: 'RepeatAll',\n        selected: currentValue === 'RepeatAll'\n    });\n\n    menuItems.push({\n        name: globalize.translate('RepeatOne'),\n        id: 'RepeatOne',\n        selected: currentValue === 'RepeatOne'\n    });\n\n    menuItems.push({\n        name: globalize.translate('None'),\n        id: 'RepeatNone',\n        selected: currentValue === 'RepeatNone'\n    });\n\n    return actionsheet.show({\n        items: menuItems,\n        positionTo: btn\n    }).then(function (mode) {\n        if (mode) {\n            playbackManager.setRepeatMode(mode, player);\n        }\n    });\n}\n\nfunction getQualitySecondaryText(player) {\n    var state = playbackManager.getPlayerState(player);\n\n    var videoStream = playbackManager.currentMediaSource(player).MediaStreams.filter(function (stream) {\n        return stream.Type === 'Video';\n    })[0];\n\n    var videoWidth = videoStream ? videoStream.Width : null;\n    var videoHeight = videoStream ? videoStream.Height : null;\n\n    var options = qualityoptions.getVideoQualityOptions({\n        currentMaxBitrate: playbackManager.getMaxStreamingBitrate(player),\n        isAutomaticBitrateEnabled: playbackManager.enableAutomaticBitrateDetection(player),\n        videoWidth: videoWidth,\n        videoHeight: videoHeight,\n        enableAuto: true\n    });\n\n    var selectedOption = options.filter(function (o) {\n        return o.selected;\n    });\n\n    if (!selectedOption.length) {\n        return null;\n    }\n\n    selectedOption = selectedOption[0];\n    var text = selectedOption.name;\n\n    if (selectedOption.autoText) {\n        if (state.PlayState && state.PlayState.PlayMethod !== 'Transcode') {\n            text += ' - Direct';\n        } else {\n            text += ' ' + selectedOption.autoText;\n        }\n    }\n\n    return text;\n}\n\nfunction showAspectRatioMenu(player, btn) {\n    // each has a name and id\n    var currentId = playbackManager.getAspectRatio(player);\n    var menuItems = playbackManager.getSupportedAspectRatios(player).map(function (i) {\n        return {\n            id: i.id,\n            name: i.name,\n            selected: i.id === currentId\n        };\n    });\n\n    return actionsheet.show({\n        items: menuItems,\n        positionTo: btn\n    }).then(function (id) {\n        if (id) {\n            playbackManager.setAspectRatio(id, player);\n            return Promise.resolve();\n        }\n\n        return Promise.reject();\n    });\n}\n\nfunction showPlaybackRateMenu(player, btn) {\n    // each has a name and id\n    const currentId = playbackManager.getPlaybackRate(player);\n    const menuItems = playbackManager.getSupportedPlaybackRates(player).map(i => ({\n        id: i.id,\n        name: i.name,\n        selected: i.id === currentId\n    }));\n\n    return actionsheet.show({\n        items: menuItems,\n        positionTo: btn\n    }).then(function (id) {\n        if (id) {\n            playbackManager.setPlaybackRate(id, player);\n            return Promise.resolve();\n        }\n\n        return Promise.reject();\n    });\n}\n\nfunction showWithUser(options, player, user) {\n    var supportedCommands = playbackManager.getSupportedCommands(player);\n\n    var menuItems = [];\n    if (supportedCommands.indexOf('SetAspectRatio') !== -1) {\n        var currentAspectRatioId = playbackManager.getAspectRatio(player);\n        var currentAspectRatio = playbackManager.getSupportedAspectRatios(player).filter(function (i) {\n            return i.id === currentAspectRatioId;\n        })[0];\n\n        menuItems.push({\n            name: globalize.translate('AspectRatio'),\n            id: 'aspectratio',\n            asideText: currentAspectRatio ? currentAspectRatio.name : null\n        });\n    }\n\n    if (supportedCommands.indexOf('PlaybackRate') !== -1) {\n        const currentPlaybackRateId = playbackManager.getPlaybackRate(player);\n        const currentPlaybackRate = playbackManager.getSupportedPlaybackRates(player).filter(i => i.id === currentPlaybackRateId)[0];\n\n        menuItems.push({\n            name: globalize.translate('PlaybackRate'),\n            id: 'playbackrate',\n            asideText: currentPlaybackRate ? currentPlaybackRate.name : null\n        });\n    }\n\n    if (user && user.Policy.EnableVideoPlaybackTranscoding) {\n        var secondaryQualityText = getQualitySecondaryText(player);\n\n        menuItems.push({\n            name: globalize.translate('Quality'),\n            id: 'quality',\n            asideText: secondaryQualityText\n        });\n    }\n\n    var repeatMode = playbackManager.getRepeatMode(player);\n\n    if (supportedCommands.indexOf('SetRepeatMode') !== -1 && playbackManager.currentMediaSource(player).RunTimeTicks) {\n        menuItems.push({\n            name: globalize.translate('RepeatMode'),\n            id: 'repeatmode',\n            asideText: repeatMode === 'RepeatNone' ? globalize.translate('None') : globalize.translate('' + repeatMode)\n        });\n    }\n\n    if (options.suboffset) {\n        menuItems.push({\n            name: globalize.translate('SubtitleOffset'),\n            id: 'suboffset',\n            asideText: null\n        });\n    }\n\n    if (options.stats) {\n        menuItems.push({\n            name: globalize.translate('PlaybackData'),\n            id: 'stats',\n            asideText: null\n        });\n    }\n\n    return actionsheet.show({\n        items: menuItems,\n        positionTo: options.positionTo\n    }).then(function (id) {\n        return handleSelectedOption(id, options, player);\n    });\n}\n\nexport function show(options) {\n    var player = options.player;\n    var currentItem = playbackManager.currentItem(player);\n\n    if (!currentItem || !currentItem.ServerId) {\n        return showWithUser(options, player, null);\n    }\n\n    var apiClient = connectionManager.getApiClient(currentItem.ServerId);\n    return apiClient.getCurrentUser().then(function (user) {\n        return showWithUser(options, player, user);\n    });\n}\n\nfunction handleSelectedOption(id, options, player) {\n    switch (id) {\n        case 'quality':\n            return showQualityMenu(player, options.positionTo);\n        case 'aspectratio':\n            return showAspectRatioMenu(player, options.positionTo);\n        case 'playbackrate':\n            return showPlaybackRateMenu(player, options.positionTo);\n        case 'repeatmode':\n            return showRepeatModeMenu(player, options.positionTo);\n        case 'stats':\n            if (options.onOption) {\n                options.onOption('stats');\n            }\n            return Promise.resolve();\n        case 'suboffset':\n            if (options.onOption) {\n                options.onOption('suboffset');\n            }\n            return Promise.resolve();\n        default:\n            break;\n    }\n\n    return Promise.reject();\n}\n\nexport default {\n    show: show\n};\n"]}