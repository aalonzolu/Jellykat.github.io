{"version":3,"sources":["components/displaySettings/displaySettings.js"],"names":["define","_require","_exports","_browser","_layoutManager","_pluginManager","_apphost","_focusManager","_datetime","_globalize","_loading","_connectionManager","_skinManager","_events","_embySelect","_embyCheckbox","_embyButton","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","call","desc","set","loadForm","context","user","userSettings","appHost","supports","querySelector","classList","remove","add","datetime","supportsLocalization","browser","tizen","web0s","fillThemes","select","skinManager","getThemes","themes","innerHTML","map","t","concat","id","name","join","defaultTheme","find","theme","loadScreensavers","selectScreensaver","options","pluginManager","ofType","plugin","unshift","globalize","translate","o","screensaver","checked","Configuration","DisplayMissingEpisodes","enableThemeSongs","enableThemeVideos","enableFastFadein","enableBlurhash","enableBackdrops","detailsBanner","language","dateTimeLocale","libraryPageSize","layoutManager","getSavedLayout","showOrHideMissingEpisodesField","loading","hide","save","instance","userId","apiClient","enableSaveConfirmation","show","getUser","saveUser","userSettingsInstance","Id","getCurrentUserId","setTheme","setLayout","updateUserConfiguration","_resolve","_reject","imported","_ref","toast","events","trigger","onSubmit","e","connectionManager","getApiClient","serverId","setUserInfo","element","preventDefault","_embed","regeneratorRuntime","mark","_callee","_yield$import","template","wrap","_callee$","_context","prev","next","sent","translateHtml","addEventListener","bind","enableSaveButton","loadData","autoFocus","stop","_default","DisplaySettings","_classCallCheck","Constructor","TypeError","embed","_x","_x2","_createClass","protoProps","staticProps","dataLoaded","focusManager","submit","destroy"],"mappings":"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","file":"displaySettings.js","sourcesContent":["import browser from 'browser';\nimport layoutManager from 'layoutManager';\nimport pluginManager from 'pluginManager';\nimport appHost from 'apphost';\nimport focusManager from 'focusManager';\nimport datetime from 'datetime';\nimport globalize from 'globalize';\nimport loading from 'loading';\nimport connectionManager from 'connectionManager';\nimport skinManager from 'skinManager';\nimport events from 'events';\nimport 'emby-select';\nimport 'emby-checkbox';\nimport 'emby-button';\n\n/* eslint-disable indent */\n\n    function fillThemes(context, userSettings) {\n        const select = context.querySelector('#selectTheme');\n\n        skinManager.getThemes().then(themes => {\n            select.innerHTML = themes.map(t => {\n                return `<option value=\"${t.id}\">${t.name}</option>`;\n            }).join('');\n\n            // get default theme\n            var defaultTheme = themes.find(theme => {\n                return theme.default;\n            });\n\n            // set the current theme\n            select.value = userSettings.theme() || defaultTheme.id;\n        });\n    }\n\n    function loadScreensavers(context, userSettings) {\n        const selectScreensaver = context.querySelector('.selectScreensaver');\n        const options = pluginManager.ofType('screensaver').map(plugin => {\n            return {\n                name: plugin.name,\n                value: plugin.id\n            };\n        });\n\n        options.unshift({\n            name: globalize.translate('None'),\n            value: 'none'\n        });\n\n        selectScreensaver.innerHTML = options.map(o => {\n            return `<option value=\"${o.value}\">${o.name}</option>`;\n        }).join('');\n\n        selectScreensaver.value = userSettings.screensaver();\n\n        if (!selectScreensaver.value) {\n            // TODO: set the default instead of none\n            selectScreensaver.value = 'none';\n        }\n    }\n\n    function showOrHideMissingEpisodesField(context) {\n        if (browser.tizen || browser.web0s) {\n            context.querySelector('.fldDisplayMissingEpisodes').classList.add('hide');\n            return;\n        }\n\n        context.querySelector('.fldDisplayMissingEpisodes').classList.remove('hide');\n    }\n\n    function loadForm(context, user, userSettings) {\n        if (appHost.supports('displaylanguage')) {\n            context.querySelector('.languageSection').classList.remove('hide');\n        } else {\n            context.querySelector('.languageSection').classList.add('hide');\n        }\n\n        if (appHost.supports('displaymode')) {\n            context.querySelector('.fldDisplayMode').classList.remove('hide');\n        } else {\n            context.querySelector('.fldDisplayMode').classList.add('hide');\n        }\n\n        if (appHost.supports('externallinks')) {\n            context.querySelector('.learnHowToContributeContainer').classList.remove('hide');\n        } else {\n            context.querySelector('.learnHowToContributeContainer').classList.add('hide');\n        }\n\n        if (appHost.supports('screensaver')) {\n            context.querySelector('.selectScreensaverContainer').classList.remove('hide');\n        } else {\n            context.querySelector('.selectScreensaverContainer').classList.add('hide');\n        }\n\n        if (datetime.supportsLocalization()) {\n            context.querySelector('.fldDateTimeLocale').classList.remove('hide');\n        } else {\n            context.querySelector('.fldDateTimeLocale').classList.add('hide');\n        }\n\n        if (!browser.tizen && !browser.web0s) {\n            context.querySelector('.fldBackdrops').classList.remove('hide');\n            context.querySelector('.fldThemeSong').classList.remove('hide');\n            context.querySelector('.fldThemeVideo').classList.remove('hide');\n        } else {\n            context.querySelector('.fldBackdrops').classList.add('hide');\n            context.querySelector('.fldThemeSong').classList.add('hide');\n            context.querySelector('.fldThemeVideo').classList.add('hide');\n        }\n\n        fillThemes(context, userSettings);\n        loadScreensavers(context, userSettings);\n\n        context.querySelector('.chkDisplayMissingEpisodes').checked = user.Configuration.DisplayMissingEpisodes || false;\n\n        context.querySelector('#chkThemeSong').checked = userSettings.enableThemeSongs();\n        context.querySelector('#chkThemeVideo').checked = userSettings.enableThemeVideos();\n        context.querySelector('#chkFadein').checked = userSettings.enableFastFadein();\n        context.querySelector('#chkBlurhash').checked = userSettings.enableBlurhash();\n        context.querySelector('#chkBackdrops').checked = userSettings.enableBackdrops();\n        context.querySelector('#chkDetailsBanner').checked = userSettings.detailsBanner();\n\n        context.querySelector('#selectLanguage').value = userSettings.language() || '';\n        context.querySelector('.selectDateTimeLocale').value = userSettings.dateTimeLocale() || '';\n\n        context.querySelector('#txtLibraryPageSize').value = userSettings.libraryPageSize();\n\n        context.querySelector('.selectLayout').value = layoutManager.getSavedLayout() || '';\n\n        showOrHideMissingEpisodesField(context);\n\n        loading.hide();\n    }\n\n    function saveUser(context, user, userSettingsInstance, apiClient) {\n        user.Configuration.DisplayMissingEpisodes = context.querySelector('.chkDisplayMissingEpisodes').checked;\n\n        if (appHost.supports('displaylanguage')) {\n            userSettingsInstance.language(context.querySelector('#selectLanguage').value);\n        }\n\n        userSettingsInstance.dateTimeLocale(context.querySelector('.selectDateTimeLocale').value);\n\n        userSettingsInstance.enableThemeSongs(context.querySelector('#chkThemeSong').checked);\n        userSettingsInstance.enableThemeVideos(context.querySelector('#chkThemeVideo').checked);\n        userSettingsInstance.theme(context.querySelector('#selectTheme').value);\n        userSettingsInstance.screensaver(context.querySelector('.selectScreensaver').value);\n\n        userSettingsInstance.libraryPageSize(context.querySelector('#txtLibraryPageSize').value);\n\n        userSettingsInstance.enableFastFadein(context.querySelector('#chkFadein').checked);\n        userSettingsInstance.enableBlurhash(context.querySelector('#chkBlurhash').checked);\n        userSettingsInstance.enableBackdrops(context.querySelector('#chkBackdrops').checked);\n        userSettingsInstance.detailsBanner(context.querySelector('#chkDetailsBanner').checked);\n\n        if (user.Id === apiClient.getCurrentUserId()) {\n            skinManager.setTheme(userSettingsInstance.theme());\n        }\n\n        layoutManager.setLayout(context.querySelector('.selectLayout').value);\n        return apiClient.updateUserConfiguration(user.Id, user.Configuration);\n    }\n\n    function save(instance, context, userId, userSettings, apiClient, enableSaveConfirmation) {\n        loading.show();\n\n        apiClient.getUser(userId).then(user => {\n            saveUser(context, user, userSettings, apiClient).then(() => {\n                loading.hide();\n                if (enableSaveConfirmation) {\n                    import('toast').then(({default: toast}) => {\n                        toast(globalize.translate('SettingsSaved'));\n                    });\n                }\n                events.trigger(instance, 'saved');\n            }, () => {\n                loading.hide();\n            });\n        });\n    }\n\n    function onSubmit(e) {\n        const self = this;\n        const apiClient = connectionManager.getApiClient(self.options.serverId);\n        const userId = self.options.userId;\n        const userSettings = self.options.userSettings;\n\n        userSettings.setUserInfo(userId, apiClient).then(() => {\n            const enableSaveConfirmation = self.options.enableSaveConfirmation;\n            save(self, self.options.element, userId, userSettings, apiClient, enableSaveConfirmation);\n        });\n\n        // Disable default form submission\n        if (e) {\n            e.preventDefault();\n        }\n        return false;\n    }\n\n    async function embed(options, self) {\n        const { default: template } = await import('text!./displaySettings.template.html');\n        options.element.innerHTML = globalize.translateHtml(template, 'core');\n        options.element.querySelector('form').addEventListener('submit', onSubmit.bind(self));\n        if (options.enableSaveButton) {\n            options.element.querySelector('.btnSave').classList.remove('hide');\n        }\n        self.loadData(options.autoFocus);\n    }\n\n    class DisplaySettings {\n        constructor(options) {\n            this.options = options;\n            embed(options, this);\n        }\n\n        loadData(autoFocus) {\n            const self = this;\n            const context = self.options.element;\n\n            loading.show();\n\n            const userId = self.options.userId;\n            const apiClient = connectionManager.getApiClient(self.options.serverId);\n            const userSettings = self.options.userSettings;\n\n            return apiClient.getUser(userId).then(user => {\n                return userSettings.setUserInfo(userId, apiClient).then(() => {\n                    self.dataLoaded = true;\n                    loadForm(context, user, userSettings);\n                    if (autoFocus) {\n                        focusManager.autoFocus(context);\n                    }\n                });\n            });\n        }\n\n        submit() {\n            onSubmit.call(this);\n        }\n\n        destroy() {\n            this.options = null;\n        }\n    }\n\n/* eslint-enable indent */\nexport default DisplaySettings;\n"]}