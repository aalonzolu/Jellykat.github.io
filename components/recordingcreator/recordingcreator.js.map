{"version":3,"sources":["components/recordingcreator/recordingcreator.js"],"names":["define","_require","_exports","_dialogHelper","_globalize","_layoutManager","_mediaInfo","_connectionManager","_require2","_loading","_scrollHelper","_datetime","_imageLoader","_recordingFields","_events","_embyCheckbox","_embyButton","_embyCollapse","_embyInput","_paperIconButtonLight","_formdialog","_recordingcreator","_materialIcons","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","currentDialog","closeAction","currentRecordingFields","closeDialog","dialogHelper","close","reload","context","programId","serverId","refreshRecordingStateOnly","loading","show","apiClient","connectionManager","getApiClient","promise1","getNewLiveTvTimerDefaults","promise2","getLiveTvProgram","getCurrentUserId","Promise","all","then","responses","program","renderRecording","defaultTimer","imgUrl","getImageUrl","item","imageHeight","imageTags","ImageTags","PrimaryImageTag","Primary","getScaledImageUrl","Id","type","maxHeight","tag","Thumb","imageContainer","querySelector","innerHTML","require","toUrl","split","classList","remove","imageLoader","lazyChildren","add","Name","Genres","join","Overview","formDialogFooter","now","Date","datetime","parseISO8601Date","StartDate","EndDate","mediaInfo","getPrimaryMediaInfoHtml","getSecondaryMediaInfoHtml","hide","defaults","value","_default","showEditor","itemId","resolve","reject","_resolve","_reject","imported","_ref2","template","dialogOptions","removeOnClose","scrollY","layoutManager","tv","size","dlg","createDialog","html","onRecordingChanged","globalize","translateHtml","addEventListener","events","off","executeCloseAction","action","_ref","playbackManager","play","ids","ChannelId","hasChanged","scrollHelper","centerFocus","on","init","recordingFields","parent","open"],"mappings":"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","file":"recordingcreator.js","sourcesContent":["import dialogHelper from 'dialogHelper';\nimport globalize from 'globalize';\nimport layoutManager from 'layoutManager';\nimport mediaInfo from 'mediaInfo';\nimport connectionManager from 'connectionManager';\nimport require from 'require';\nimport loading from 'loading';\nimport scrollHelper from 'scrollHelper';\nimport datetime from 'datetime';\nimport imageLoader from 'imageLoader';\nimport recordingFields from 'recordingFields';\nimport events from 'events';\nimport 'emby-checkbox';\nimport 'emby-button';\nimport 'emby-collapse';\nimport 'emby-input';\nimport 'paper-icon-button-light';\nimport 'css!./../formdialog';\nimport 'css!./recordingcreator';\nimport 'material-icons';\n\nlet currentDialog;\nlet closeAction;\nlet currentRecordingFields;\n\nfunction closeDialog() {\n    dialogHelper.close(currentDialog);\n}\n\nfunction init(context) {\n    context.querySelector('.btnPlay').addEventListener('click', function () {\n        closeAction = 'play';\n        closeDialog();\n    });\n\n    context.querySelector('.btnCancel').addEventListener('click', function () {\n        closeAction = null;\n        closeDialog();\n    });\n}\n\nfunction getImageUrl(item, apiClient, imageHeight) {\n    const imageTags = item.ImageTags || {};\n\n    if (item.PrimaryImageTag) {\n        imageTags.Primary = item.PrimaryImageTag;\n    }\n\n    if (imageTags.Primary) {\n        return apiClient.getScaledImageUrl(item.Id, {\n            type: 'Primary',\n            maxHeight: imageHeight,\n            tag: item.ImageTags.Primary\n        });\n    } else if (imageTags.Thumb) {\n        return apiClient.getScaledImageUrl(item.Id, {\n            type: 'Thumb',\n            maxHeight: imageHeight,\n            tag: item.ImageTags.Thumb\n        });\n    }\n\n    return null;\n}\n\nfunction renderRecording(context, defaultTimer, program, apiClient, refreshRecordingStateOnly) {\n    if (!refreshRecordingStateOnly) {\n        const imgUrl = getImageUrl(program, apiClient, 200);\n        const imageContainer = context.querySelector('.recordingDialog-imageContainer');\n\n        if (imgUrl) {\n            imageContainer.innerHTML = '<img src=\"' + require.toUrl('.').split('?')[0] + '/empty.png\" data-src=\"' + imgUrl + '\" class=\"recordingDialog-img lazy\" />';\n            imageContainer.classList.remove('hide');\n\n            imageLoader.lazyChildren(imageContainer);\n        } else {\n            imageContainer.innerHTML = '';\n            imageContainer.classList.add('hide');\n        }\n\n        context.querySelector('.recordingDialog-itemName').innerHTML = program.Name;\n        context.querySelector('.formDialogHeaderTitle').innerHTML = program.Name;\n        context.querySelector('.itemGenres').innerHTML = (program.Genres || []).join(' / ');\n        context.querySelector('.itemOverview').innerHTML = program.Overview || '';\n\n        const formDialogFooter = context.querySelector('.formDialogFooter');\n        const now = new Date();\n        if (now >= datetime.parseISO8601Date(program.StartDate, true) && now < datetime.parseISO8601Date(program.EndDate, true)) {\n            formDialogFooter.classList.remove('hide');\n        } else {\n            formDialogFooter.classList.add('hide');\n        }\n\n        context.querySelector('.itemMiscInfoPrimary').innerHTML = mediaInfo.getPrimaryMediaInfoHtml(program);\n    }\n\n    context.querySelector('.itemMiscInfoSecondary').innerHTML = mediaInfo.getSecondaryMediaInfoHtml(program, {\n    });\n\n    loading.hide();\n}\n\nfunction reload(context, programId, serverId, refreshRecordingStateOnly) {\n    loading.show();\n\n    const apiClient = connectionManager.getApiClient(serverId);\n\n    const promise1 = apiClient.getNewLiveTvTimerDefaults({ programId: programId });\n    const promise2 = apiClient.getLiveTvProgram(programId, apiClient.getCurrentUserId());\n\n    Promise.all([promise1, promise2]).then(function (responses) {\n        const defaults = responses[0];\n        const program = responses[1];\n\n        renderRecording(context, defaults, program, apiClient, refreshRecordingStateOnly);\n    });\n}\n\nfunction executeCloseAction(action, programId, serverId) {\n    if (action === 'play') {\n        import('playbackManager').then(({ default: playbackManager }) => {\n            const apiClient = connectionManager.getApiClient(serverId);\n\n            apiClient.getLiveTvProgram(programId, apiClient.getCurrentUserId()).then(function (item) {\n                playbackManager.play({\n                    ids: [item.ChannelId],\n                    serverId: serverId\n                });\n            });\n        });\n        return;\n    }\n}\n\nfunction showEditor(itemId, serverId) {\n    return new Promise(function (resolve, reject) {\n        closeAction = null;\n\n        loading.show();\n\n        import('text!./recordingcreator.template.html').then(({ default: template }) => {\n            const dialogOptions = {\n                removeOnClose: true,\n                scrollY: false\n            };\n\n            if (layoutManager.tv) {\n                dialogOptions.size = 'fullscreen';\n            } else {\n                dialogOptions.size = 'small';\n            }\n\n            const dlg = dialogHelper.createDialog(dialogOptions);\n\n            dlg.classList.add('formDialog');\n            dlg.classList.add('recordingDialog');\n\n            let html = '';\n\n            html += globalize.translateHtml(template, 'core');\n\n            dlg.innerHTML = html;\n\n            currentDialog = dlg;\n\n            function onRecordingChanged() {\n                reload(dlg, itemId, serverId, true);\n            }\n\n            dlg.addEventListener('close', function () {\n                events.off(currentRecordingFields, 'recordingchanged', onRecordingChanged);\n                executeCloseAction(closeAction, itemId, serverId);\n\n                if (currentRecordingFields && currentRecordingFields.hasChanged()) {\n                    resolve();\n                } else {\n                    reject();\n                }\n            });\n\n            if (layoutManager.tv) {\n                scrollHelper.centerFocus.on(dlg.querySelector('.formDialogContent'), false);\n            }\n\n            init(dlg);\n\n            reload(dlg, itemId, serverId);\n\n            currentRecordingFields = new recordingFields({\n                parent: dlg.querySelector('.recordingFields'),\n                programId: itemId,\n                serverId: serverId\n            });\n\n            events.on(currentRecordingFields, 'recordingchanged', onRecordingChanged);\n\n            dialogHelper.open(dlg);\n        });\n    });\n}\n\nexport default {\n    show: showEditor\n};\n"]}