{"version":3,"sources":["components/listview/listview.js"],"names":["define","_exports","_itemHelper","_mediaInfo","_indicators","_connectionManager","_layoutManager","_globalize","_datetime","_cardBuilder","_listview","_embyRatingbutton","_embyPlaystatebutton","_interopRequireDefault","obj","__esModule","default","_slicedToArray","arr","i","_arrayWithHoles","Array","isArray","_iterableToArrayLimit","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","len","arr2","getIndex","item","options","index","ParentIndexNumber","globalize","translate","code","sortBy","toLowerCase","indexOf","Type","SortName","Name","toUpperCase","charCodeAt","OfficialRating","CommunityRating","Math","floor","CriticRating","AlbumArtist","getImageUrl","width","itemId","apiClient","connectionManager","getApiClient","ServerId","maxWidth","type","ImageTags","Primary","tag","Id","AlbumId","AlbumPrimaryImageTag","SeriesId","SeriesPrimaryImageTag","ParentPrimaryImageTag","ParentPrimaryImageItemId","getScaledImageUrl","getChannelImageUrl","ChannelId","ChannelPrimaryImageTag","getTextLinesHtml","textlines","isLargeStyle","_step","html","largeTitleTagName","layoutManager","tv","_iterator","_createForOfIteratorHelper","allowArrayLike","it","F","s","e","_e2","f","normalCompletion","didErr","step","_e3","return","entries","_step$value","concat","getRightButtonsHtml","rightButtons","button","id","title","icon","getId","getListViewHtml","items","groupTitle","action","imageSize","enableOverview","clickEntireItem","outerTagName","enableSideMediaInfo","outerHtml","enableContentWrapper","containerAlbumArtistIds","containerAlbumArtists","map","showIndex","itemGroupTitle","cssClass","border","highlight","downloadWidth","playlistItemId","PlaylistItemId","positionTicksData","UserData","PlaybackPositionTicks","collectionIdData","collectionId","playlistIdData","playlistId","mediaTypeData","MediaType","collectionTypeData","CollectionType","channelIdData","IsFolder","dragHandle","image","imgUrl","imageSource","imageClass","playOnImageClick","imagePlayButton","cardBuilder","getDefaultBackgroundClass","getDefaultText","indicatorsHtml","indicators","getPlayedIndicatorHtml","progressHtml","getProgressBarHtml","containerClass","showIndexNumberLeft","IndexNumber","showProgramDateTime","datetime","toLocaleString","parseISO8601Date","StartDate","weekday","month","day","hour","minute","showProgramTime","getDisplayTime","showChannel","ChannelName","parentTitle","showParentTitle","SeriesName","IsSeries","EpisodeTitle","displayName","itemHelper","getDisplayName","includeParentInfo","includeParentInfoInTitle","showIndexNumber","parentTitleWithTitle","artist","showArtist","artistItems","ArtistItems","includes","a","join","CurrentProgram","mediaInfo","getPrimaryMediaInfoHtml","episodeTitle","originalAirDate","subtitles","Overview","year","container","criticRating","endsAt","recordButton","getTimerIndicator","replace","addToListButton","infoButton","enableUserDataButtons","userData","likes","Likes","canMarkPlayed","enablePlayedButton","Played","canRate","enableRatingButton","IsFavorite","moreButton","defineProperty","_default"],"mappings":"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","file":"listview.js","sourcesContent":["/* eslint-disable indent */\n\n/**\n * Module for display list view.\n * @module components/listview/listview\n */\n\nimport itemHelper from 'itemHelper';\nimport mediaInfo from 'mediaInfo';\nimport indicators from 'indicators';\nimport connectionManager from 'connectionManager';\nimport layoutManager from 'layoutManager';\nimport globalize from 'globalize';\nimport datetime from 'datetime';\nimport cardBuilder from 'cardBuilder';\nimport 'css!./listview';\nimport 'emby-ratingbutton';\nimport 'emby-playstatebutton';\n\n    function getIndex(item, options) {\n        if (options.index === 'disc') {\n            return item.ParentIndexNumber == null ? '' : globalize.translate('ValueDiscNumber', item.ParentIndexNumber);\n        }\n\n        const sortBy = (options.sortBy || '').toLowerCase();\n        let code;\n        let name;\n\n        if (sortBy.indexOf('sortname') === 0) {\n            if (item.Type === 'Episode') {\n                return '';\n            }\n\n            // SortName\n            name = (item.SortName || item.Name || '?')[0].toUpperCase();\n\n            code = name.charCodeAt(0);\n            if (code < 65 || code > 90) {\n                return '#';\n            }\n\n            return name.toUpperCase();\n        }\n        if (sortBy.indexOf('officialrating') === 0) {\n            return item.OfficialRating || globalize.translate('Unrated');\n        }\n        if (sortBy.indexOf('communityrating') === 0) {\n            if (item.CommunityRating == null) {\n                return globalize.translate('Unrated');\n            }\n\n            return Math.floor(item.CommunityRating);\n        }\n        if (sortBy.indexOf('criticrating') === 0) {\n            if (item.CriticRating == null) {\n                return globalize.translate('Unrated');\n            }\n\n            return Math.floor(item.CriticRating);\n        }\n        if (sortBy.indexOf('albumartist') === 0) {\n            // SortName\n            if (!item.AlbumArtist) {\n                return '';\n            }\n\n            name = item.AlbumArtist[0].toUpperCase();\n\n            code = name.charCodeAt(0);\n            if (code < 65 || code > 90) {\n                return '#';\n            }\n\n            return name.toUpperCase();\n        }\n        return '';\n    }\n\n    function getImageUrl(item, width) {\n        const apiClient = connectionManager.getApiClient(item.ServerId);\n        let itemId;\n\n        const options = {\n            maxWidth: width,\n            type: 'Primary'\n        };\n\n        if (item.ImageTags && item.ImageTags.Primary) {\n            options.tag = item.ImageTags.Primary;\n            itemId = item.Id;\n        } else if (item.AlbumId && item.AlbumPrimaryImageTag) {\n            options.tag = item.AlbumPrimaryImageTag;\n            itemId = item.AlbumId;\n        } else if (item.SeriesId && item.SeriesPrimaryImageTag) {\n            options.tag = item.SeriesPrimaryImageTag;\n            itemId = item.SeriesId;\n        } else if (item.ParentPrimaryImageTag) {\n            options.tag = item.ParentPrimaryImageTag;\n            itemId = item.ParentPrimaryImageItemId;\n        }\n\n        if (itemId) {\n            return apiClient.getScaledImageUrl(itemId, options);\n        }\n        return null;\n    }\n\n    function getChannelImageUrl(item, width) {\n        const apiClient = connectionManager.getApiClient(item.ServerId);\n        const options = {\n            maxWidth: width,\n            type: 'Primary'\n        };\n\n        if (item.ChannelId && item.ChannelPrimaryImageTag) {\n            options.tag = item.ChannelPrimaryImageTag;\n        }\n\n        if (item.ChannelId) {\n            return apiClient.getScaledImageUrl(item.ChannelId, options);\n        }\n    }\n\n    function getTextLinesHtml(textlines, isLargeStyle) {\n        let html = '';\n\n        const largeTitleTagName = layoutManager.tv ? 'h2' : 'div';\n\n        for (const [i, text] of textlines.entries()) {\n            if (!text) {\n                continue;\n            }\n\n            if (i === 0) {\n                if (isLargeStyle) {\n                    html += `<${largeTitleTagName} class=\"listItemBodyText\">`;\n                } else {\n                    html += '<div class=\"listItemBodyText\">';\n                }\n            } else {\n                html += '<div class=\"secondary listItemBodyText\">';\n            }\n            html += (textlines[i] || '&nbsp;');\n            if (i === 0 && isLargeStyle) {\n                html += `</${largeTitleTagName}>`;\n            } else {\n                html += '</div>';\n            }\n        }\n\n        return html;\n    }\n\n    function getRightButtonsHtml(options) {\n        let html = '';\n\n        for (let i = 0, length = options.rightButtons.length; i < length; i++) {\n            const button = options.rightButtons[i];\n\n            html += `<button is=\"paper-icon-button-light\" class=\"listItemButton itemAction\" data-action=\"custom\" data-customaction=\"${button.id}\" title=\"${button.title}\"><span class=\"material-icons ${button.icon}\"></span></button>`;\n        }\n\n        return html;\n    }\n\n    function getId(item) {\n        return item.Id;\n    }\n\n    export function getListViewHtml(options) {\n        const items = options.items;\n\n        let groupTitle = '';\n        const action = options.action || 'link';\n\n        const isLargeStyle = options.imageSize === 'large';\n        const enableOverview = options.enableOverview;\n\n        const clickEntireItem = layoutManager.tv ? true : false;\n        const outerTagName = clickEntireItem ? 'button' : 'div';\n        const enableSideMediaInfo = options.enableSideMediaInfo != null ? options.enableSideMediaInfo : true;\n\n        let outerHtml = '';\n\n        const enableContentWrapper = options.enableOverview && !layoutManager.tv;\n        const containerAlbumArtistIds = (options.containerAlbumArtists || []).map(getId);\n\n        for (let i = 0, length = items.length; i < length; i++) {\n            const item = items[i];\n\n            let html = '';\n\n            if (options.showIndex) {\n                const itemGroupTitle = getIndex(item, options);\n\n                if (itemGroupTitle !== groupTitle) {\n                    if (html) {\n                        html += '</div>';\n                    }\n\n                    if (i === 0) {\n                        html += '<h2 class=\"listGroupHeader listGroupHeader-first\">';\n                    } else {\n                        html += '<h2 class=\"listGroupHeader\">';\n                    }\n                    html += itemGroupTitle;\n                    html += '</h2>';\n\n                    html += '<div>';\n\n                    groupTitle = itemGroupTitle;\n                }\n            }\n\n            let cssClass = 'listItem';\n\n            if (options.border || (options.highlight !== false && !layoutManager.tv)) {\n                cssClass += ' listItem-border';\n            }\n\n            if (clickEntireItem) {\n                cssClass += ' itemAction listItem-button';\n            }\n\n            if (layoutManager.tv) {\n                cssClass += ' listItem-focusscale';\n            }\n\n            let downloadWidth = 80;\n\n            if (isLargeStyle) {\n                cssClass += ' listItem-largeImage';\n                downloadWidth = 500;\n            }\n\n            const playlistItemId = item.PlaylistItemId ? (` data-playlistitemid=\"${item.PlaylistItemId}\"`) : '';\n\n            const positionTicksData = item.UserData && item.UserData.PlaybackPositionTicks ? (` data-positionticks=\"${item.UserData.PlaybackPositionTicks}\"`) : '';\n            const collectionIdData = options.collectionId ? (` data-collectionid=\"${options.collectionId}\"`) : '';\n            const playlistIdData = options.playlistId ? (` data-playlistid=\"${options.playlistId}\"`) : '';\n            const mediaTypeData = item.MediaType ? (` data-mediatype=\"${item.MediaType}\"`) : '';\n            const collectionTypeData = item.CollectionType ? (` data-collectiontype=\"${item.CollectionType}\"`) : '';\n            const channelIdData = item.ChannelId ? (` data-channelid=\"${item.ChannelId}\"`) : '';\n\n            if (enableContentWrapper) {\n                cssClass += ' listItem-withContentWrapper';\n            }\n\n            html += `<${outerTagName} class=\"${cssClass}\"${playlistItemId} data-action=\"${action}\" data-isfolder=\"${item.IsFolder}\" data-id=\"${item.Id}\" data-serverid=\"${item.ServerId}\" data-type=\"${item.Type}\"${mediaTypeData}${collectionTypeData}${channelIdData}${positionTicksData}${collectionIdData}${playlistIdData}>`;\n\n            if (enableContentWrapper) {\n                html += '<div class=\"listItem-content\">';\n            }\n\n            if (!clickEntireItem && options.dragHandle) {\n                html += '<span class=\"listViewDragHandle material-icons listItemIcon listItemIcon-transparent drag_handle\"></span>';\n            }\n\n            if (options.image !== false) {\n                var imgUrl = options.imageSource === 'channel' ? getChannelImageUrl(item, downloadWidth) : getImageUrl(item, downloadWidth);\n                var imageClass = isLargeStyle ? 'listItemImage listItemImage-large' : 'listItemImage';\n\n                if (isLargeStyle && layoutManager.tv) {\n                    imageClass += ' listItemImage-large-tv';\n                }\n\n                const playOnImageClick = options.imagePlayButton && !layoutManager.tv;\n\n                if (!clickEntireItem) {\n                    imageClass += ' itemAction';\n                }\n\n                const imageAction = playOnImageClick ? 'link' : action;\n\n                if (imgUrl) {\n                    html += '<div data-action=\"' + imageAction + '\" class=\"' + imageClass + ' lazy\" data-src=\"' + imgUrl + '\" item-icon>';\n                } else {\n                    html += '<div class=\"' + imageClass + ' cardImageContainer ' + cardBuilder.getDefaultBackgroundClass(item.Name) + '\">' + cardBuilder.getDefaultText(item, options);\n                }\n\n                let indicatorsHtml = '';\n                indicatorsHtml += indicators.getPlayedIndicatorHtml(item);\n\n                if (indicatorsHtml) {\n                    html += `<div class=\"indicators listItemIndicators\">${indicatorsHtml}</div>`;\n                }\n\n                if (playOnImageClick) {\n                    html += '<button is=\"paper-icon-button-light\" class=\"listItemImageButton itemAction\" data-action=\"resume\"><span class=\"material-icons listItemImageButton-icon play_arrow\"></span></button>';\n                }\n\n                const progressHtml = indicators.getProgressBarHtml(item, {\n                    containerClass: 'listItemProgressBar'\n                });\n\n                if (progressHtml) {\n                    html += progressHtml;\n                }\n                html += '</div>';\n            }\n\n            if (options.showIndexNumberLeft) {\n                html += '<div class=\"listItem-indexnumberleft\">';\n                html += (item.IndexNumber || '&nbsp;');\n                html += '</div>';\n            }\n\n            const textlines = [];\n\n            if (options.showProgramDateTime) {\n                textlines.push(datetime.toLocaleString(datetime.parseISO8601Date(item.StartDate), {\n\n                    weekday: 'long',\n                    month: 'short',\n                    day: 'numeric',\n                    hour: 'numeric',\n                    minute: '2-digit'\n                }));\n            }\n\n            if (options.showProgramTime) {\n                textlines.push(datetime.getDisplayTime(datetime.parseISO8601Date(item.StartDate)));\n            }\n\n            if (options.showChannel) {\n                if (item.ChannelName) {\n                    textlines.push(item.ChannelName);\n                }\n            }\n\n            let parentTitle = null;\n\n            if (options.showParentTitle) {\n                if (item.Type === 'Episode') {\n                    parentTitle = item.SeriesName;\n                } else if (item.IsSeries || (item.EpisodeTitle && item.Name)) {\n                    parentTitle = item.Name;\n                }\n            }\n\n            let displayName = itemHelper.getDisplayName(item, {\n                includeParentInfo: options.includeParentInfoInTitle\n            });\n\n            if (options.showIndexNumber && item.IndexNumber != null) {\n                displayName = `${item.IndexNumber}. ${displayName}`;\n            }\n\n            if (options.showParentTitle && options.parentTitleWithTitle) {\n                if (displayName) {\n                    if (parentTitle) {\n                        parentTitle += ' - ';\n                    }\n                    parentTitle = (parentTitle || '') + displayName;\n                }\n\n                textlines.push(parentTitle || '');\n            } else if (options.showParentTitle) {\n                textlines.push(parentTitle || '');\n            }\n\n            if (displayName && !options.parentTitleWithTitle) {\n                textlines.push(displayName);\n            }\n\n            if (item.IsFolder) {\n                if (options.artist !== false) {\n                    if (item.AlbumArtist && item.Type === 'MusicAlbum') {\n                        textlines.push(item.AlbumArtist);\n                    }\n                }\n            } else {\n                let showArtist = options.artist === true;\n                const artistItems = item.ArtistItems;\n\n                if (!showArtist && options.artist !== false) {\n                    if (!artistItems || !artistItems.length) {\n                        showArtist = true;\n                    } else if (artistItems.length > 1 || !containerAlbumArtistIds.includes(artistItems[0].Id)) {\n                        showArtist = true;\n                    }\n                }\n\n                if (showArtist) {\n                    if (artistItems && item.Type !== 'MusicAlbum') {\n                        textlines.push(artistItems.map(a => {\n                            return a.Name;\n                        }).join(', '));\n                    }\n                }\n            }\n\n            if (item.Type === 'TvChannel') {\n                if (item.CurrentProgram) {\n                    textlines.push(itemHelper.getDisplayName(item.CurrentProgram));\n                }\n            }\n\n            cssClass = 'listItemBody';\n            if (!clickEntireItem) {\n                cssClass += ' itemAction';\n            }\n\n            if (options.image === false) {\n                cssClass += ' listItemBody-noleftpadding';\n            }\n\n            html += `<div class=\"${cssClass}\">`;\n\n            html += getTextLinesHtml(textlines, isLargeStyle);\n\n            if (options.mediaInfo !== false) {\n                if (!enableSideMediaInfo) {\n                    const mediaInfoClass = 'secondary listItemMediaInfo listItemBodyText';\n\n                    html += `<div class=\"${mediaInfoClass}\">`;\n                    html += mediaInfo.getPrimaryMediaInfoHtml(item, {\n                        episodeTitle: false,\n                        originalAirDate: false,\n                        subtitles: false\n\n                    });\n                    html += '</div>';\n                }\n            }\n\n            if (enableOverview && item.Overview) {\n                html += '<div class=\"secondary listItem-overview listItemBodyText\">';\n                html += item.Overview;\n                html += '</div>';\n            }\n\n            html += '</div>';\n\n            if (options.mediaInfo !== false) {\n                if (enableSideMediaInfo) {\n                    html += '<div class=\"secondary listItemMediaInfo\">';\n                    html += mediaInfo.getPrimaryMediaInfoHtml(item, {\n\n                        year: false,\n                        container: false,\n                        episodeTitle: false,\n                        criticRating: false,\n                        endsAt: false\n\n                    });\n                    html += '</div>';\n                }\n            }\n\n            if (!options.recordButton && (item.Type === 'Timer' || item.Type === 'Program')) {\n                html += indicators.getTimerIndicator(item).replace('indicatorIcon', 'indicatorIcon listItemAside');\n            }\n\n            html += '<div class=\"listViewUserDataButtons\">';\n\n            if (!clickEntireItem) {\n                if (options.addToListButton) {\n                    html += '<button is=\"paper-icon-button-light\" class=\"listItemButton itemAction\" data-action=\"addtoplaylist\"><span class=\"material-icons playlist_add\"></span></button>';\n                }\n\n                if (options.infoButton) {\n                    html += '<button is=\"paper-icon-button-light\" class=\"listItemButton itemAction\" data-action=\"link\"><span class=\"material-icons info_outline\"></span></button>';\n                }\n\n                if (options.rightButtons) {\n                    html += getRightButtonsHtml(options);\n                }\n\n                if (options.enableUserDataButtons !== false) {\n                    const userData = item.UserData || {};\n                    const likes = userData.Likes == null ? '' : userData.Likes;\n\n                    if (itemHelper.canMarkPlayed(item) && options.enablePlayedButton !== false) {\n                        html += '<button is=\"emby-playstatebutton\" type=\"button\" class=\"listItemButton paper-icon-button-light\" data-id=\"' + item.Id + '\" data-serverid=\"' + item.ServerId + '\" data-itemtype=\"' + item.Type + '\" data-played=\"' + (userData.Played) + '\"><span class=\"material-icons check\"></span></button>';\n                    }\n\n                    if (itemHelper.canRate(item) && options.enableRatingButton !== false) {\n                        html += '<button is=\"emby-ratingbutton\" type=\"button\" class=\"listItemButton paper-icon-button-light\" data-id=\"' + item.Id + '\" data-serverid=\"' + item.ServerId + '\" data-itemtype=\"' + item.Type + '\" data-likes=\"' + likes + '\" data-isfavorite=\"' + (userData.IsFavorite) + '\"><span class=\"material-icons favorite\"></span></button>';\n                    }\n                }\n\n                if (options.moreButton !== false) {\n                    html += '<button is=\"paper-icon-button-light\" class=\"listItemButton itemAction\" data-action=\"menu\"><span class=\"material-icons more_vert\"></span></button>';\n                }\n            }\n            html += '</div>';\n\n            if (enableContentWrapper) {\n                html += '</div>';\n\n                if (enableOverview && item.Overview) {\n                    html += '<div class=\"listItem-bottomoverview secondary\">';\n                    html += item.Overview;\n                    html += '</div>';\n                }\n            }\n\n            html += `</${outerTagName}>`;\n\n            outerHtml += html;\n        }\n\n        return outerHtml;\n    }\n\n/* eslint-enable indent */\nexport default {\n    getListViewHtml: getListViewHtml\n};\n"]}