{"version":3,"sources":["components/metadataEditor/metadataEditor.js"],"names":["define","_require","_exports","_dom","_layoutManager","_dialogHelper","_datetime","_loading","_focusManager","_connectionManager","_globalize","_shell","_embyCheckbox","_embyInput","_embySelect","_listViewStyle","_embyTextarea","_embyButton","_paperIconButtonLight","_formdialog","_clearButtonStyle","_flexStyles","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","currentContext","metadataEditorInfo","currentItem","closeDialog","isSubmitted","isDialog","classList","contains","dialogHelper","close","getSelectedAirDays","form","checkedItems","querySelectorAll","Array","map","c","getAttribute","getAlbumArtists","querySelector","value","trim","split","filter","s","length","a","Name","getArtists","getDateValue","element","property","val","parts","datetime","parseISO8601Date","toISOString","indexOf","onSubmit","e","loading","show","item","Id","this","OriginalTitle","ForcedSortName","CommunityRating","CriticRating","IndexNumber","AirsBeforeSeasonNumber","AirsAfterSeasonNumber","AirsBeforeEpisodeNumber","ParentIndexNumber","DisplayOrder","Album","AlbumArtists","ArtistItems","Overview","Status","AirDays","AirTime","Genres","getListValues","Tags","Studios","PremiereDate","DateCreated","EndDate","ProductionYear","AspectRatio","Video3DFormat","OfficialRating","CustomRating","People","LockData","checked","LockedFields","ProviderIds","assign","idElements","idElem","providerKey","PreferredMetadataLanguage","PreferredMetadataCountryCode","Type","placeOfBirth","ProductionLocations","seriesRuntime","RunTimeTicks","tagline","Taglines","submitUpdatedItem","afterContentTypeUpdated","Promise","_resolve","_reject","imported","then","_ref","toast","globalize","translate","hide","apiClient","getApiClient","updateItem","newContentType","ContentType","ajax","url","getUrl","type","preventDefault","stopPropagation","list","el","textContent","editPerson","context","person","index","_ref3","updatedPerson","push","populatePeople","showMoreMenu","button","user","_ref5","itemContextMenu","positionTo","edit","editImages","editSubtitles","sync","share","play","queue","result","deleted","afterDeleted","parentId","ParentId","SeasonId","SeriesId","reload","ServerId","_ref4","goHome","updated","onEditorClick","btnRemoveFromEditorList","dom","parentWithClass","target","removeElementFromList","source","parentNode","removeChild","btnAddTextItem","addElementToList","sortCallback","_ref2","prompt","label","text","items","populateListView","connectionManager","init","addEventListener","btnOpenExternalId","field","formatString","shell","openUrl","replace","layoutManager","desktop","remove","add","bindAll","elems","eventName","fn","i","event","getCurrentUser","click","hideElement","showElement","removeEventListener","data","btnDeletePerson","parseInt","splice","btnEditPerson","getItem","itemId","serverId","getCurrentUserId","getRootFolder","getEditorConfig","getJSON","resolve","selector","multiple","document","elements","forEach","fillItemInfo","parentalRatingOptions","select","populateRatings","selectStatus","populateStatus","html","innerHTML","date","lockData","chkLockData","fillMetadataSettings","lockedFields","container","lockedFieldsList","name","getLockedFieldsHtml","fields","currentFields","checkedHtml","Path","join","slice","placeofBirth","minutes","Math","round","allParentalRatings","currentValue","rating","ratings","currentValueFound","Value","sort","b","toLowerCase","localeCompare","people","elem","Role","all","responses","languages","Cultures","countries","Countries","renderContentTypeOptions","metadataInfo","ContentTypeOptions","selectEl","loadExternalIds","externalIds","providerIds","idInfo","id","Key","UrlFormatString","fullName","labelText","ExternalIdInfos","populateLanguages","culture","TwoLetterISOLanguageName","DisplayName","populateCountries","allCountries","TwoLetterISORegionName","setFieldVisibilities","EnableMediaSourceDisplay","MediaType","ParentalRatingOptions","centerFocus","horiz","on","_ref6","scrollHelper","_default","reject","_ref7","template","dialogOptions","removeOnClose","scrollY","tv","size","dlg","createDialog","translateHtml","open","embed","_ref8","focusManager","autoFocus"],"mappings":"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","file":"metadataEditor.js","sourcesContent":["import dom from 'dom';\nimport layoutManager from 'layoutManager';\nimport dialogHelper from 'dialogHelper';\nimport datetime from 'datetime';\nimport loading from 'loading';\nimport focusManager from 'focusManager';\nimport connectionManager from 'connectionManager';\nimport globalize from 'globalize';\nimport shell from 'shell';\nimport 'emby-checkbox';\nimport 'emby-input';\nimport 'emby-select';\nimport 'listViewStyle';\nimport 'emby-textarea';\nimport 'emby-button';\nimport 'paper-icon-button-light';\nimport 'css!./../formdialog';\nimport 'clearButtonStyle';\nimport 'flexStyles';\n\n/* eslint-disable indent */\n\n    let currentContext;\n    let metadataEditorInfo;\n    let currentItem;\n\n    function isDialog() {\n        return currentContext.classList.contains('dialog');\n    }\n\n    function closeDialog(isSubmitted) {\n        if (isDialog()) {\n            dialogHelper.close(currentContext);\n        }\n    }\n\n    function submitUpdatedItem(form, item) {\n        function afterContentTypeUpdated() {\n            import('toast').then(({default: toast}) => {\n                toast(globalize.translate('MessageItemSaved'));\n            });\n\n            loading.hide();\n            closeDialog(true);\n        }\n\n        const apiClient = getApiClient();\n\n        apiClient.updateItem(item).then(function () {\n            const newContentType = form.querySelector('#selectContentType').value || '';\n\n            if ((metadataEditorInfo.ContentType || '') !== newContentType) {\n                apiClient.ajax({\n\n                    url: apiClient.getUrl('Items/' + item.Id + '/ContentType', {\n                        ContentType: newContentType\n                    }),\n\n                    type: 'POST'\n\n                }).then(function () {\n                    afterContentTypeUpdated();\n                });\n            } else {\n                afterContentTypeUpdated();\n            }\n        });\n    }\n\n    function getSelectedAirDays(form) {\n        const checkedItems = form.querySelectorAll('.chkAirDay:checked') || [];\n        return Array.prototype.map.call(checkedItems, function (c) {\n            return c.getAttribute('data-day');\n        });\n    }\n\n    function getAlbumArtists(form) {\n        return form.querySelector('#txtAlbumArtist').value.trim().split(';').filter(function (s) {\n            return s.length > 0;\n        }).map(function (a) {\n            return {\n                Name: a\n            };\n        });\n    }\n\n    function getArtists(form) {\n        return form.querySelector('#txtArtist').value.trim().split(';').filter(function (s) {\n            return s.length > 0;\n        }).map(function (a) {\n            return {\n                Name: a\n            };\n        });\n    }\n\n    function getDateValue(form, element, property) {\n        let val = form.querySelector(element).value;\n\n        if (!val) {\n            return null;\n        }\n\n        if (currentItem[property]) {\n            const date = datetime.parseISO8601Date(currentItem[property], true);\n\n            const parts = date.toISOString().split('T');\n\n            // If the date is the same, preserve the time\n            if (parts[0].indexOf(val) === 0) {\n                const iso = parts[1];\n\n                val += 'T' + iso;\n            }\n        }\n\n        return val;\n    }\n\n    function onSubmit(e) {\n        loading.show();\n\n        const form = this;\n\n        const item = {\n            Id: currentItem.Id,\n            Name: form.querySelector('#txtName').value,\n            OriginalTitle: form.querySelector('#txtOriginalName').value,\n            ForcedSortName: form.querySelector('#txtSortName').value,\n            CommunityRating: form.querySelector('#txtCommunityRating').value,\n            CriticRating: form.querySelector('#txtCriticRating').value,\n            IndexNumber: form.querySelector('#txtIndexNumber').value || null,\n            AirsBeforeSeasonNumber: form.querySelector('#txtAirsBeforeSeason').value,\n            AirsAfterSeasonNumber: form.querySelector('#txtAirsAfterSeason').value,\n            AirsBeforeEpisodeNumber: form.querySelector('#txtAirsBeforeEpisode').value,\n            ParentIndexNumber: form.querySelector('#txtParentIndexNumber').value || null,\n            DisplayOrder: form.querySelector('#selectDisplayOrder').value,\n            Album: form.querySelector('#txtAlbum').value,\n            AlbumArtists: getAlbumArtists(form),\n            ArtistItems: getArtists(form),\n            Overview: form.querySelector('#txtOverview').value,\n            Status: form.querySelector('#selectStatus').value,\n            AirDays: getSelectedAirDays(form),\n            AirTime: form.querySelector('#txtAirTime').value,\n            Genres: getListValues(form.querySelector('#listGenres')),\n            Tags: getListValues(form.querySelector('#listTags')),\n            Studios: getListValues(form.querySelector('#listStudios')).map(function (element) {\n                return { Name: element };\n            }),\n\n            PremiereDate: getDateValue(form, '#txtPremiereDate', 'PremiereDate'),\n            DateCreated: getDateValue(form, '#txtDateAdded', 'DateCreated'),\n            EndDate: getDateValue(form, '#txtEndDate', 'EndDate'),\n            ProductionYear: form.querySelector('#txtProductionYear').value,\n            AspectRatio: form.querySelector('#txtOriginalAspectRatio').value,\n            Video3DFormat: form.querySelector('#select3dFormat').value,\n\n            OfficialRating: form.querySelector('#selectOfficialRating').value,\n            CustomRating: form.querySelector('#selectCustomRating').value,\n            People: currentItem.People,\n            LockData: form.querySelector('#chkLockData').checked,\n            LockedFields: Array.prototype.filter.call(form.querySelectorAll('.selectLockedField'), function (c) {\n                return !c.checked;\n            }).map(function (c) {\n                return c.getAttribute('data-value');\n            })\n        };\n\n        item.ProviderIds = Object.assign({}, currentItem.ProviderIds);\n\n        const idElements = form.querySelectorAll('.txtExternalId');\n        Array.prototype.map.call(idElements, function (idElem) {\n            const providerKey = idElem.getAttribute('data-providerkey');\n            item.ProviderIds[providerKey] = idElem.value;\n        });\n\n        item.PreferredMetadataLanguage = form.querySelector('#selectLanguage').value;\n        item.PreferredMetadataCountryCode = form.querySelector('#selectCountry').value;\n\n        if (currentItem.Type === 'Person') {\n            const placeOfBirth = form.querySelector('#txtPlaceOfBirth').value;\n\n            item.ProductionLocations = placeOfBirth ? [placeOfBirth] : [];\n        }\n\n        if (currentItem.Type === 'Series') {\n            // 600000000\n            const seriesRuntime = form.querySelector('#txtSeriesRuntime').value;\n            item.RunTimeTicks = seriesRuntime ? (seriesRuntime * 600000000) : null;\n        }\n\n        const tagline = form.querySelector('#txtTagline').value;\n        item.Taglines = tagline ? [tagline] : [];\n\n        submitUpdatedItem(form, item);\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        // Disable default form submission\n        return false;\n    }\n\n    function getListValues(list) {\n        return Array.prototype.map.call(list.querySelectorAll('.textValue'), function (el) {\n            return el.textContent;\n        });\n    }\n\n    function addElementToList(source, sortCallback) {\n        import('prompt').then(({default: prompt}) => {\n            prompt({\n                label: 'Value:'\n            }).then(function (text) {\n                const list = dom.parentWithClass(source, 'editableListviewContainer').querySelector('.paperList');\n                const items = getListValues(list);\n                items.push(text);\n                populateListView(list, items, sortCallback);\n            });\n        });\n    }\n\n    function removeElementFromList(source) {\n        const el = dom.parentWithClass(source, 'listItem');\n        el.parentNode.removeChild(el);\n    }\n\n    function editPerson(context, person, index) {\n        import('personEditor').then(({default: personEditor}) => {\n            personEditor.show(person).then(function (updatedPerson) {\n                const isNew = index === -1;\n\n                if (isNew) {\n                    currentItem.People.push(updatedPerson);\n                }\n\n                populatePeople(context, currentItem.People);\n            });\n        });\n    }\n\n    function afterDeleted(context, item) {\n        var parentId = item.ParentId || item.SeasonId || item.SeriesId;\n\n        if (parentId) {\n            reload(context, parentId, item.ServerId);\n        } else {\n            import('appRouter').then(({default: appRouter}) => {\n                appRouter.goHome();\n            });\n        }\n    }\n\n    function showMoreMenu(context, button, user) {\n        import('itemContextMenu').then(({default: itemContextMenu}) => {\n            var item = currentItem;\n\n            itemContextMenu.show({\n                item: item,\n                positionTo: button,\n                edit: false,\n                editImages: true,\n                editSubtitles: true,\n                sync: false,\n                share: false,\n                play: false,\n                queue: false,\n                user: user\n            }).then(function (result) {\n                if (result.deleted) {\n                    afterDeleted(context, item);\n                } else if (result.updated) {\n                    reload(context, item.Id, item.ServerId);\n                }\n            });\n        });\n    }\n\n    function onEditorClick(e) {\n        const btnRemoveFromEditorList = dom.parentWithClass(e.target, 'btnRemoveFromEditorList');\n        if (btnRemoveFromEditorList) {\n            removeElementFromList(btnRemoveFromEditorList);\n            return;\n        }\n\n        const btnAddTextItem = dom.parentWithClass(e.target, 'btnAddTextItem');\n        if (btnAddTextItem) {\n            addElementToList(btnAddTextItem);\n        }\n    }\n\n    function getApiClient() {\n        return connectionManager.getApiClient(currentItem.ServerId);\n    }\n\n    function bindAll(elems, eventName, fn) {\n        for (let i = 0, length = elems.length; i < length; i++) {\n            elems[i].addEventListener(eventName, fn);\n        }\n    }\n\n    function init(context, apiClient) {\n        context.querySelector('.externalIds').addEventListener('click', function (e) {\n            const btnOpenExternalId = dom.parentWithClass(e.target, 'btnOpenExternalId');\n            if (btnOpenExternalId) {\n                const field = context.querySelector('#' + btnOpenExternalId.getAttribute('data-fieldid'));\n\n                const formatString = field.getAttribute('data-formatstring');\n\n                if (field.value) {\n                    shell.openUrl(formatString.replace('{0}', field.value));\n                }\n            }\n        });\n\n        if (!layoutManager.desktop) {\n            context.querySelector('.btnBack').classList.remove('hide');\n            context.querySelector('.btnClose').classList.add('hide');\n        }\n\n        bindAll(context.querySelectorAll('.btnCancel'), 'click', function (event) {\n            event.preventDefault();\n            closeDialog(false);\n        });\n\n        context.querySelector('.btnMore').addEventListener('click', function (e) {\n            getApiClient().getCurrentUser().then(function (user) {\n                showMoreMenu(context, e.target, user);\n            });\n        });\n\n        context.querySelector('.btnHeaderSave').addEventListener('click', function (e) {\n            context.querySelector('.btnSave').click();\n        });\n\n        context.querySelector('#chkLockData').addEventListener('click', function (e) {\n            if (!e.target.checked) {\n                showElement('.providerSettingsContainer');\n            } else {\n                hideElement('.providerSettingsContainer');\n            }\n        });\n\n        context.removeEventListener('click', onEditorClick);\n        context.addEventListener('click', onEditorClick);\n\n        const form = context.querySelector('form');\n        form.removeEventListener('submit', onSubmit);\n        form.addEventListener('submit', onSubmit);\n\n        context.querySelector('#btnAddPerson').addEventListener('click', function (event, data) {\n            editPerson(context, {}, -1);\n        });\n\n        context.querySelector('#peopleList').addEventListener('click', function (e) {\n            let index;\n            const btnDeletePerson = dom.parentWithClass(e.target, 'btnDeletePerson');\n            if (btnDeletePerson) {\n                index = parseInt(btnDeletePerson.getAttribute('data-index'));\n                currentItem.People.splice(index, 1);\n                populatePeople(context, currentItem.People);\n            }\n\n            const btnEditPerson = dom.parentWithClass(e.target, 'btnEditPerson');\n            if (btnEditPerson) {\n                index = parseInt(btnEditPerson.getAttribute('data-index'));\n                editPerson(context, currentItem.People[index], index);\n            }\n        });\n    }\n\n    function getItem(itemId, serverId) {\n        const apiClient = connectionManager.getApiClient(serverId);\n\n        if (itemId) {\n            return apiClient.getItem(apiClient.getCurrentUserId(), itemId);\n        }\n\n        return apiClient.getRootFolder(apiClient.getCurrentUserId());\n    }\n\n    function getEditorConfig(itemId, serverId) {\n        const apiClient = connectionManager.getApiClient(serverId);\n\n        if (itemId) {\n            return apiClient.getJSON(apiClient.getUrl('Items/' + itemId + '/MetadataEditor'));\n        }\n\n        return Promise.resolve({});\n    }\n\n    function populateCountries(select, allCountries) {\n        let html = '';\n\n        html += \"<option value=''></option>\";\n\n        for (let i = 0, length = allCountries.length; i < length; i++) {\n            const culture = allCountries[i];\n\n            html += \"<option value='\" + culture.TwoLetterISORegionName + \"'>\" + culture.DisplayName + '</option>';\n        }\n\n        select.innerHTML = html;\n    }\n\n    function populateLanguages(select, languages) {\n        let html = '';\n\n        html += \"<option value=''></option>\";\n\n        for (let i = 0, length = languages.length; i < length; i++) {\n            const culture = languages[i];\n\n            html += \"<option value='\" + culture.TwoLetterISOLanguageName + \"'>\" + culture.DisplayName + '</option>';\n        }\n\n        select.innerHTML = html;\n    }\n\n    function renderContentTypeOptions(context, metadataInfo) {\n        if (!metadataInfo.ContentTypeOptions.length) {\n            hideElement('#fldContentType', context);\n        } else {\n            showElement('#fldContentType', context);\n        }\n\n        const html = metadataInfo.ContentTypeOptions.map(function (i) {\n            return '<option value=\"' + i.Value + '\">' + i.Name + '</option>';\n        }).join('');\n\n        const selectEl = context.querySelector('#selectContentType');\n        selectEl.innerHTML = html;\n        selectEl.value = metadataInfo.ContentType || '';\n    }\n\n    function loadExternalIds(context, item, externalIds) {\n        let html = '';\n\n        const providerIds = item.ProviderIds || {};\n\n        for (let i = 0, length = externalIds.length; i < length; i++) {\n            const idInfo = externalIds[i];\n\n            const id = 'txt1' + idInfo.Key;\n            const formatString = idInfo.UrlFormatString || '';\n\n            let fullName = idInfo.Name;\n            if (idInfo.Type) {\n                fullName = idInfo.Name + ' ' + globalize.translate(idInfo.Type);\n            }\n\n            const labelText = globalize.translate('LabelDynamicExternalId', fullName);\n\n            html += '<div class=\"inputContainer\">';\n            html += '<div class=\"flex align-items-center\">';\n\n            const value = providerIds[idInfo.Key] || '';\n\n            html += '<div class=\"flex-grow\">';\n            html += '<input is=\"emby-input\" class=\"txtExternalId\" value=\"' + value + '\" data-providerkey=\"' + idInfo.Key + '\" data-formatstring=\"' + formatString + '\" id=\"' + id + '\" label=\"' + labelText + '\"/>';\n            html += '</div>';\n\n            if (formatString) {\n                html += '<button type=\"button\" is=\"paper-icon-button-light\" class=\"btnOpenExternalId align-self-flex-end\" data-fieldid=\"' + id + '\"><span class=\"material-icons open_in_browser\"></span></button>';\n            }\n            html += '</div>';\n\n            html += '</div>';\n        }\n\n        const elem = context.querySelector('.externalIds', context);\n        elem.innerHTML = html;\n\n        if (externalIds.length) {\n            context.querySelector('.externalIdsSection').classList.remove('hide');\n        } else {\n            context.querySelector('.externalIdsSection').classList.add('hide');\n        }\n    }\n\n    // Function to hide the element by selector or raw element\n    // Selector can be an element or a selector string\n    // Context is optional and restricts the querySelector to the context\n    function hideElement(selector, context, multiple) {\n        context = context || document;\n        if (typeof selector === 'string') {\n            const elements = multiple ? context.querySelectorAll(selector) : [context.querySelector(selector)];\n\n            Array.prototype.forEach.call(elements, function (el) {\n                if (el) {\n                    el.classList.add('hide');\n                }\n            });\n        } else {\n            selector.classList.add('hide');\n        }\n    }\n\n    // Function to show the element by selector or raw element\n    // Selector can be an element or a selector string\n    // Context is optional and restricts the querySelector to the context\n    function showElement(selector, context, multiple) {\n        context = context || document;\n        if (typeof selector === 'string') {\n            const elements = multiple ? context.querySelectorAll(selector) : [context.querySelector(selector)];\n\n            Array.prototype.forEach.call(elements, function (el) {\n                if (el) {\n                    el.classList.remove('hide');\n                }\n            });\n        } else {\n            selector.classList.remove('hide');\n        }\n    }\n\n    function setFieldVisibilities(context, item) {\n        if (item.Path && item.EnableMediaSourceDisplay !== false) {\n            showElement('#fldPath', context);\n        } else {\n            hideElement('#fldPath', context);\n        }\n\n        if (item.Type === 'Series' || item.Type === 'Movie' || item.Type === 'Trailer') {\n            showElement('#fldOriginalName', context);\n        } else {\n            hideElement('#fldOriginalName', context);\n        }\n\n        if (item.Type === 'Series') {\n            showElement('#fldSeriesRuntime', context);\n        } else {\n            hideElement('#fldSeriesRuntime', context);\n        }\n\n        if (item.Type === 'Series' || item.Type === 'Person') {\n            showElement('#fldEndDate', context);\n        } else {\n            hideElement('#fldEndDate', context);\n        }\n\n        if (item.Type === 'MusicAlbum') {\n            showElement('#albumAssociationMessage', context);\n        } else {\n            hideElement('#albumAssociationMessage', context);\n        }\n\n        if (item.Type === 'Movie' || item.Type === 'Trailer') {\n            showElement('#fldCriticRating', context);\n        } else {\n            hideElement('#fldCriticRating', context);\n        }\n\n        if (item.Type === 'Series') {\n            showElement('#fldStatus', context);\n            showElement('#fldAirDays', context);\n            showElement('#fldAirTime', context);\n        } else {\n            hideElement('#fldStatus', context);\n            hideElement('#fldAirDays', context);\n            hideElement('#fldAirTime', context);\n        }\n\n        if (item.MediaType === 'Video' && item.Type !== 'TvChannel') {\n            showElement('#fld3dFormat', context);\n        } else {\n            hideElement('#fld3dFormat', context);\n        }\n\n        if (item.Type === 'Audio') {\n            showElement('#fldAlbumArtist', context);\n        } else {\n            hideElement('#fldAlbumArtist', context);\n        }\n\n        if (item.Type === 'Audio' || item.Type === 'MusicVideo') {\n            showElement('#fldArtist', context);\n            showElement('#fldAlbum', context);\n        } else {\n            hideElement('#fldArtist', context);\n            hideElement('#fldAlbum', context);\n        }\n\n        if (item.Type === 'Episode' && item.ParentIndexNumber === 0) {\n            showElement('#collapsibleSpecialEpisodeInfo', context);\n        } else {\n            hideElement('#collapsibleSpecialEpisodeInfo', context);\n        }\n\n        if (item.Type === 'Person' ||\n            item.Type === 'Genre' ||\n            item.Type === 'Studio' ||\n            item.Type === 'MusicGenre' ||\n            item.Type === 'TvChannel' ||\n            item.Type === 'Book') {\n            hideElement('#peopleCollapsible', context);\n        } else {\n            showElement('#peopleCollapsible', context);\n        }\n\n        if (item.Type === 'Person' || item.Type === 'Genre' || item.Type === 'Studio' || item.Type === 'MusicGenre' || item.Type === 'TvChannel') {\n            hideElement('#fldCommunityRating', context);\n            hideElement('#genresCollapsible', context);\n            hideElement('#studiosCollapsible', context);\n\n            if (item.Type === 'TvChannel') {\n                showElement('#fldOfficialRating', context);\n            } else {\n                hideElement('#fldOfficialRating', context);\n            }\n            hideElement('#fldCustomRating', context);\n        } else {\n            showElement('#fldCommunityRating', context);\n            showElement('#genresCollapsible', context);\n            showElement('#studiosCollapsible', context);\n            showElement('#fldOfficialRating', context);\n            showElement('#fldCustomRating', context);\n        }\n\n        showElement('#tagsCollapsible', context);\n\n        if (item.Type === 'TvChannel') {\n            hideElement('#metadataSettingsCollapsible', context);\n            hideElement('#fldPremiereDate', context);\n            hideElement('#fldDateAdded', context);\n            hideElement('#fldYear', context);\n        } else {\n            showElement('#metadataSettingsCollapsible', context);\n            showElement('#fldPremiereDate', context);\n            showElement('#fldDateAdded', context);\n            showElement('#fldYear', context);\n        }\n\n        if (item.Type === 'TvChannel') {\n            hideElement('.overviewContainer', context);\n        } else {\n            showElement('.overviewContainer', context);\n        }\n\n        if (item.Type === 'Person') {\n            //todo\n            context.querySelector('#txtProductionYear').label(globalize.translate('LabelBirthYear'));\n            context.querySelector('#txtPremiereDate').label(globalize.translate('LabelBirthDate'));\n            context.querySelector('#txtEndDate').label(globalize.translate('LabelDeathDate'));\n            showElement('#fldPlaceOfBirth');\n        } else {\n            context.querySelector('#txtProductionYear').label(globalize.translate('LabelYear'));\n            context.querySelector('#txtPremiereDate').label(globalize.translate('LabelReleaseDate'));\n            context.querySelector('#txtEndDate').label(globalize.translate('LabelEndDate'));\n            hideElement('#fldPlaceOfBirth');\n        }\n\n        if (item.MediaType === 'Video' && item.Type !== 'TvChannel') {\n            showElement('#fldOriginalAspectRatio');\n        } else {\n            hideElement('#fldOriginalAspectRatio');\n        }\n\n        if (item.Type === 'Audio' || item.Type === 'Episode' || item.Type === 'Season') {\n            showElement('#fldIndexNumber');\n\n            if (item.Type === 'Episode') {\n                context.querySelector('#txtIndexNumber').label(globalize.translate('LabelEpisodeNumber'));\n            } else if (item.Type === 'Season') {\n                context.querySelector('#txtIndexNumber').label(globalize.translate('LabelSeasonNumber'));\n            } else if (item.Type === 'Audio') {\n                context.querySelector('#txtIndexNumber').label(globalize.translate('LabelTrackNumber'));\n            } else {\n                context.querySelector('#txtIndexNumber').label(globalize.translate('LabelNumber'));\n            }\n        } else {\n            hideElement('#fldIndexNumber');\n        }\n\n        if (item.Type === 'Audio' || item.Type === 'Episode') {\n            showElement('#fldParentIndexNumber');\n\n            if (item.Type === 'Episode') {\n                context.querySelector('#txtParentIndexNumber').label(globalize.translate('LabelSeasonNumber'));\n            } else if (item.Type === 'Audio') {\n                context.querySelector('#txtParentIndexNumber').label(globalize.translate('LabelDiscNumber'));\n            } else {\n                context.querySelector('#txtParentIndexNumber').label(globalize.translate('LabelParentNumber'));\n            }\n        } else {\n            hideElement('#fldParentIndexNumber', context);\n        }\n\n        if (item.Type === 'BoxSet') {\n            showElement('#fldDisplayOrder', context);\n            hideElement('.seriesDisplayOrderDescription', context);\n\n            context.querySelector('#selectDisplayOrder').innerHTML = '<option value=\"SortName\">' + globalize.translate('SortName') + '</option><option value=\"PremiereDate\">' + globalize.translate('ReleaseDate') + '</option>';\n        } else if (item.Type === 'Series') {\n            showElement('#fldDisplayOrder', context);\n            showElement('.seriesDisplayOrderDescription', context);\n\n            context.querySelector('#selectDisplayOrder').innerHTML = '<option value=\"\">' + globalize.translate('Aired') + '</option><option value=\"absolute\">' + globalize.translate('Absolute') + '</option><option value=\"dvd\">Dvd</option>';\n        } else {\n            context.querySelector('#selectDisplayOrder').innerHTML = '';\n            hideElement('#fldDisplayOrder', context);\n        }\n    }\n\n    function fillItemInfo(context, item, parentalRatingOptions) {\n        let select = context.querySelector('#selectOfficialRating');\n\n        populateRatings(parentalRatingOptions, select, item.OfficialRating);\n\n        select.value = item.OfficialRating || '';\n\n        select = context.querySelector('#selectCustomRating');\n\n        populateRatings(parentalRatingOptions, select, item.CustomRating);\n\n        select.value = item.CustomRating || '';\n\n        const selectStatus = context.querySelector('#selectStatus');\n        populateStatus(selectStatus);\n        selectStatus.value = item.Status || '';\n\n        context.querySelector('#select3dFormat', context).value = item.Video3DFormat || '';\n\n        Array.prototype.forEach.call(context.querySelectorAll('.chkAirDay', context), function (el) {\n            el.checked = (item.AirDays || []).indexOf(el.getAttribute('data-day')) !== -1;\n        });\n\n        populateListView(context.querySelector('#listGenres'), item.Genres);\n        populatePeople(context, item.People || []);\n\n        populateListView(context.querySelector('#listStudios'), (item.Studios || []).map(function (element) {\n            return element.Name || '';\n        }));\n\n        populateListView(context.querySelector('#listTags'), item.Tags);\n\n        const lockData = (item.LockData || false);\n        const chkLockData = context.querySelector('#chkLockData');\n        chkLockData.checked = lockData;\n        if (chkLockData.checked) {\n            hideElement('.providerSettingsContainer', context);\n        } else {\n            showElement('.providerSettingsContainer', context);\n        }\n        fillMetadataSettings(context, item, item.LockedFields);\n\n        context.querySelector('#txtPath').value = item.Path || '';\n        context.querySelector('#txtName').value = item.Name || '';\n        context.querySelector('#txtOriginalName').value = item.OriginalTitle || '';\n        context.querySelector('#txtOverview').value = item.Overview || '';\n        context.querySelector('#txtTagline').value = (item.Taglines && item.Taglines.length ? item.Taglines[0] : '');\n        context.querySelector('#txtSortName').value = item.ForcedSortName || '';\n        context.querySelector('#txtCommunityRating').value = item.CommunityRating || '';\n\n        context.querySelector('#txtCriticRating').value = item.CriticRating || '';\n\n        context.querySelector('#txtIndexNumber').value = item.IndexNumber == null ? '' : item.IndexNumber;\n        context.querySelector('#txtParentIndexNumber').value = item.ParentIndexNumber == null ? '' : item.ParentIndexNumber;\n\n        context.querySelector('#txtAirsBeforeSeason').value = ('AirsBeforeSeasonNumber' in item) ? item.AirsBeforeSeasonNumber : '';\n        context.querySelector('#txtAirsAfterSeason').value = ('AirsAfterSeasonNumber' in item) ? item.AirsAfterSeasonNumber : '';\n        context.querySelector('#txtAirsBeforeEpisode').value = ('AirsBeforeEpisodeNumber' in item) ? item.AirsBeforeEpisodeNumber : '';\n\n        context.querySelector('#txtAlbum').value = item.Album || '';\n\n        context.querySelector('#txtAlbumArtist').value = (item.AlbumArtists || []).map(function (a) {\n            return a.Name;\n        }).join(';');\n\n        context.querySelector('#selectDisplayOrder').value = item.DisplayOrder || '';\n\n        context.querySelector('#txtArtist').value = (item.ArtistItems || []).map(function (a) {\n            return a.Name;\n        }).join(';');\n\n        let date;\n\n        if (item.DateCreated) {\n            try {\n                date = datetime.parseISO8601Date(item.DateCreated, true);\n\n                context.querySelector('#txtDateAdded').value = date.toISOString().slice(0, 10);\n            } catch (e) {\n                context.querySelector('#txtDateAdded').value = '';\n            }\n        } else {\n            context.querySelector('#txtDateAdded').value = '';\n        }\n\n        if (item.PremiereDate) {\n            try {\n                date = datetime.parseISO8601Date(item.PremiereDate, true);\n\n                context.querySelector('#txtPremiereDate').value = date.toISOString().slice(0, 10);\n            } catch (e) {\n                context.querySelector('#txtPremiereDate').value = '';\n            }\n        } else {\n            context.querySelector('#txtPremiereDate').value = '';\n        }\n\n        if (item.EndDate) {\n            try {\n                date = datetime.parseISO8601Date(item.EndDate, true);\n\n                context.querySelector('#txtEndDate').value = date.toISOString().slice(0, 10);\n            } catch (e) {\n                context.querySelector('#txtEndDate').value = '';\n            }\n        } else {\n            context.querySelector('#txtEndDate').value = '';\n        }\n\n        context.querySelector('#txtProductionYear').value = item.ProductionYear || '';\n\n        context.querySelector('#txtAirTime').value = item.AirTime || '';\n\n        const placeofBirth = item.ProductionLocations && item.ProductionLocations.length ? item.ProductionLocations[0] : '';\n        context.querySelector('#txtPlaceOfBirth').value = placeofBirth;\n\n        context.querySelector('#txtOriginalAspectRatio').value = item.AspectRatio || '';\n\n        context.querySelector('#selectLanguage').value = item.PreferredMetadataLanguage || '';\n        context.querySelector('#selectCountry').value = item.PreferredMetadataCountryCode || '';\n\n        if (item.RunTimeTicks) {\n            const minutes = item.RunTimeTicks / 600000000;\n\n            context.querySelector('#txtSeriesRuntime').value = Math.round(minutes);\n        } else {\n            context.querySelector('#txtSeriesRuntime', context).value = '';\n        }\n    }\n\n    function populateRatings(allParentalRatings, select, currentValue) {\n        let html = '';\n\n        html += \"<option value=''></option>\";\n\n        const ratings = [];\n        let rating;\n\n        let currentValueFound = false;\n\n        for (let i = 0, length = allParentalRatings.length; i < length; i++) {\n            rating = allParentalRatings[i];\n\n            ratings.push({ Name: rating.Name, Value: rating.Name });\n\n            if (rating.Name === currentValue) {\n                currentValueFound = true;\n            }\n        }\n\n        if (currentValue && !currentValueFound) {\n            ratings.push({ Name: currentValue, Value: currentValue });\n        }\n\n        for (let i = 0, length = ratings.length; i < length; i++) {\n            rating = ratings[i];\n\n            html += \"<option value='\" + rating.Value + \"'>\" + rating.Name + '</option>';\n        }\n\n        select.innerHTML = html;\n    }\n\n    function populateStatus(select) {\n        let html = '';\n\n        html += \"<option value=''></option>\";\n        html += \"<option value='Continuing'>\" + globalize.translate('Continuing') + '</option>';\n        html += \"<option value='Ended'>\" + globalize.translate('Ended') + '</option>';\n        select.innerHTML = html;\n    }\n\n    function populateListView(list, items, sortCallback) {\n        items = items || [];\n        if (typeof (sortCallback) === 'undefined') {\n            items.sort(function (a, b) {\n                return a.toLowerCase().localeCompare(b.toLowerCase());\n            });\n        } else {\n            items = sortCallback(items);\n        }\n        let html = '';\n        for (let i = 0; i < items.length; i++) {\n            html += '<div class=\"listItem\">';\n\n            html += '<span class=\"material-icons listItemIcon live_tv\" style=\"background-color:#333;\"></span>';\n\n            html += '<div class=\"listItemBody\">';\n\n            html += '<div class=\"textValue\">';\n            html += items[i];\n            html += '</div>';\n\n            html += '</div>';\n\n            html += '<button type=\"button\" is=\"paper-icon-button-light\" data-index=\"' + i + '\" class=\"btnRemoveFromEditorList autoSize\"><span class=\"material-icons delete\"></span></button>';\n\n            html += '</div>';\n        }\n\n        list.innerHTML = html;\n    }\n\n    function populatePeople(context, people) {\n        const lastType = '';\n        let html = '';\n\n        const elem = context.querySelector('#peopleList');\n\n        for (let i = 0, length = people.length; i < length; i++) {\n            const person = people[i];\n\n            html += '<div class=\"listItem\">';\n\n            html += '<span class=\"material-icons listItemIcon person\" style=\"background-color:#333;\"></span>';\n\n            html += '<div class=\"listItemBody\">';\n            html += '<button style=\"text-align:left;\" type=\"button\" class=\"btnEditPerson clearButton\" data-index=\"' + i + '\">';\n\n            html += '<div class=\"textValue\">';\n            html += (person.Name || '');\n            html += '</div>';\n\n            if (person.Role && person.Role !== lastType) {\n                html += '<div class=\"secondary\">' + (person.Role) + '</div>';\n            }\n\n            html += '</button>';\n            html += '</div>';\n\n            html += '<button type=\"button\" is=\"paper-icon-button-light\" data-index=\"' + i + '\" class=\"btnDeletePerson autoSize\"><span class=\"material-icons delete\"></span></button>';\n\n            html += '</div>';\n        }\n\n        elem.innerHTML = html;\n    }\n\n    function getLockedFieldsHtml(fields, currentFields) {\n        let html = '';\n        for (let i = 0; i < fields.length; i++) {\n            const field = fields[i];\n            const name = field.name;\n            const value = field.value || field.name;\n            const checkedHtml = currentFields.indexOf(value) === -1 ? ' checked' : '';\n            html += '<label>';\n            html += '<input type=\"checkbox\" is=\"emby-checkbox\" class=\"selectLockedField\" data-value=\"' + value + '\"' + checkedHtml + '/>';\n            html += '<span>' + name + '</span>';\n            html += '</label>';\n        }\n        return html;\n    }\n\n    function fillMetadataSettings(context, item, lockedFields) {\n        const container = context.querySelector('.providerSettingsContainer');\n        lockedFields = lockedFields || [];\n\n        const lockedFieldsList = [\n            { name: globalize.translate('Name'), value: 'Name' },\n            { name: globalize.translate('Overview'), value: 'Overview' },\n            { name: globalize.translate('Genres'), value: 'Genres' },\n            { name: globalize.translate('ParentalRating'), value: 'OfficialRating' },\n            { name: globalize.translate('People'), value: 'Cast' }\n        ];\n\n        if (item.Type === 'Person') {\n            lockedFieldsList.push({ name: globalize.translate('BirthLocation'), value: 'ProductionLocations' });\n        } else {\n            lockedFieldsList.push({ name: globalize.translate('ProductionLocations'), value: 'ProductionLocations' });\n        }\n\n        if (item.Type === 'Series') {\n            lockedFieldsList.push({ name: globalize.translate('Runtime'), value: 'Runtime' });\n        }\n\n        lockedFieldsList.push({ name: globalize.translate('Studios'), value: 'Studios' });\n        lockedFieldsList.push({ name: globalize.translate('Tags'), value: 'Tags' });\n\n        let html = '';\n\n        html += '<h2>' + globalize.translate('HeaderEnabledFields') + '</h2>';\n        html += '<p>' + globalize.translate('HeaderEnabledFieldsHelp') + '</p>';\n        html += getLockedFieldsHtml(lockedFieldsList, lockedFields);\n        container.innerHTML = html;\n    }\n\n    function reload(context, itemId, serverId) {\n        loading.show();\n\n        Promise.all([getItem(itemId, serverId), getEditorConfig(itemId, serverId)]).then(function (responses) {\n            const item = responses[0];\n            metadataEditorInfo = responses[1];\n\n            currentItem = item;\n\n            const languages = metadataEditorInfo.Cultures;\n            const countries = metadataEditorInfo.Countries;\n\n            renderContentTypeOptions(context, metadataEditorInfo);\n\n            loadExternalIds(context, item, metadataEditorInfo.ExternalIdInfos);\n\n            populateLanguages(context.querySelector('#selectLanguage'), languages);\n            populateCountries(context.querySelector('#selectCountry'), countries);\n\n            setFieldVisibilities(context, item);\n            fillItemInfo(context, item, metadataEditorInfo.ParentalRatingOptions);\n\n            if (item.MediaType === 'Video' && item.Type !== 'Episode' && item.Type !== 'TvChannel') {\n                showElement('#fldTagline', context);\n            } else {\n                hideElement('#fldTagline', context);\n            }\n\n            loading.hide();\n        });\n    }\n\n    function centerFocus(elem, horiz, on) {\n        import('scrollHelper').then(({default: scrollHelper}) => {\n            const fn = on ? 'on' : 'off';\n            scrollHelper.centerFocus[fn](elem, horiz);\n        });\n    }\n\n    function show(itemId, serverId, resolve, reject) {\n        loading.show();\n\n        import('text!./metadataEditor.template.html').then(({default: template}) => {\n            const dialogOptions = {\n                removeOnClose: true,\n                scrollY: false\n            };\n\n            if (layoutManager.tv) {\n                dialogOptions.size = 'fullscreen';\n            } else {\n                dialogOptions.size = 'small';\n            }\n\n            const dlg = dialogHelper.createDialog(dialogOptions);\n\n            dlg.classList.add('formDialog');\n\n            let html = '';\n\n            html += globalize.translateHtml(template, 'core');\n\n            dlg.innerHTML = html;\n\n            if (layoutManager.tv) {\n                centerFocus(dlg.querySelector('.formDialogContent'), false, true);\n            }\n\n            dialogHelper.open(dlg);\n\n            dlg.addEventListener('close', function () {\n                if (layoutManager.tv) {\n                    centerFocus(dlg.querySelector('.formDialogContent'), false, false);\n                }\n\n                resolve();\n            });\n\n            currentContext = dlg;\n\n            init(dlg, connectionManager.getApiClient(serverId));\n\n            reload(dlg, itemId, serverId);\n        });\n    }\n\n    export default {\n        show: function (itemId, serverId) {\n            return new Promise(function (resolve, reject) {\n                return show(itemId, serverId, resolve, reject);\n            });\n        },\n\n        embed: function (elem, itemId, serverId) {\n            return new Promise(function (resolve, reject) {\n                loading.show();\n\n                import('text!./metadataEditor.template.html').then(({default: template}) => {\n                    elem.innerHTML = globalize.translateHtml(template, 'core');\n\n                    elem.querySelector('.formDialogFooter').classList.remove('formDialogFooter');\n                    elem.querySelector('.btnClose').classList.add('hide');\n                    elem.querySelector('.btnHeaderSave').classList.remove('hide');\n                    elem.querySelector('.btnCancel').classList.add('hide');\n\n                    currentContext = elem;\n\n                    init(elem, connectionManager.getApiClient(serverId));\n                    reload(elem, itemId, serverId);\n\n                    focusManager.autoFocus(elem);\n                });\n            });\n        }\n    };\n\n/* eslint-enable indent */\n"]}