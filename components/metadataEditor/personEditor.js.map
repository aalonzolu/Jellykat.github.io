{"version":3,"sources":["components/metadataEditor/personEditor.js"],"names":["define","_require","_exports","_dialogHelper","_layoutManager","_globalize","_paperIconButtonLight","_embyInput","_embySelect","_formdialog","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","centerFocus","elem","horiz","on","Promise","_resolve","_reject","imported","then","_ref","scrollHelper","fn","value","_default","show","person","resolve","reject","_ref2","template","dialogOptions","removeOnClose","scrollY","layoutManager","tv","size","dlg","dialogHelper","createDialog","classList","add","html","submitted","globalize","translateHtml","innerHTML","querySelector","Name","Type","Role","open","addEventListener","e","this","remove","close","preventDefault","dispatchEvent","CustomEvent","bubbles"],"mappings":"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","file":"personEditor.js","sourcesContent":["import dialogHelper from 'dialogHelper';\nimport layoutManager from 'layoutManager';\nimport globalize from 'globalize';\nimport 'paper-icon-button-light';\nimport 'emby-input';\nimport 'emby-select';\nimport 'css!./../formdialog';\n\n/* eslint-disable indent */\n\n    function centerFocus(elem, horiz, on) {\n        import('scrollHelper').then(({default: scrollHelper}) => {\n            const fn = on ? 'on' : 'off';\n            scrollHelper.centerFocus[fn](elem, horiz);\n        });\n    }\n\n    function show(person) {\n        return new Promise(function (resolve, reject) {\n            import('text!./personEditor.template.html').then(({default: template}) => {\n                const dialogOptions = {\n                    removeOnClose: true,\n                    scrollY: false\n                };\n\n                if (layoutManager.tv) {\n                    dialogOptions.size = 'fullscreen';\n                } else {\n                    dialogOptions.size = 'small';\n                }\n\n                const dlg = dialogHelper.createDialog(dialogOptions);\n\n                dlg.classList.add('formDialog');\n\n                let html = '';\n                let submitted = false;\n\n                html += globalize.translateHtml(template, 'core');\n\n                dlg.innerHTML = html;\n\n                dlg.querySelector('.txtPersonName', dlg).value = person.Name || '';\n                dlg.querySelector('.selectPersonType', dlg).value = person.Type || '';\n                dlg.querySelector('.txtPersonRole', dlg).value = person.Role || '';\n\n                if (layoutManager.tv) {\n                    centerFocus(dlg.querySelector('.formDialogContent'), false, true);\n                }\n\n                dialogHelper.open(dlg);\n\n                dlg.addEventListener('close', function () {\n                    if (layoutManager.tv) {\n                        centerFocus(dlg.querySelector('.formDialogContent'), false, false);\n                    }\n\n                    if (submitted) {\n                        resolve(person);\n                    } else {\n                        reject();\n                    }\n                });\n\n                dlg.querySelector('.selectPersonType').addEventListener('change', function (e) {\n                    if (this.value === 'Actor') {\n                        dlg.querySelector('.fldRole').classList.remove('hide');\n                    } else {\n                        dlg.querySelector('.fldRole').classList.add('hide');\n                    }\n                });\n\n                dlg.querySelector('.btnCancel').addEventListener('click', function (e) {\n                    dialogHelper.close(dlg);\n                });\n\n                dlg.querySelector('form').addEventListener('submit', function (e) {\n                    submitted = true;\n\n                    person.Name = dlg.querySelector('.txtPersonName', dlg).value;\n                    person.Type = dlg.querySelector('.selectPersonType', dlg).value;\n                    person.Role = dlg.querySelector('.txtPersonRole', dlg).value || null;\n\n                    dialogHelper.close(dlg);\n\n                    e.preventDefault();\n                    return false;\n                });\n\n                dlg.querySelector('.selectPersonType').dispatchEvent(new CustomEvent('change', {\n                    bubbles: true\n                }));\n            });\n        });\n    }\n\nexport default {\n    show: show\n};\n\n/* eslint-enable indent */\n"]}