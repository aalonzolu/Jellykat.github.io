{"version":3,"sources":["components/imageDownloader/imageDownloader.js"],"names":["define","_require","_exports","_dom","_loading","_apphost","_dialogHelper","_connectionManager","_imageLoader","_browser","_layoutManager","_scrollHelper","_globalize","_embyCheckbox","_paperIconButtonLight","_embyButton","_formDialogStyle","_cardStyle","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","Object","defineProperty","value","show","currentItemId","currentItemType","currentResolve","currentReject","selectedProvider","enableFocusTransform","browser","slow","edge","hasChanges","browsableImagePageSize","browsableImageStartIndex","browsableImageType","getBaseRemoteOptions","options","itemId","reloadBrowsableImages","page","apiClient","loading","type","startIndex","limit","IncludeAllLanguages","querySelector","checked","provider","ProviderName","getAvailableRemoteImages","then","result","renderRemoteImages","imagesResult","imageType","innerHTML","getPagingHtml","totalRecordCount","html","recordsEnd","Math","min","showControls","startAtDisplay","globalize","translate","TotalRecordCount","i","length","Images","getRemoteImageHtml","availableImagesList","imageLoader","lazyChildren","btnNextPage","btnPreviousPage","addEventListener","providersHtml","Providers","map","p","selectImageProvider","hide","downloadRemoteImage","url","Type","ImageUrl","dlg","dom","parentWithClass","dialogHelper","close","getDisplayUrl","getUrl","imageUrl","image","shape","tagName","layoutManager","tv","enableFooterButtons","cssClass","Url","appHost","supports","Width","Height","Language","CommunityRating","RatingType","toFixed","VoteCount","showEditor","serverId","itemType","Promise","_resolve","_reject","imported","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","_ref","template","connectionManager","getApiClient","dialogOptions","removeOnClose","size","createDialog","translateHtml","scrollHelper","centerFocus","on","onDialogClosed","open","editorContent","initEditor","this","e","btnDownloadRemoteImage","target","card","getAttribute","btnImageCard","off","resolve","reject","_default"],"mappings":"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","file":"imageDownloader.js","sourcesContent":["import dom from 'dom';\nimport loading from 'loading';\nimport appHost from 'apphost';\nimport dialogHelper from 'dialogHelper';\nimport connectionManager from 'connectionManager';\nimport imageLoader from 'imageLoader';\nimport browser from 'browser';\nimport layoutManager from 'layoutManager';\nimport scrollHelper from 'scrollHelper';\nimport globalize from 'globalize';\nimport 'emby-checkbox';\nimport 'paper-icon-button-light';\nimport 'emby-button';\nimport 'formDialogStyle';\nimport 'cardStyle';\n\n/* eslint-disable indent */\n\n    const enableFocusTransform = !browser.slow && !browser.edge;\n\n    let currentItemId;\n    let currentItemType;\n    let currentResolve;\n    let currentReject;\n    let hasChanges = false;\n\n    // These images can be large and we're seeing memory problems in safari\n    const browsableImagePageSize = browser.slow ? 6 : 30;\n\n    let browsableImageStartIndex = 0;\n    let browsableImageType = 'Primary';\n    let selectedProvider;\n\n    function getBaseRemoteOptions() {\n        const options = {};\n\n        options.itemId = currentItemId;\n\n        return options;\n    }\n\n    function reloadBrowsableImages(page, apiClient) {\n        loading.show();\n\n        const options = getBaseRemoteOptions();\n\n        options.type = browsableImageType;\n        options.startIndex = browsableImageStartIndex;\n        options.limit = browsableImagePageSize;\n        options.IncludeAllLanguages = page.querySelector('#chkAllLanguages').checked;\n\n        const provider = selectedProvider || '';\n\n        if (provider) {\n            options.ProviderName = provider;\n        }\n\n        apiClient.getAvailableRemoteImages(options).then(function (result) {\n            renderRemoteImages(page, apiClient, result, browsableImageType, options.startIndex, options.limit);\n\n            page.querySelector('#selectBrowsableImageType').value = browsableImageType;\n\n            const providersHtml = result.Providers.map(function (p) {\n                return '<option value=\"' + p + '\">' + p + '</option>';\n            });\n\n            const selectImageProvider = page.querySelector('#selectImageProvider');\n            selectImageProvider.innerHTML = '<option value=\"\">' + globalize.translate('All') + '</option>' + providersHtml;\n            selectImageProvider.value = provider;\n\n            loading.hide();\n        });\n    }\n\n    function renderRemoteImages(page, apiClient, imagesResult, imageType, startIndex, limit) {\n        page.querySelector('.availableImagesPaging').innerHTML = getPagingHtml(startIndex, limit, imagesResult.TotalRecordCount);\n\n        let html = '';\n\n        for (let i = 0, length = imagesResult.Images.length; i < length; i++) {\n            html += getRemoteImageHtml(imagesResult.Images[i], imageType, apiClient);\n        }\n\n        const availableImagesList = page.querySelector('.availableImagesList');\n        availableImagesList.innerHTML = html;\n        imageLoader.lazyChildren(availableImagesList);\n\n        const btnNextPage = page.querySelector('.btnNextPage');\n        const btnPreviousPage = page.querySelector('.btnPreviousPage');\n\n        if (btnNextPage) {\n            btnNextPage.addEventListener('click', function () {\n                browsableImageStartIndex += browsableImagePageSize;\n                reloadBrowsableImages(page, apiClient);\n            });\n        }\n\n        if (btnPreviousPage) {\n            btnPreviousPage.addEventListener('click', function () {\n                browsableImageStartIndex -= browsableImagePageSize;\n                reloadBrowsableImages(page, apiClient);\n            });\n        }\n    }\n\n    function getPagingHtml(startIndex, limit, totalRecordCount) {\n        let html = '';\n\n        const recordsEnd = Math.min(startIndex + limit, totalRecordCount);\n\n        // 20 is the minimum page size\n        const showControls = totalRecordCount > limit;\n\n        html += '<div class=\"listPaging\">';\n\n        html += '<span style=\"margin-right: 10px;\">';\n\n        const startAtDisplay = totalRecordCount ? startIndex + 1 : 0;\n        html += globalize.translate('ListPaging', startAtDisplay, recordsEnd, totalRecordCount);\n\n        html += '</span>';\n\n        if (showControls) {\n            html += '<div data-role=\"controlgroup\" data-type=\"horizontal\" style=\"display:inline-block;\">';\n\n            html += '<button is=\"paper-icon-button-light\" title=\"' + globalize.translate('Previous') + '\" class=\"btnPreviousPage autoSize\" ' + (startIndex ? '' : 'disabled') + '><span class=\"material-icons arrow_back\"></span></button>';\n            html += '<button is=\"paper-icon-button-light\" title=\"' + globalize.translate('Next') + '\" class=\"btnNextPage autoSize\" ' + (startIndex + limit >= totalRecordCount ? 'disabled' : '') + '><span class=\"material-icons arrow_forward\"></span></button>';\n            html += '</div>';\n        }\n\n        html += '</div>';\n\n        return html;\n    }\n\n    function downloadRemoteImage(page, apiClient, url, type, provider) {\n        const options = getBaseRemoteOptions();\n\n        options.Type = type;\n        options.ImageUrl = url;\n        options.ProviderName = provider;\n\n        loading.show();\n\n        apiClient.downloadRemoteImage(options).then(function () {\n            hasChanges = true;\n            const dlg = dom.parentWithClass(page, 'dialog');\n            dialogHelper.close(dlg);\n        });\n    }\n\n    function getDisplayUrl(url, apiClient) {\n        return apiClient.getUrl('Images/Remote', { imageUrl: url });\n    }\n\n    function getRemoteImageHtml(image, imageType, apiClient) {\n        const tagName = layoutManager.tv ? 'button' : 'div';\n        const enableFooterButtons = !layoutManager.tv;\n\n        // TODO move card creation code to Card component\n\n        let html = '';\n\n        let cssClass = 'card scalableCard imageEditorCard';\n        const cardBoxCssClass = 'cardBox visualCardBox';\n\n        let shape;\n        if (imageType === 'Backdrop' || imageType === 'Art' || imageType === 'Thumb' || imageType === 'Logo') {\n            shape = 'backdrop';\n        } else if (imageType === 'Banner') {\n            shape = 'banner';\n        } else if (imageType === 'Disc') {\n            shape = 'square';\n        } else {\n            if (currentItemType === 'Episode') {\n                shape = 'backdrop';\n            } else if (currentItemType === 'MusicAlbum' || currentItemType === 'MusicArtist') {\n                shape = 'square';\n            } else {\n                shape = 'portrait';\n            }\n        }\n\n        cssClass += ' ' + shape + 'Card ' + shape + 'Card-scalable';\n        if (tagName === 'button') {\n            cssClass += ' btnImageCard';\n\n            if (layoutManager.tv) {\n                cssClass += ' show-focus';\n\n                if (enableFocusTransform) {\n                    cssClass += ' show-animation';\n                }\n            }\n\n            html += '<button type=\"button\" class=\"' + cssClass + '\"';\n        } else {\n            html += '<div class=\"' + cssClass + '\"';\n        }\n\n        html += ' data-imageprovider=\"' + image.ProviderName + '\" data-imageurl=\"' + image.Url + '\" data-imagetype=\"' + image.Type + '\"';\n\n        html += '>';\n\n        html += '<div class=\"' + cardBoxCssClass + '\">';\n        html += '<div class=\"cardScalable visualCardBox-cardScalable\" style=\"background-color:transparent;\">';\n        html += '<div class=\"cardPadder-' + shape + '\"></div>';\n        html += '<div class=\"cardContent\">';\n\n        if (layoutManager.tv || !appHost.supports('externallinks')) {\n            html += '<div class=\"cardImageContainer lazy\" data-src=\"' + getDisplayUrl(image.Url, apiClient) + '\" style=\"background-position:center center;background-size:contain;\"></div>';\n        } else {\n            html += '<a is=\"emby-linkbutton\" target=\"_blank\" href=\"' + getDisplayUrl(image.Url, apiClient) + '\" class=\"button-link cardImageContainer lazy\" data-src=\"' + getDisplayUrl(image.Url, apiClient) + '\" style=\"background-position:center center;background-size:contain\"></a>';\n        }\n\n        html += '</div>';\n        html += '</div>';\n\n        // begin footer\n        html += '<div class=\"cardFooter visualCardBox-cardFooter\">';\n\n        html += '<div class=\"cardText cardTextCentered\">' + image.ProviderName + '</div>';\n\n        if (image.Width || image.Height || image.Language) {\n            html += '<div class=\"cardText cardText-secondary cardTextCentered\">';\n\n            if (image.Width && image.Height) {\n                html += image.Width + ' x ' + image.Height;\n\n                if (image.Language) {\n                    html += ' • ' + image.Language;\n                }\n            } else {\n                if (image.Language) {\n                    html += image.Language;\n                }\n            }\n\n            html += '</div>';\n        }\n\n        if (image.CommunityRating != null) {\n            html += '<div class=\"cardText cardText-secondary cardTextCentered\">';\n\n            if (image.RatingType === 'Likes') {\n                html += image.CommunityRating + (image.CommunityRating === 1 ? ' like' : ' likes');\n            } else {\n                if (image.CommunityRating) {\n                    html += image.CommunityRating.toFixed(1);\n\n                    if (image.VoteCount) {\n                        html += ' • ' + image.VoteCount + (image.VoteCount === 1 ? ' vote' : ' votes');\n                    }\n                } else {\n                    html += 'Unrated';\n                }\n            }\n\n            html += '</div>';\n        }\n\n        if (enableFooterButtons) {\n            html += '<div class=\"cardText cardTextCentered\">';\n\n            html += '<button is=\"paper-icon-button-light\" class=\"btnDownloadRemoteImage autoSize\" raised\" title=\"' + globalize.translate('Download') + '\"><span class=\"material-icons cloud_download\"></span></button>';\n            html += '</div>';\n        }\n\n        html += '</div>';\n        // end footer\n\n        html += '</div>';\n\n        html += '</' + tagName + '>';\n\n        return html;\n    }\n\n    function initEditor(page, apiClient) {\n        page.querySelector('#selectBrowsableImageType').addEventListener('change', function () {\n            browsableImageType = this.value;\n            browsableImageStartIndex = 0;\n            selectedProvider = null;\n\n            reloadBrowsableImages(page, apiClient);\n        });\n\n        page.querySelector('#selectImageProvider').addEventListener('change', function () {\n            browsableImageStartIndex = 0;\n            selectedProvider = this.value;\n\n            reloadBrowsableImages(page, apiClient);\n        });\n\n        page.querySelector('#chkAllLanguages').addEventListener('change', function () {\n            browsableImageStartIndex = 0;\n\n            reloadBrowsableImages(page, apiClient);\n        });\n\n        page.addEventListener('click', function (e) {\n            const btnDownloadRemoteImage = dom.parentWithClass(e.target, 'btnDownloadRemoteImage');\n            if (btnDownloadRemoteImage) {\n                const card = dom.parentWithClass(btnDownloadRemoteImage, 'card');\n                downloadRemoteImage(page, apiClient, card.getAttribute('data-imageurl'), card.getAttribute('data-imagetype'), card.getAttribute('data-imageprovider'));\n                return;\n            }\n\n            const btnImageCard = dom.parentWithClass(e.target, 'btnImageCard');\n            if (btnImageCard) {\n                downloadRemoteImage(page, apiClient, btnImageCard.getAttribute('data-imageurl'), btnImageCard.getAttribute('data-imagetype'), btnImageCard.getAttribute('data-imageprovider'));\n            }\n        });\n    }\n\n    function showEditor(itemId, serverId, itemType) {\n        loading.show();\n\n        import('text!./imageDownloader.template.html').then(({default: template}) => {\n            const apiClient = connectionManager.getApiClient(serverId);\n\n            currentItemId = itemId;\n            currentItemType = itemType;\n\n            const dialogOptions = {\n                removeOnClose: true\n            };\n\n            if (layoutManager.tv) {\n                dialogOptions.size = 'fullscreen';\n            } else {\n                dialogOptions.size = 'small';\n            }\n\n            const dlg = dialogHelper.createDialog(dialogOptions);\n\n            dlg.innerHTML = globalize.translateHtml(template, 'core');\n\n            if (layoutManager.tv) {\n                scrollHelper.centerFocus.on(dlg, false);\n            }\n\n            // Has to be assigned a z-index after the call to .open()\n            dlg.addEventListener('close', onDialogClosed);\n\n            dialogHelper.open(dlg);\n\n            const editorContent = dlg.querySelector('.formDialogContent');\n            initEditor(editorContent, apiClient);\n\n            dlg.querySelector('.btnCancel').addEventListener('click', function () {\n                dialogHelper.close(dlg);\n            });\n\n            reloadBrowsableImages(editorContent, apiClient);\n        });\n    }\n\n    function onDialogClosed() {\n        const dlg = this;\n\n        if (layoutManager.tv) {\n            scrollHelper.centerFocus.off(dlg, false);\n        }\n\n        loading.hide();\n        if (hasChanges) {\n            currentResolve();\n        } else {\n            currentReject();\n        }\n    }\n\nexport function show(itemId, serverId, itemType, imageType) {\n    return new Promise(function (resolve, reject) {\n        currentResolve = resolve;\n        currentReject = reject;\n        hasChanges = false;\n        browsableImageStartIndex = 0;\n        browsableImageType = imageType || 'Primary';\n        selectedProvider = null;\n        showEditor(itemId, serverId, itemType);\n    });\n}\n\nexport default {\n    show: show\n};\n\n/* eslint-enable indent */\n"]}