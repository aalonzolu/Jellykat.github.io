{"version":3,"sources":["components/accessSchedule/accessSchedule.js"],"names":["define","_require","_exports","_dialogHelper","_datetime","_globalize","_embySelect","_paperIconButtonLight","_formDialogStyle","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","getDisplayTime","hours","minutes","pct","parseInt","datetime","Date","show","options","Promise","resolve","reject","_resolve","_reject","imported","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","then","_ref2","template","dlg","dialogHelper","createDialog","removeOnClose","size","classList","add","html","globalize","translateHtml","innerHTML","populateHours","context","i","concat","querySelector","loadSchedule","_ref","DayOfWeek","StartHour","EndHour","value","schedule","open","addEventListener","submitted","close","event","submitSchedule","updatedSchedule","parseFloat","alert","translate","assign","preventDefault","_default"],"mappings":"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","file":"accessSchedule.js","sourcesContent":["/* eslint-disable indent */\n\n/**\n * Module for controlling user parental control from.\n * @module components/accessSchedule/accessSchedule\n */\n\nimport dialogHelper from 'dialogHelper';\nimport datetime from 'datetime';\nimport globalize from 'globalize';\nimport 'emby-select';\nimport 'paper-icon-button-light';\nimport 'formDialogStyle';\n\n    function getDisplayTime(hours) {\n        let minutes = 0;\n        const pct = hours % 1;\n\n        if (pct) {\n            minutes = parseInt(60 * pct);\n        }\n\n        return datetime.getDisplayTime(new Date(2000, 1, 1, hours, minutes, 0, 0));\n    }\n\n    function populateHours(context) {\n        let html = '';\n\n        for (let i = 0; i < 24; i++) {\n            html += `<option value=\"${i}\">${getDisplayTime(i)}</option>`;\n        }\n\n        html += `<option value=\"24\">${getDisplayTime(0)}</option>`;\n        context.querySelector('#selectStart').innerHTML = html;\n        context.querySelector('#selectEnd').innerHTML = html;\n    }\n\n    function loadSchedule(context, {DayOfWeek, StartHour, EndHour}) {\n        context.querySelector('#selectDay').value = DayOfWeek || 'Sunday';\n        context.querySelector('#selectStart').value = StartHour || 0;\n        context.querySelector('#selectEnd').value = EndHour || 0;\n    }\n\n    function submitSchedule(context, options) {\n        const updatedSchedule = {\n            DayOfWeek: context.querySelector('#selectDay').value,\n            StartHour: context.querySelector('#selectStart').value,\n            EndHour: context.querySelector('#selectEnd').value\n        };\n\n        if (parseFloat(updatedSchedule.StartHour) >= parseFloat(updatedSchedule.EndHour)) {\n            return void alert(globalize.translate('ErrorStartHourGreaterThanEnd'));\n        }\n\n        context.submitted = true;\n        options.schedule = Object.assign(options.schedule, updatedSchedule);\n        dialogHelper.close(context);\n    }\n\n    export function show(options) {\n        return new Promise((resolve, reject) => {\n            import('text!./accessSchedule.template.html').then(({default: template}) => {\n                const dlg = dialogHelper.createDialog({\n                    removeOnClose: true,\n                    size: 'small'\n                });\n                dlg.classList.add('formDialog');\n                let html = '';\n                html += globalize.translateHtml(template);\n                dlg.innerHTML = html;\n                populateHours(dlg);\n                loadSchedule(dlg, options.schedule);\n                dialogHelper.open(dlg);\n                dlg.addEventListener('close', () => {\n                    if (dlg.submitted) {\n                        resolve(options.schedule);\n                    } else {\n                        reject();\n                    }\n                });\n                dlg.querySelector('.btnCancel').addEventListener('click', () => {\n                    dialogHelper.close(dlg);\n                });\n                dlg.querySelector('form').addEventListener('submit', event => {\n                    submitSchedule(dlg, options);\n                    event.preventDefault();\n                    return false;\n                });\n            });\n        });\n    }\n\n/* eslint-enable indent */\n\nexport default {\n    show: show\n};\n"]}