{"version":3,"sources":["components/tvproviders/xmltv.js"],"names":["define","_require","_exports","_jQuery","_loading","_globalize","_embyCheckbox","_embyInput","_listViewStyle","_paperIconButtonLight","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","Object","defineProperty","value","_default","page","providerId","options","reload","loading","show","ApiClient","getNamedConfiguration","then","config","getListingProvider","id","result","ListingProviders","filter","provider","Id","Promise","resolve","getJSON","getUrl","info","querySelector","Path","KidsCategories","join","NewsCategories","SportsCategories","MovieCategories","MoviePrefix","UserAgent","checked","EnableAllTuners","classList","add","remove","refreshTunerDevices","providerInfo","devices","html","i","length","device","enabledTuners","EnabledTuners","checkedAttribute","indexOf","FriendlyName","getTunerName","Type","Url","innerHTML","TunerHosts","hide","getCategories","txtInput","split","toLowerCase","onSelectPathClick","e","target","parents","_resolve","_reject","imported","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","_ref","picker","directoryBrowser","includeFiles","callback","path","txtPath","focus","close","self","this","submit","click","init","hideCancelButton","showCancelButton","toggle","hideSubmitButton","showSubmitButton","on","submitListingsForm","tuner","map","getAttribute","ajax","type","url","ValidateListings","data","JSON","stringify","contentType","showConfirmation","Dashboard","processServerConfigurationUpdateResult","Events","trigger","alert","message","globalize","translate","addEventListener","evt"],"mappings":"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","file":"xmltv.js","sourcesContent":["import $ from 'jQuery';\nimport loading from 'loading';\nimport globalize from 'globalize';\nimport 'emby-checkbox';\nimport 'emby-input';\nimport 'listViewStyle';\nimport 'paper-icon-button-light';\n\nexport default function (page, providerId, options) {\n    function getListingProvider(config, id) {\n        if (config && id) {\n            const result = config.ListingProviders.filter(function (provider) {\n                return provider.Id === id;\n            })[0];\n\n            if (result) {\n                return Promise.resolve(result);\n            }\n\n            return getListingProvider();\n        }\n\n        return ApiClient.getJSON(ApiClient.getUrl('LiveTv/ListingProviders/Default'));\n    }\n\n    function reload() {\n        loading.show();\n        ApiClient.getNamedConfiguration('livetv').then(function (config) {\n            getListingProvider(config, providerId).then(function (info) {\n                page.querySelector('.txtPath').value = info.Path || '';\n                page.querySelector('.txtKids').value = (info.KidsCategories || []).join('|');\n                page.querySelector('.txtNews').value = (info.NewsCategories || []).join('|');\n                page.querySelector('.txtSports').value = (info.SportsCategories || []).join('|');\n                page.querySelector('.txtMovies').value = (info.MovieCategories || []).join('|');\n                page.querySelector('.txtMoviePrefix').value = info.MoviePrefix || '';\n                page.querySelector('.txtUserAgent').value = info.UserAgent || '';\n                page.querySelector('.chkAllTuners').checked = info.EnableAllTuners;\n\n                if (page.querySelector('.chkAllTuners').checked) {\n                    page.querySelector('.selectTunersSection').classList.add('hide');\n                } else {\n                    page.querySelector('.selectTunersSection').classList.remove('hide');\n                }\n\n                refreshTunerDevices(page, info, config.TunerHosts);\n                loading.hide();\n            });\n        });\n    }\n\n    function getCategories(txtInput) {\n        const value = txtInput.value;\n\n        if (value) {\n            return value.split('|');\n        }\n\n        return [];\n    }\n\n    function submitListingsForm() {\n        loading.show();\n        const id = providerId;\n        ApiClient.getNamedConfiguration('livetv').then(function (config) {\n            const info = config.ListingProviders.filter(function (provider) {\n                return provider.Id === id;\n            })[0] || {};\n            info.Type = 'xmltv';\n            info.Path = page.querySelector('.txtPath').value;\n            info.MoviePrefix = page.querySelector('.txtMoviePrefix').value || null;\n            info.UserAgent = page.querySelector('.txtUserAgent').value || null;\n            info.MovieCategories = getCategories(page.querySelector('.txtMovies'));\n            info.KidsCategories = getCategories(page.querySelector('.txtKids'));\n            info.NewsCategories = getCategories(page.querySelector('.txtNews'));\n            info.SportsCategories = getCategories(page.querySelector('.txtSports'));\n            info.EnableAllTuners = page.querySelector('.chkAllTuners').checked;\n            info.EnabledTuners = info.EnableAllTuners ? [] : $('.chkTuner', page).get().filter(function (tuner) {\n                return tuner.checked;\n            }).map(function (tuner) {\n                return tuner.getAttribute('data-id');\n            });\n            ApiClient.ajax({\n                type: 'POST',\n                url: ApiClient.getUrl('LiveTv/ListingProviders', {\n                    ValidateListings: true\n                }),\n                data: JSON.stringify(info),\n                contentType: 'application/json'\n            }).then(function (result) {\n                loading.hide();\n\n                if (options.showConfirmation !== false) {\n                    Dashboard.processServerConfigurationUpdateResult();\n                }\n\n                Events.trigger(self, 'submitted');\n            }, function () {\n                loading.hide();\n                Dashboard.alert({\n                    message: globalize.translate('ErrorAddingXmlTvFile')\n                });\n            });\n        });\n    }\n\n    function getTunerName(providerId) {\n        switch (providerId = providerId.toLowerCase()) {\n            case 'm3u':\n                return 'M3U Playlist';\n            case 'hdhomerun':\n                return 'HDHomerun';\n            case 'satip':\n                return 'DVB';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    function refreshTunerDevices(page, providerInfo, devices) {\n        let html = '';\n\n        for (let i = 0, length = devices.length; i < length; i++) {\n            const device = devices[i];\n            html += '<div class=\"listItem\">';\n            const enabledTuners = providerInfo.EnabledTuners || [];\n            const isChecked = providerInfo.EnableAllTuners || enabledTuners.indexOf(device.Id) !== -1;\n            const checkedAttribute = isChecked ? ' checked' : '';\n            html += '<label class=\"listItemCheckboxContainer\"><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkTuner\" data-id=\"' + device.Id + '\" ' + checkedAttribute + '><span></span></label>';\n            html += '<div class=\"listItemBody two-line\">';\n            html += '<div class=\"listItemBodyText\">';\n            html += device.FriendlyName || getTunerName(device.Type);\n            html += '</div>';\n            html += '<div class=\"listItemBodyText secondary\">';\n            html += device.Url;\n            html += '</div>';\n            html += '</div>';\n            html += '</div>';\n        }\n\n        page.querySelector('.tunerList').innerHTML = html;\n    }\n\n    function onSelectPathClick(e) {\n        const page = $(e.target).parents('.xmltvForm')[0];\n\n        import('directorybrowser').then(({default: directoryBrowser}) => {\n            const picker = new directoryBrowser();\n            picker.show({\n                includeFiles: true,\n                callback: function (path) {\n                    if (path) {\n                        const txtPath = page.querySelector('.txtPath');\n                        txtPath.value = path;\n                        txtPath.focus();\n                    }\n                    picker.close();\n                }\n            });\n        });\n    }\n\n    const self = this;\n\n    self.submit = function () {\n        page.querySelector('.btnSubmitListings').click();\n    };\n\n    self.init = function () {\n        options = options || {};\n\n        // Only hide the buttons if explicitly set to false; default to showing if undefined or null\n        // FIXME: rename this option to clarify logic\n        const hideCancelButton = options.showCancelButton === false;\n        page.querySelector('.btnCancel').classList.toggle('hide', hideCancelButton);\n\n        const hideSubmitButton = options.showSubmitButton === false;\n        page.querySelector('.btnSubmitListings').classList.toggle('hide', hideSubmitButton);\n\n        $('form', page).on('submit', function () {\n            submitListingsForm();\n            return false;\n        });\n        page.querySelector('#btnSelectPath').addEventListener('click', onSelectPathClick);\n        page.querySelector('.chkAllTuners').addEventListener('change', function (evt) {\n            if (evt.target.checked) {\n                page.querySelector('.selectTunersSection').classList.add('hide');\n            } else {\n                page.querySelector('.selectTunersSection').classList.remove('hide');\n            }\n        });\n        reload();\n    };\n}\n"]}