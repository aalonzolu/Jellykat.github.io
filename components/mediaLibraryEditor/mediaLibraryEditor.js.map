{"version":3,"sources":["components/mediaLibraryEditor/mediaLibraryEditor.js"],"names":["define","_require","_exports","_jQuery","_loading","_dialogHelper","_dom","_libraryoptionseditor","_globalize","_embyButton","_listViewStyle","_paperIconButtonLight","_formDialogStyle","_embyToggle","_flexStyles","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","onEditLibrary","isCreating","loading","show","dlg","dom","parentWithClass","this","libraryOptions","libraryoptionseditor","getLibraryOptions","querySelector","assign","currentOptions","library","LibraryOptions","ApiClient","updateVirtualFolderOptions","ItemId","then","hasChanges","hide","dialogHelper","close","onListItemClick","e","listItem","target","index","parseInt","getAttribute","pathInfos","PathInfos","pathInfo","originalPath","Path","Locations","btnRemovePath","onRemoveClick","location","button","virtualFolder","Promise","_resolve","_reject","imported","_ref3","confirm","title","globalize","translate","text","confirmText","primary","refreshAfterChange","refresh","removeMediaPath","Name","refreshLibraryFromServer","_ref4","toast","showDirectoryBrowser","NetworkPath","getFolderHtml","html","concat","page","getVirtualFolders","result","filter","f","renderLibrary","options","length","map","p","CollectionType","classList","add","remove","innerHTML","join","onAddButtonClick","context","networkPath","_ref5","picker","directoryBrowser","enableNetworkSharePath","pathReadOnly","path","networkSharePath","callback","updateMediaLocation","updateMediaPath","_ref2","addMediaLocation","addMediaPath","_ref","onToggleAdvancedChange","setAdvancedVisible","checked","onDialogClosed","currentDeferred","resolveWith","value","showEditor","_classCallCheck","instance","Constructor","TypeError","deferred","jQuery","Deferred","_ref6","template","createDialog","size","modal","removeOnClose","scrollY","translateHtml","initEditor","addEventListener","embed","open","promise","_default"],"mappings":"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","file":"mediaLibraryEditor.js","sourcesContent":["/* eslint-disable indent */\n\n/**\n * Module for media library editor.\n * @module components/mediaLibraryEditor/mediaLibraryEditor\n */\n\nimport jQuery from 'jQuery';\nimport loading from 'loading';\nimport dialogHelper from 'dialogHelper';\nimport dom from 'dom';\nimport libraryoptionseditor from 'components/libraryoptionseditor/libraryoptionseditor';\nimport globalize from 'globalize';\nimport 'emby-button';\nimport 'listViewStyle';\nimport 'paper-icon-button-light';\nimport 'formDialogStyle';\nimport 'emby-toggle';\nimport 'flexStyles';\n\n    function onEditLibrary() {\n        if (isCreating) {\n            return false;\n        }\n\n        isCreating = true;\n        loading.show();\n        const dlg = dom.parentWithClass(this, 'dlg-libraryeditor');\n        let libraryOptions = libraryoptionseditor.getLibraryOptions(dlg.querySelector('.libraryOptions'));\n        libraryOptions = Object.assign(currentOptions.library.LibraryOptions || {}, libraryOptions);\n        ApiClient.updateVirtualFolderOptions(currentOptions.library.ItemId, libraryOptions).then(() => {\n            hasChanges = true;\n            isCreating = false;\n            loading.hide();\n            dialogHelper.close(dlg);\n        }, () => {\n            isCreating = false;\n            loading.hide();\n        });\n        return false;\n    }\n\n    function addMediaLocation(page, path, networkSharePath) {\n        const virtualFolder = currentOptions.library;\n        const refreshAfterChange = currentOptions.refresh;\n        ApiClient.addMediaPath(virtualFolder.Name, path, networkSharePath, refreshAfterChange).then(() => {\n            hasChanges = true;\n            refreshLibraryFromServer(page);\n        }, () => {\n            import('toast').then(({default: toast}) => {\n                toast(globalize.translate('ErrorAddingMediaPathToVirtualFolder'));\n            });\n        });\n    }\n\n    function updateMediaLocation(page, path, networkSharePath) {\n        const virtualFolder = currentOptions.library;\n        ApiClient.updateMediaPath(virtualFolder.Name, {\n            Path: path,\n            NetworkPath: networkSharePath\n        }).then(() => {\n            hasChanges = true;\n            refreshLibraryFromServer(page);\n        }, () => {\n            import('toast').then(({default: toast}) => {\n                toast(globalize.translate('ErrorAddingMediaPathToVirtualFolder'));\n            });\n        });\n    }\n\n    function onRemoveClick(btnRemovePath, location) {\n        const button = btnRemovePath;\n        const virtualFolder = currentOptions.library;\n\n        import('confirm').then(({default: confirm}) => {\n            confirm({\n                title: globalize.translate('HeaderRemoveMediaLocation'),\n                text: globalize.translate('MessageConfirmRemoveMediaLocation'),\n                confirmText: globalize.translate('Delete'),\n                primary: 'delete'\n            }).then(() => {\n                const refreshAfterChange = currentOptions.refresh;\n                ApiClient.removeMediaPath(virtualFolder.Name, location, refreshAfterChange).then(() => {\n                    hasChanges = true;\n                    refreshLibraryFromServer(dom.parentWithClass(button, 'dlg-libraryeditor'));\n                }, () => {\n                    import('toast').then(({default: toast}) => {\n                        toast(globalize.translate('ErrorDefault'));\n                    });\n                });\n            });\n        });\n    }\n\n    function onListItemClick(e) {\n        const listItem = dom.parentWithClass(e.target, 'listItem');\n\n        if (listItem) {\n            const index = parseInt(listItem.getAttribute('data-index'));\n            const pathInfos = (currentOptions.library.LibraryOptions || {}).PathInfos || [];\n            const pathInfo = index == null ? {} : pathInfos[index] || {};\n            const originalPath = pathInfo.Path || (index == null ? null : currentOptions.library.Locations[index]);\n            const btnRemovePath = dom.parentWithClass(e.target, 'btnRemovePath');\n\n            if (btnRemovePath) {\n                onRemoveClick(btnRemovePath, originalPath);\n                return;\n            }\n\n            showDirectoryBrowser(dom.parentWithClass(listItem, 'dlg-libraryeditor'), originalPath, pathInfo.NetworkPath);\n        }\n    }\n\n    function getFolderHtml(pathInfo, index) {\n        let html = '';\n        html += `<div class=\"listItem listItem-border lnkPath\" data-index=\"${index}\" style=\"padding-left:.5em;\">`;\n        html += `<div class=\"${pathInfo.NetworkPath ? 'listItemBody two-line' : 'listItemBody'}\">`;\n        html += '<h3 class=\"listItemBodyText\">';\n        html += pathInfo.Path;\n        html += '</h3>';\n\n        if (pathInfo.NetworkPath) {\n            html += `<div class=\"listItemBodyText secondary\">${pathInfo.NetworkPath}</div>`;\n        }\n\n        html += '</div>';\n        html += `<button type=\"button\" is=\"paper-icon-button-light\" class=\"listItemButton btnRemovePath\" data-index=\"${index}\"><span class=\"material-icons remove_circle\"></span></button>`;\n        html += '</div>';\n        return html;\n    }\n\n    function refreshLibraryFromServer(page) {\n        ApiClient.getVirtualFolders().then(result => {\n            const library = result.filter(f => {\n                return f.Name === currentOptions.library.Name;\n            })[0];\n\n            if (library) {\n                currentOptions.library = library;\n                renderLibrary(page, currentOptions);\n            }\n        });\n    }\n\n    function renderLibrary(page, options) {\n        let pathInfos = (options.library.LibraryOptions || {}).PathInfos || [];\n\n        if (!pathInfos.length) {\n            pathInfos = options.library.Locations.map(p => {\n                return {\n                    Path: p\n                };\n            });\n        }\n\n        if (options.library.CollectionType === 'boxsets') {\n            page.querySelector('.folders').classList.add('hide');\n        } else {\n            page.querySelector('.folders').classList.remove('hide');\n        }\n\n        page.querySelector('.folderList').innerHTML = pathInfos.map(getFolderHtml).join('');\n    }\n\n    function onAddButtonClick() {\n        showDirectoryBrowser(dom.parentWithClass(this, 'dlg-libraryeditor'));\n    }\n\n    function showDirectoryBrowser(context, originalPath, networkPath) {\n        import('directorybrowser').then(({default: directoryBrowser}) => {\n            const picker = new directoryBrowser();\n            picker.show({\n                enableNetworkSharePath: true,\n                pathReadOnly: originalPath != null,\n                path: originalPath,\n                networkSharePath: networkPath,\n                callback: function (path, networkSharePath) {\n                    if (path) {\n                        if (originalPath) {\n                            updateMediaLocation(context, originalPath, networkSharePath);\n                        } else {\n                            addMediaLocation(context, path, networkSharePath);\n                        }\n                    }\n\n                    picker.close();\n                }\n            });\n        });\n    }\n\n    function onToggleAdvancedChange() {\n        const dlg = dom.parentWithClass(this, 'dlg-libraryeditor');\n        libraryoptionseditor.setAdvancedVisible(dlg.querySelector('.libraryOptions'), this.checked);\n    }\n\n    function initEditor(dlg, options) {\n        renderLibrary(dlg, options);\n        dlg.querySelector('.btnAddFolder').addEventListener('click', onAddButtonClick);\n        dlg.querySelector('.folderList').addEventListener('click', onListItemClick);\n        dlg.querySelector('.chkAdvanced').addEventListener('change', onToggleAdvancedChange);\n        dlg.querySelector('.btnSubmit').addEventListener('click', onEditLibrary);\n        libraryoptionseditor.embed(dlg.querySelector('.libraryOptions'), options.library.CollectionType, options.library.LibraryOptions).then(() => {\n            onToggleAdvancedChange.call(dlg.querySelector('.chkAdvanced'));\n        });\n    }\n\n    function onDialogClosed() {\n        currentDeferred.resolveWith(null, [hasChanges]);\n    }\n\nexport class showEditor {\n    constructor(options) {\n        const deferred = jQuery.Deferred();\n        currentOptions = options;\n        currentDeferred = deferred;\n        hasChanges = false;\n        import('text!./components/mediaLibraryEditor/mediaLibraryEditor.template.html').then(({default: template}) => {\n            const dlg = dialogHelper.createDialog({\n                size: 'small',\n                modal: false,\n                removeOnClose: true,\n                scrollY: false\n            });\n            dlg.classList.add('dlg-libraryeditor');\n            dlg.classList.add('ui-body-a');\n            dlg.classList.add('background-theme-a');\n            dlg.classList.add('formDialog');\n            dlg.innerHTML = globalize.translateHtml(template);\n            dlg.querySelector('.formDialogHeaderTitle').innerHTML = options.library.Name;\n            initEditor(dlg, options);\n            dlg.addEventListener('close', onDialogClosed);\n            dialogHelper.open(dlg);\n            dlg.querySelector('.btnCancel').addEventListener('click', () => {\n                dialogHelper.close(dlg);\n            });\n            refreshLibraryFromServer(dlg);\n        });\n        return deferred.promise();\n    }\n}\n\n    let currentDeferred;\n    let currentOptions;\n    let hasChanges = false;\n    let isCreating = false;\n\n/* eslint-enable indent */\nexport default showEditor;\n"]}