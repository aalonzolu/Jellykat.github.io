{"version":3,"sources":["components/libraryoptionseditor/libraryoptionseditor.js"],"names":["define","_require","_exports","_globalize","_dom","_embyCheckbox","_embySelect","_embyInput","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_getRequireWildcardCache","WeakMap","cache","populateLanguages","parent","ApiClient","getCultures","languages","populateLanguagesIntoSelect","select","html","i","length","culture","concat","TwoLetterISOLanguageName","DisplayName","innerHTML","querySelector","populateLanguagesIntoList","element","ThreeLetterISOLanguageName","toLowerCase","populateCountries","getCountries","allCountries","TwoLetterISORegionName","populateRefreshInterval","globalize","translate","map","val","join","renderMetadataReaders","page","plugins","elem","classList","add","plugin","Name","remove","getMetadataFetchersForTypeHtml","availableTypeOptions","libraryOptionsForType","MetadataFetchers","getOrderedPlugins","MetadataFetcherOrder","Type","forEach","index","checkedHtml","includes","DefaultEnabled","getTypeOptions","allOptions","type","allTypeOptions","TypeOptions","typeOptions","renderMetadataFetchers","availableOptions","libraryOptions","renderSubtitleFetchers","SubtitleFetchers","SubtitleFetcherOrder","DisabledSubtitleFetchers","getImageFetchersForTypeHtml","ImageFetchers","ImageFetcherOrder","supportedImageTypes","SupportedImageTypes","renderImageFetchers","populateMetadataSettings","contentType","isNewLibrary","contains","getJSON","getUrl","LibraryContentType","IsNewLibrary","currentAvailableOptions","renderMetadataSavers","metadataSavers","MetadataSavers","MetadataReaders","catch","adjustSortableListElement","btnSortable","inner","previousSibling","title","showImageOptionsForType","_resolve","_reject","imported","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","hasOwnProperty","call","desc","set","_ref","ImageOptionsEditor","currentLibraryOptions","push","show","onImageFetchersContainerClick","e","btnImageOptionsForType","dom","parentWithClass","target","getAttribute","onSortableContainerClick","li","list","next","nextSibling","parentNode","removeChild","insertBefore","prev","Array","querySelectorAll","bindEvents","addEventListener","embed","_x","_x2","_x3","_embed","regeneratorRuntime","mark","_callee","response","template","promises","wrap","_callee$","_context","fetch","sent","text","translateHtml","all","setContentType","setLibraryOptions","stop","setAdvancedVisible","visible","elems","setAttribute","removeAttribute","getLibraryOptions","options","EnableArchiveMediaFiles","EnablePhotos","checked","EnableRealtimeMonitor","ExtractChapterImagesDuringLibraryScan","EnableChapterImageExtraction","DownloadImagesInAdvance","EnableInternetProviders","ImportMissingEpisodes","SaveLocalMetadata","EnableAutomaticSeriesGrouping","PreferredMetadataLanguage","MetadataCountryCode","SeasonZeroDisplayName","AutomaticRefreshIntervalDays","parseInt","EnableEmbeddedTitles","EnableEmbeddedEpisodeInfos","SkipSubtitlesIfEmbeddedSubtitlesPresent","SkipSubtitlesIfAudioTrackMatches","SaveSubtitlesWithMedia","RequirePerfectSubtitleMatch","filter","LocalMetadataReaderOrder","SubtitleDownloadLanguages","setSubtitleFetchersIntoOptions","setMetadataFetchersIntoOptions","sections","section","setImageFetchersIntoOptions","setImageOptionsIntoOptions","originalTypeOptions","originalTypeOption","ImageOptions","configuredOrder","slice","sort","a","b","indexOf","_default"],"mappings":"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","file":"libraryoptionseditor.js","sourcesContent":["/* eslint-disable indent */\n\n/**\n * Module for library options editor.\n * @module components/libraryoptionseditor/libraryoptionseditor\n */\n\nimport globalize from 'globalize';\nimport dom from 'dom';\nimport 'emby-checkbox';\nimport 'emby-select';\nimport 'emby-input';\n\n    function populateLanguages(parent) {\n        return ApiClient.getCultures().then(languages => {\n            populateLanguagesIntoSelect(parent.querySelector('#selectLanguage'), languages);\n            populateLanguagesIntoList(parent.querySelector('.subtitleDownloadLanguages'), languages);\n        });\n    }\n\n    function populateLanguagesIntoSelect(select, languages) {\n        let html = '';\n        html += \"<option value=''></option>\";\n        for (let i = 0; i < languages.length; i++) {\n            const culture = languages[i];\n            html += `<option value='${culture.TwoLetterISOLanguageName}'>${culture.DisplayName}</option>`;\n        }\n        select.innerHTML = html;\n    }\n\n    function populateLanguagesIntoList(element, languages) {\n        let html = '';\n        for (let i = 0; i < languages.length; i++) {\n            const culture = languages[i];\n            html += `<label><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkSubtitleLanguage\" data-lang=\"${culture.ThreeLetterISOLanguageName.toLowerCase()}\" /><span>${culture.DisplayName}</span></label>`;\n        }\n        element.innerHTML = html;\n    }\n\n    function populateCountries(select) {\n        return ApiClient.getCountries().then(allCountries => {\n            let html = '';\n            html += \"<option value=''></option>\";\n            for (let i = 0; i < allCountries.length; i++) {\n                const culture = allCountries[i];\n                html += `<option value='${culture.TwoLetterISORegionName}'>${culture.DisplayName}</option>`;\n            }\n            select.innerHTML = html;\n        });\n    }\n\n    function populateRefreshInterval(select) {\n        let html = '';\n        html += `<option value='0'>${globalize.translate('Never')}</option>`;\n        html += [30, 60, 90].map(val => {\n            return `<option value='${val}'>${globalize.translate('EveryNDays', val)}</option>`;\n        }).join('');\n        select.innerHTML = html;\n    }\n\n    function renderMetadataReaders(page, plugins) {\n        let html = '';\n        const elem = page.querySelector('.metadataReaders');\n\n        if (plugins.length < 1) return elem.innerHTML = '', elem.classList.add('hide'), !1;\n        html += `<h3 class=\"checkboxListLabel\">${globalize.translate('LabelMetadataReaders')}</h3>`;\n        html += '<div class=\"checkboxList paperList checkboxList-paperList\">';\n        for (let i = 0; i < plugins.length; i++) {\n            const plugin = plugins[i];\n            html += `<div class=\"listItem localReaderOption sortableOption\" data-pluginname=\"${plugin.Name}\">`;\n            html += '<span class=\"listItemIcon material-icons live_tv\"></span>';\n            html += '<div class=\"listItemBody\">';\n            html += '<h3 class=\"listItemBodyText\">';\n            html += plugin.Name;\n            html += '</h3>';\n            html += '</div>';\n            if (i > 0) {\n                html += `<button type=\"button\" is=\"paper-icon-button-light\" title=\"${globalize.translate('Up')}\" class=\"btnSortableMoveUp btnSortable\" data-pluginindex=\"${i}\"><span class=\"material-icons keyboard_arrow_up\"></span></button>`;\n            } else if (plugins.length > 1) {\n                html += `<button type=\"button\" is=\"paper-icon-button-light\" title=\"${globalize.translate('Down')}\" class=\"btnSortableMoveDown btnSortable\" data-pluginindex=\"${i}\"><span class=\"material-icons keyboard_arrow_down\"></span></button>`;\n            }\n            html += '</div>';\n        }\n        html += '</div>';\n        html += `<div class=\"fieldDescription\">${globalize.translate('LabelMetadataReadersHelp')}</div>`;\n        if (plugins.length < 2) {\n            elem.classList.add('hide');\n        } else {\n            elem.classList.remove('hide');\n        }\n        elem.innerHTML = html;\n        return true;\n    }\n\n    function renderMetadataSavers(page, metadataSavers) {\n        let html = '';\n        const elem = page.querySelector('.metadataSavers');\n        if (!metadataSavers.length) return elem.innerHTML = '', elem.classList.add('hide'), false;\n        html += `<h3 class=\"checkboxListLabel\">${globalize.translate('LabelMetadataSavers')}</h3>`;\n        html += '<div class=\"checkboxList paperList checkboxList-paperList\">';\n        for (let i = 0; i < metadataSavers.length; i++) {\n            const plugin = metadataSavers[i];\n            html += `<label><input type=\"checkbox\" data-defaultenabled=\"${plugin.DefaultEnabled}\" is=\"emby-checkbox\" class=\"chkMetadataSaver\" data-pluginname=\"${plugin.Name}\" ${false}><span>${plugin.Name}</span></label>`;\n        }\n        html += '</div>';\n        html += `<div class=\"fieldDescription\" style=\"margin-top:.25em;\">${globalize.translate('LabelMetadataSaversHelp')}</div>`;\n        elem.innerHTML = html;\n        elem.classList.remove('hide');\n        return true;\n    }\n\n    function getMetadataFetchersForTypeHtml(availableTypeOptions, libraryOptionsForType) {\n        let html = '';\n        let plugins = availableTypeOptions.MetadataFetchers;\n\n        plugins = getOrderedPlugins(plugins, libraryOptionsForType.MetadataFetcherOrder || []);\n        if (!plugins.length) return html;\n\n        html += '<div class=\"metadataFetcher\" data-type=\"' + availableTypeOptions.Type + '\">';\n        html += '<h3 class=\"checkboxListLabel\">' + globalize.translate('LabelTypeMetadataDownloaders', globalize.translate(availableTypeOptions.Type)) + '</h3>';\n        html += '<div class=\"checkboxList paperList checkboxList-paperList\">';\n\n        plugins.forEach((plugin, index) => {\n            html += '<div class=\"listItem metadataFetcherItem sortableOption\" data-pluginname=\"' + plugin.Name + '\">';\n            const isChecked = libraryOptionsForType.MetadataFetchers ? libraryOptionsForType.MetadataFetchers.includes(plugin.Name) : plugin.DefaultEnabled;\n            const checkedHtml = isChecked ? ' checked=\"checked\"' : '';\n            html += '<label class=\"listItemCheckboxContainer\"><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkMetadataFetcher\" data-pluginname=\"' + plugin.Name + '\" ' + checkedHtml + '><span></span></label>';\n            html += '<div class=\"listItemBody\">';\n            html += '<h3 class=\"listItemBodyText\">';\n            html += plugin.Name;\n            html += '</h3>';\n            html += '</div>';\n            if (index > 0) {\n                html += '<button type=\"button\" is=\"paper-icon-button-light\" title=\"' + globalize.translate('Up') + '\" class=\"btnSortableMoveUp btnSortable\" data-pluginindex=\"' + index + '\"><span class=\"material-icons keyboard_arrow_up\"></span></button>';\n            } else if (plugins.length > 1) {\n                html += '<button type=\"button\" is=\"paper-icon-button-light\" title=\"' + globalize.translate('Down') + '\" class=\"btnSortableMoveDown btnSortable\" data-pluginindex=\"' + index + '\"><span class=\"material-icons keyboard_arrow_down\"></span></button>';\n            }\n            html += '</div>';\n        });\n\n        html += '</div>';\n        html += '<div class=\"fieldDescription\">' + globalize.translate('LabelMetadataDownloadersHelp') + '</div>';\n        html += '</div>';\n        return html;\n    }\n\n    function getTypeOptions(allOptions, type) {\n        const allTypeOptions = allOptions.TypeOptions || [];\n        for (let i = 0; i < allTypeOptions.length; i++) {\n            const typeOptions = allTypeOptions[i];\n            if (typeOptions.Type === type) return typeOptions;\n        }\n        return null;\n    }\n\n    function renderMetadataFetchers(page, availableOptions, libraryOptions) {\n        let html = '';\n        const elem = page.querySelector('.metadataFetchers');\n        for (let i = 0; i < availableOptions.TypeOptions.length; i++) {\n            const availableTypeOptions = availableOptions.TypeOptions[i];\n            html += getMetadataFetchersForTypeHtml(availableTypeOptions, getTypeOptions(libraryOptions, availableTypeOptions.Type) || {});\n        }\n        elem.innerHTML = html;\n        if (html) {\n            elem.classList.remove('hide');\n            page.querySelector('.fldAutoRefreshInterval').classList.remove('hide');\n            page.querySelector('.fldMetadataLanguage').classList.remove('hide');\n            page.querySelector('.fldMetadataCountry').classList.remove('hide');\n        } else {\n            elem.classList.add('hide');\n            page.querySelector('.fldAutoRefreshInterval').classList.add('hide');\n            page.querySelector('.fldMetadataLanguage').classList.add('hide');\n            page.querySelector('.fldMetadataCountry').classList.add('hide');\n        }\n        return true;\n    }\n\n    function renderSubtitleFetchers(page, availableOptions, libraryOptions) {\n        let html = '';\n        const elem = page.querySelector('.subtitleFetchers');\n\n        let plugins = availableOptions.SubtitleFetchers;\n        plugins = getOrderedPlugins(plugins, libraryOptions.SubtitleFetcherOrder || []);\n        if (!plugins.length) return html;\n\n        html += `<h3 class=\"checkboxListLabel\">${globalize.translate('LabelSubtitleDownloaders')}</h3>`;\n        html += '<div class=\"checkboxList paperList checkboxList-paperList\">';\n        for (let i = 0; i < plugins.length; i++) {\n            const plugin = plugins[i];\n            html += `<div class=\"listItem subtitleFetcherItem sortableOption\" data-pluginname=\"${plugin.Name}\">`;\n            const isChecked = libraryOptions.DisabledSubtitleFetchers ? !libraryOptions.DisabledSubtitleFetchers.includes(plugin.Name) : plugin.DefaultEnabled;\n            const checkedHtml = isChecked ? ' checked=\"checked\"' : '';\n            html += `<label class=\"listItemCheckboxContainer\"><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkSubtitleFetcher\" data-pluginname=\"${plugin.Name}\" ${checkedHtml}><span></span></label>`;\n            html += '<div class=\"listItemBody\">';\n            html += '<h3 class=\"listItemBodyText\">';\n            html += plugin.Name;\n            html += '</h3>';\n            html += '</div>';\n            if (i > 0) {\n                html += `<button type=\"button\" is=\"paper-icon-button-light\" title=\"${globalize.translate('Up')}\" class=\"btnSortableMoveUp btnSortable\" data-pluginindex=\"${i}\"><span class=\"material-icons keyboard_arrow_up\"></span></button>`;\n            } else if (plugins.length > 1) {\n                html += `<button type=\"button\" is=\"paper-icon-button-light\" title=\"${globalize.translate('Down')}\" class=\"btnSortableMoveDown btnSortable\" data-pluginindex=\"${i}\"><span class=\"material-icons keyboard_arrow_down\"></span></button>`;\n            }\n            html += '</div>';\n        }\n        html += '</div>';\n        html += `<div class=\"fieldDescription\">${globalize.translate('SubtitleDownloadersHelp')}</div>`;\n        elem.innerHTML = html;\n    }\n\n    function getImageFetchersForTypeHtml(availableTypeOptions, libraryOptionsForType) {\n        let html = '';\n        let plugins = availableTypeOptions.ImageFetchers;\n\n        plugins = getOrderedPlugins(plugins, libraryOptionsForType.ImageFetcherOrder || []);\n        if (!plugins.length) return html;\n\n        html += '<div class=\"imageFetcher\" data-type=\"' + availableTypeOptions.Type + '\">';\n        html += '<div class=\"flex align-items-center\" style=\"margin:1.5em 0 .5em;\">';\n        html += '<h3 class=\"checkboxListLabel\" style=\"margin:0;\">' + globalize.translate('HeaderTypeImageFetchers', availableTypeOptions.Type) + '</h3>';\n        const supportedImageTypes = availableTypeOptions.SupportedImageTypes || [];\n        if (supportedImageTypes.length > 1 || supportedImageTypes.length === 1 && supportedImageTypes[0] !== 'Primary') {\n            html += '<button is=\"emby-button\" class=\"raised btnImageOptionsForType\" type=\"button\" style=\"margin-left:1.5em;font-size:90%;\"><span>' + globalize.translate('HeaderFetcherSettings') + '</span></button>';\n        }\n        html += '</div>';\n        html += '<div class=\"checkboxList paperList checkboxList-paperList\">';\n        for (let i = 0; i < plugins.length; i++) {\n            const plugin = plugins[i];\n            html += '<div class=\"listItem imageFetcherItem sortableOption\" data-pluginname=\"' + plugin.Name + '\">';\n            const isChecked = libraryOptionsForType.ImageFetchers ? libraryOptionsForType.ImageFetchers.includes(plugin.Name) : plugin.DefaultEnabled;\n            const checkedHtml = isChecked ? ' checked=\"checked\"' : '';\n            html += '<label class=\"listItemCheckboxContainer\"><input type=\"checkbox\" is=\"emby-checkbox\" class=\"chkImageFetcher\" data-pluginname=\"' + plugin.Name + '\" ' + checkedHtml + '><span></span></label>';\n            html += '<div class=\"listItemBody\">';\n            html += '<h3 class=\"listItemBodyText\">';\n            html += plugin.Name;\n            html += '</h3>';\n            html += '</div>';\n            if (i > 0) {\n                html += '<button type=\"button\" is=\"paper-icon-button-light\" title=\"' + globalize.translate('Up') + '\" class=\"btnSortableMoveUp btnSortable\" data-pluginindex=\"' + i + '\"><span class=\"material-icons keyboard_arrow_up\"></span></button>';\n            } else if (plugins.length > 1) {\n                html += '<button type=\"button\" is=\"paper-icon-button-light\" title=\"' + globalize.translate('Down') + '\" class=\"btnSortableMoveDown btnSortable\" data-pluginindex=\"' + i + '\"><span class=\"material-icons keyboard_arrow_down\"></span></button>';\n            }\n            html += '</div>';\n        }\n        html += '</div>';\n        html += '<div class=\"fieldDescription\">' + globalize.translate('LabelImageFetchersHelp') + '</div>';\n        html += '</div>';\n        return html;\n    }\n\n    function renderImageFetchers(page, availableOptions, libraryOptions) {\n        let html = '';\n        const elem = page.querySelector('.imageFetchers');\n        for (let i = 0; i < availableOptions.TypeOptions.length; i++) {\n            const availableTypeOptions = availableOptions.TypeOptions[i];\n            html += getImageFetchersForTypeHtml(availableTypeOptions, getTypeOptions(libraryOptions, availableTypeOptions.Type) || {});\n        }\n        elem.innerHTML = html;\n        if (html) {\n            elem.classList.remove('hide');\n            page.querySelector('.chkDownloadImagesInAdvanceContainer').classList.remove('hide');\n            page.querySelector('.chkSaveLocalContainer').classList.remove('hide');\n        } else {\n            elem.classList.add('hide');\n            page.querySelector('.chkDownloadImagesInAdvanceContainer').classList.add('hide');\n            page.querySelector('.chkSaveLocalContainer').classList.add('hide');\n        }\n        return true;\n    }\n\n    function populateMetadataSettings(parent, contentType) {\n        const isNewLibrary = parent.classList.contains('newlibrary');\n        return ApiClient.getJSON(ApiClient.getUrl('Libraries/AvailableOptions', {\n            LibraryContentType: contentType,\n            IsNewLibrary: isNewLibrary\n        })).then(availableOptions => {\n            currentAvailableOptions = availableOptions;\n            parent.availableOptions = availableOptions;\n            renderMetadataSavers(parent, availableOptions.MetadataSavers);\n            renderMetadataReaders(parent, availableOptions.MetadataReaders);\n            renderMetadataFetchers(parent, availableOptions, {});\n            renderSubtitleFetchers(parent, availableOptions, {});\n            renderImageFetchers(parent, availableOptions, {});\n            availableOptions.SubtitleFetchers.length ? parent.querySelector('.subtitleDownloadSettings').classList.remove('hide') : parent.querySelector('.subtitleDownloadSettings').classList.add('hide');\n        }).catch(() => {\n            return Promise.resolve();\n        });\n    }\n\n    function adjustSortableListElement(elem) {\n        const btnSortable = elem.querySelector('.btnSortable');\n        const inner = btnSortable.querySelector('.material-icons');\n        if (elem.previousSibling) {\n            btnSortable.title = globalize.translate('Up');\n            btnSortable.classList.add('btnSortableMoveUp');\n            btnSortable.classList.remove('btnSortableMoveDown');\n            inner.classList.remove('keyboard_arrow_down');\n            inner.classList.add('keyboard_arrow_up');\n        } else {\n            btnSortable.title = globalize.translate('Down');\n            btnSortable.classList.remove('btnSortableMoveUp');\n            btnSortable.classList.add('btnSortableMoveDown');\n            inner.classList.remove('keyboard_arrow_up');\n            inner.classList.add('keyboard_arrow_down');\n        }\n    }\n\n    function showImageOptionsForType(type) {\n        import('imageoptionseditor').then(({default: ImageOptionsEditor}) => {\n            let typeOptions = getTypeOptions(currentLibraryOptions, type);\n            if (!typeOptions) {\n                typeOptions = {\n                    Type: type\n                };\n                currentLibraryOptions.TypeOptions.push(typeOptions);\n            }\n            const availableOptions = getTypeOptions(currentAvailableOptions || {}, type);\n            const imageOptionsEditor = new ImageOptionsEditor();\n            imageOptionsEditor.show(type, typeOptions, availableOptions);\n        });\n    }\n\n    function onImageFetchersContainerClick(e) {\n        const btnImageOptionsForType = dom.parentWithClass(e.target, 'btnImageOptionsForType');\n        if (btnImageOptionsForType) {\n            return void showImageOptionsForType(dom.parentWithClass(btnImageOptionsForType, 'imageFetcher').getAttribute('data-type'));\n        }\n        onSortableContainerClick.call(this, e);\n    }\n\n    function onSortableContainerClick(e) {\n        const btnSortable = dom.parentWithClass(e.target, 'btnSortable');\n        if (btnSortable) {\n            const li = dom.parentWithClass(btnSortable, 'sortableOption');\n            const list = dom.parentWithClass(li, 'paperList');\n            if (btnSortable.classList.contains('btnSortableMoveDown')) {\n                const next = li.nextSibling;\n                if (next) {\n                    li.parentNode.removeChild(li);\n                    next.parentNode.insertBefore(li, next.nextSibling);\n                }\n            } else {\n                const prev = li.previousSibling;\n                if (prev) {\n                    li.parentNode.removeChild(li);\n                    prev.parentNode.insertBefore(li, prev);\n                }\n            }\n            Array.prototype.forEach.call(list.querySelectorAll('.sortableOption'), adjustSortableListElement);\n        }\n    }\n\n    function bindEvents(parent) {\n        parent.querySelector('.metadataReaders').addEventListener('click', onSortableContainerClick);\n        parent.querySelector('.subtitleFetchers').addEventListener('click', onSortableContainerClick);\n        parent.querySelector('.metadataFetchers').addEventListener('click', onSortableContainerClick);\n        parent.querySelector('.imageFetchers').addEventListener('click', onImageFetchersContainerClick);\n    }\n\n    export async function embed(parent, contentType, libraryOptions) {\n        currentLibraryOptions = {\n            TypeOptions: []\n        };\n        currentAvailableOptions = null;\n        const isNewLibrary = libraryOptions === null;\n        isNewLibrary && parent.classList.add('newlibrary');\n        const response = await fetch('components/libraryoptionseditor/libraryoptionseditor.template.html');\n        const template = await response.text();\n        parent.innerHTML = globalize.translateHtml(template);\n        populateRefreshInterval(parent.querySelector('#selectAutoRefreshInterval'));\n        const promises = [populateLanguages(parent), populateCountries(parent.querySelector('#selectCountry'))];\n        Promise.all(promises).then(function() {\n            return setContentType(parent, contentType).then(function() {\n                libraryOptions && setLibraryOptions(parent, libraryOptions);\n                bindEvents(parent);\n                return;\n            });\n        });\n    }\n\n    export function setAdvancedVisible(parent, visible) {\n        const elems = parent.querySelectorAll('.advanced');\n        for (let i = 0; i < elems.length; i++) {\n            visible ? elems[i].classList.remove('advancedHide') : elems[i].classList.add('advancedHide');\n        }\n    }\n\n    export function setContentType(parent, contentType) {\n        if (contentType === 'homevideos' || contentType === 'photos') {\n            parent.querySelector('.chkEnablePhotosContainer').classList.remove('hide');\n        } else {\n            parent.querySelector('.chkEnablePhotosContainer').classList.add('hide');\n        }\n\n        if (contentType !== 'tvshows' && contentType !== 'movies' && contentType !== 'homevideos' && contentType !== 'musicvideos' && contentType !== 'mixed') {\n            parent.querySelector('.chapterSettingsSection').classList.add('hide');\n        } else {\n            parent.querySelector('.chapterSettingsSection').classList.remove('hide');\n        }\n\n        if (contentType === 'tvshows') {\n            parent.querySelector('.chkImportMissingEpisodesContainer').classList.remove('hide');\n            parent.querySelector('.chkAutomaticallyGroupSeriesContainer').classList.remove('hide');\n            parent.querySelector('.fldSeasonZeroDisplayName').classList.remove('hide');\n            parent.querySelector('#txtSeasonZeroName').setAttribute('required', 'required');\n        } else {\n            parent.querySelector('.chkImportMissingEpisodesContainer').classList.add('hide');\n            parent.querySelector('.chkAutomaticallyGroupSeriesContainer').classList.add('hide');\n            parent.querySelector('.fldSeasonZeroDisplayName').classList.add('hide');\n            parent.querySelector('#txtSeasonZeroName').removeAttribute('required');\n        }\n\n        if (contentType === 'books' || contentType === 'boxsets' || contentType === 'playlists' || contentType === 'music') {\n            parent.querySelector('.chkEnableEmbeddedTitlesContainer').classList.add('hide');\n        } else {\n            parent.querySelector('.chkEnableEmbeddedTitlesContainer').classList.remove('hide');\n        }\n\n        if (contentType === 'tvshows') {\n            parent.querySelector('.chkEnableEmbeddedEpisodeInfosContainer').classList.remove('hide');\n        } else {\n            parent.querySelector('.chkEnableEmbeddedEpisodeInfosContainer').classList.add('hide');\n        }\n\n        return populateMetadataSettings(parent, contentType);\n    }\n\n    function setSubtitleFetchersIntoOptions(parent, options) {\n        options.DisabledSubtitleFetchers = Array.prototype.map.call(Array.prototype.filter.call(parent.querySelectorAll('.chkSubtitleFetcher'), elem => {\n            return !elem.checked;\n        }), elem => {\n            return elem.getAttribute('data-pluginname');\n        });\n\n        options.SubtitleFetcherOrder = Array.prototype.map.call(parent.querySelectorAll('.subtitleFetcherItem'), elem => {\n            return elem.getAttribute('data-pluginname');\n        });\n    }\n\n    function setMetadataFetchersIntoOptions(parent, options) {\n        const sections = parent.querySelectorAll('.metadataFetcher');\n        for (let i = 0; i < sections.length; i++) {\n            const section = sections[i];\n            const type = section.getAttribute('data-type');\n            let typeOptions = getTypeOptions(options, type);\n            if (!typeOptions) {\n                typeOptions = {\n                    Type: type\n                };\n                options.TypeOptions.push(typeOptions);\n            }\n            typeOptions.MetadataFetchers = Array.prototype.map.call(Array.prototype.filter.call(section.querySelectorAll('.chkMetadataFetcher'), elem => {\n                return elem.checked;\n            }), elem => {\n                return elem.getAttribute('data-pluginname');\n            });\n\n            typeOptions.MetadataFetcherOrder = Array.prototype.map.call(section.querySelectorAll('.metadataFetcherItem'), elem => {\n                return elem.getAttribute('data-pluginname');\n            });\n        }\n    }\n\n    function setImageFetchersIntoOptions(parent, options) {\n        const sections = parent.querySelectorAll('.imageFetcher');\n        for (let i = 0; i < sections.length; i++) {\n            const section = sections[i];\n            const type = section.getAttribute('data-type');\n            let typeOptions = getTypeOptions(options, type);\n            if (!typeOptions) {\n                typeOptions = {\n                    Type: type\n                };\n                options.TypeOptions.push(typeOptions);\n            }\n\n            typeOptions.ImageFetchers = Array.prototype.map.call(Array.prototype.filter.call(section.querySelectorAll('.chkImageFetcher'), elem => {\n                return elem.checked;\n            }), elem => {\n                return elem.getAttribute('data-pluginname');\n            });\n\n            typeOptions.ImageFetcherOrder = Array.prototype.map.call(section.querySelectorAll('.imageFetcherItem'), elem => {\n                return elem.getAttribute('data-pluginname');\n            });\n        }\n    }\n\n    function setImageOptionsIntoOptions(options) {\n        const originalTypeOptions = (currentLibraryOptions || {}).TypeOptions || [];\n        for (let i = 0; i < originalTypeOptions.length; i++) {\n            const originalTypeOption = originalTypeOptions[i];\n            let typeOptions = getTypeOptions(options, originalTypeOption.Type);\n\n            if (!typeOptions) {\n                typeOptions = {\n                    Type: originalTypeOption.Type\n                };\n                options.TypeOptions.push(typeOptions);\n            }\n            originalTypeOption.ImageOptions && (typeOptions.ImageOptions = originalTypeOption.ImageOptions);\n        }\n    }\n\n    export function getLibraryOptions(parent) {\n        const options = {\n            EnableArchiveMediaFiles: false,\n            EnablePhotos: parent.querySelector('.chkEnablePhotos').checked,\n            EnableRealtimeMonitor: parent.querySelector('.chkEnableRealtimeMonitor').checked,\n            ExtractChapterImagesDuringLibraryScan: parent.querySelector('.chkExtractChaptersDuringLibraryScan').checked,\n            EnableChapterImageExtraction: parent.querySelector('.chkExtractChapterImages').checked,\n            DownloadImagesInAdvance: parent.querySelector('#chkDownloadImagesInAdvance').checked,\n            EnableInternetProviders: true,\n            ImportMissingEpisodes: parent.querySelector('#chkImportMissingEpisodes').checked,\n            SaveLocalMetadata: parent.querySelector('#chkSaveLocal').checked,\n            EnableAutomaticSeriesGrouping: parent.querySelector('.chkAutomaticallyGroupSeries').checked,\n            PreferredMetadataLanguage: parent.querySelector('#selectLanguage').value,\n            MetadataCountryCode: parent.querySelector('#selectCountry').value,\n            SeasonZeroDisplayName: parent.querySelector('#txtSeasonZeroName').value,\n            AutomaticRefreshIntervalDays: parseInt(parent.querySelector('#selectAutoRefreshInterval').value),\n            EnableEmbeddedTitles: parent.querySelector('#chkEnableEmbeddedTitles').checked,\n            EnableEmbeddedEpisodeInfos: parent.querySelector('#chkEnableEmbeddedEpisodeInfos').checked,\n            SkipSubtitlesIfEmbeddedSubtitlesPresent: parent.querySelector('#chkSkipIfGraphicalSubsPresent').checked,\n            SkipSubtitlesIfAudioTrackMatches: parent.querySelector('#chkSkipIfAudioTrackPresent').checked,\n            SaveSubtitlesWithMedia: parent.querySelector('#chkSaveSubtitlesLocally').checked,\n            RequirePerfectSubtitleMatch: parent.querySelector('#chkRequirePerfectMatch').checked,\n            MetadataSavers: Array.prototype.map.call(Array.prototype.filter.call(parent.querySelectorAll('.chkMetadataSaver'), elem => {\n                return elem.checked;\n            }), elem => {\n                return elem.getAttribute('data-pluginname');\n            }),\n            TypeOptions: []\n        };\n\n        options.LocalMetadataReaderOrder = Array.prototype.map.call(parent.querySelectorAll('.localReaderOption'), elem => {\n            return elem.getAttribute('data-pluginname');\n        });\n        options.SubtitleDownloadLanguages = Array.prototype.map.call(Array.prototype.filter.call(parent.querySelectorAll('.chkSubtitleLanguage'), elem => {\n            return elem.checked;\n        }), elem => {\n            return elem.getAttribute('data-lang');\n        });\n        setSubtitleFetchersIntoOptions(parent, options);\n        setMetadataFetchersIntoOptions(parent, options);\n        setImageFetchersIntoOptions(parent, options);\n        setImageOptionsIntoOptions(options);\n\n        return options;\n    }\n\n    function getOrderedPlugins(plugins, configuredOrder) {\n        plugins = plugins.slice(0);\n        plugins.sort((a, b) => {\n            return a = configuredOrder.indexOf(a.Name), b = configuredOrder.indexOf(b.Name), a < b ? -1 : a > b ? 1 : 0;\n        });\n        return plugins;\n    }\n\n    export function setLibraryOptions(parent, options) {\n        currentLibraryOptions = options;\n        currentAvailableOptions = parent.availableOptions;\n        parent.querySelector('#selectLanguage').value = options.PreferredMetadataLanguage || '';\n        parent.querySelector('#selectCountry').value = options.MetadataCountryCode || '';\n        parent.querySelector('#selectAutoRefreshInterval').value = options.AutomaticRefreshIntervalDays || '0';\n        parent.querySelector('#txtSeasonZeroName').value = options.SeasonZeroDisplayName || 'Specials';\n        parent.querySelector('.chkEnablePhotos').checked = options.EnablePhotos;\n        parent.querySelector('.chkEnableRealtimeMonitor').checked = options.EnableRealtimeMonitor;\n        parent.querySelector('.chkExtractChaptersDuringLibraryScan').checked = options.ExtractChapterImagesDuringLibraryScan;\n        parent.querySelector('.chkExtractChapterImages').checked = options.EnableChapterImageExtraction;\n        parent.querySelector('#chkDownloadImagesInAdvance').checked = options.DownloadImagesInAdvance;\n        parent.querySelector('#chkSaveLocal').checked = options.SaveLocalMetadata;\n        parent.querySelector('#chkImportMissingEpisodes').checked = options.ImportMissingEpisodes;\n        parent.querySelector('.chkAutomaticallyGroupSeries').checked = options.EnableAutomaticSeriesGrouping;\n        parent.querySelector('#chkEnableEmbeddedTitles').checked = options.EnableEmbeddedTitles;\n        parent.querySelector('#chkEnableEmbeddedEpisodeInfos').checked = options.EnableEmbeddedEpisodeInfos;\n        parent.querySelector('#chkSkipIfGraphicalSubsPresent').checked = options.SkipSubtitlesIfEmbeddedSubtitlesPresent;\n        parent.querySelector('#chkSaveSubtitlesLocally').checked = options.SaveSubtitlesWithMedia;\n        parent.querySelector('#chkSkipIfAudioTrackPresent').checked = options.SkipSubtitlesIfAudioTrackMatches;\n        parent.querySelector('#chkRequirePerfectMatch').checked = options.RequirePerfectSubtitleMatch;\n        Array.prototype.forEach.call(parent.querySelectorAll('.chkMetadataSaver'), elem => {\n            elem.checked = options.MetadataSavers ? options.MetadataSavers.includes(elem.getAttribute('data-pluginname')) : elem.getAttribute('data-defaultenabled') === 'true';\n        });\n        Array.prototype.forEach.call(parent.querySelectorAll('.chkSubtitleLanguage'), elem => {\n            elem.checked = !!options.SubtitleDownloadLanguages && options.SubtitleDownloadLanguages.includes(elem.getAttribute('data-lang'));\n        });\n        renderMetadataReaders(parent, getOrderedPlugins(parent.availableOptions.MetadataReaders, options.LocalMetadataReaderOrder || []));\n        renderMetadataFetchers(parent, parent.availableOptions, options);\n        renderImageFetchers(parent, parent.availableOptions, options);\n        renderSubtitleFetchers(parent, parent.availableOptions, options);\n    }\n\n    let currentLibraryOptions;\n    let currentAvailableOptions;\n\n/* eslint-enable indent */\nexport default {\n    embed: embed,\n    setContentType: setContentType,\n    getLibraryOptions: getLibraryOptions,\n    setLibraryOptions: setLibraryOptions,\n    setAdvancedVisible: setAdvancedVisible\n};\n"]}