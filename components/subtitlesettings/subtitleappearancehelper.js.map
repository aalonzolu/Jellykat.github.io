{"version":3,"sources":["components/subtitlesettings/subtitleappearancehelper.js"],"names":["define","_exports","getTextStyles","settings","preview","list","textSize","push","name","value","dropShadow","background","textBackground","textColor","font","pos","parseInt","verticalPosition","line","Math","abs","concat","getWindowStyles","getStyles","text","window","applyStyleList","styles","elem","i","length","style","applyStyles","elements","appearanceSettings","Object","defineProperty","default","_default"],"mappings":"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","file":"subtitleappearancehelper.js","sourcesContent":["/**\n * Subtitle settings visual helper.\n * @module components/subtitleSettings/subtitleAppearanceHelper\n */\n\nfunction getTextStyles(settings, preview) {\n    const list = [];\n\n    switch (settings.textSize || '') {\n        case 'smaller':\n            list.push({ name: 'font-size', value: '.8em' });\n            break;\n        case 'small':\n            list.push({ name: 'font-size', value: 'inherit' });\n            break;\n        case 'larger':\n            list.push({ name: 'font-size', value: '2em' });\n            break;\n        case 'extralarge':\n            list.push({ name: 'font-size', value: '2.2em' });\n            break;\n        case 'large':\n            list.push({ name: 'font-size', value: '1.72em' });\n            break;\n        default:\n        case 'medium':\n            list.push({ name: 'font-size', value: '1.36em' });\n            break;\n    }\n\n    switch (settings.dropShadow || '') {\n        case 'raised':\n            list.push({ name: 'text-shadow', value: '-1px -1px white, 0px -1px white, -1px 0px white, 1px 1px black, 0px 1px black, 1px 0px black' });\n            break;\n        case 'depressed':\n            list.push({ name: 'text-shadow', value: '1px 1px white, 0px 1px white, 1px 0px white, -1px -1px black, 0px -1px black, -1px 0px black' });\n            break;\n        case 'uniform':\n            list.push({ name: 'text-shadow', value: '-1px 0px #000000, 0px 1px #000000, 1px 0px #000000, 0px -1px #000000' });\n            break;\n        case 'none':\n            list.push({ name: 'text-shadow', value: 'none' });\n            break;\n        default:\n        case 'dropshadow':\n            list.push({ name: 'text-shadow', value: '#000000 0px 0px 7px' });\n            break;\n    }\n\n    const background = settings.textBackground || 'transparent';\n    if (background) {\n        list.push({ name: 'background-color', value: background });\n    }\n\n    const textColor = settings.textColor || '#ffffff';\n    if (textColor) {\n        list.push({ name: 'color', value: textColor });\n    }\n\n    switch (settings.font || '') {\n        case 'typewriter':\n            list.push({ name: 'font-family', value: '\"Courier New\",monospace' });\n            list.push({ name: 'font-variant', value: 'none' });\n            break;\n        case 'print':\n            list.push({ name: 'font-family', value: 'Georgia,Times New Roman,Arial,Helvetica,serif' });\n            list.push({ name: 'font-variant', value: 'none' });\n            break;\n        case 'console':\n            list.push({ name: 'font-family', value: 'Consolas,Lucida Console,Menlo,Monaco,monospace' });\n            list.push({ name: 'font-variant', value: 'none' });\n            break;\n        case 'cursive':\n            list.push({ name: 'font-family', value: 'Lucida Handwriting,Brush Script MT,Segoe Script,cursive,Quintessential,system-ui,-apple-system,BlinkMacSystemFont,sans-serif' });\n            list.push({ name: 'font-variant', value: 'none' });\n            break;\n        case 'casual':\n            list.push({ name: 'font-family', value: 'Gabriola,Segoe Print,Comic Sans MS,Chalkboard,Short Stack,system-ui,-apple-system,BlinkMacSystemFont,sans-serif' });\n            list.push({ name: 'font-variant', value: 'none' });\n            break;\n        case 'smallcaps':\n            list.push({ name: 'font-family', value: 'Copperplate Gothic,Copperplate Gothic Bold,Copperplate,system-ui,-apple-system,BlinkMacSystemFont,sans-serif' });\n            list.push({ name: 'font-variant', value: 'small-caps' });\n            break;\n        default:\n            list.push({ name: 'font-family', value: 'inherit' });\n            list.push({ name: 'font-variant', value: 'none' });\n            break;\n    }\n\n    if (!preview) {\n        const pos = parseInt(settings.verticalPosition, 10);\n        const lineHeight = 1.35; // FIXME: It is better to read this value from element\n        const line = Math.abs(pos * lineHeight);\n        if (pos < 0) {\n            list.push({ name: 'min-height', value: `${line}em` });\n            list.push({ name: 'margin-top', value: '' });\n        } else {\n            list.push({ name: 'min-height', value: '' });\n            list.push({ name: 'margin-top', value: `${line}em` });\n        }\n    }\n\n    return list;\n}\n\nfunction getWindowStyles(settings, preview) {\n    const list = [];\n\n    if (!preview) {\n        const pos = parseInt(settings.verticalPosition, 10);\n        if (pos < 0) {\n            list.push({ name: 'top', value: '' });\n            list.push({ name: 'bottom', value: '0' });\n        } else {\n            list.push({ name: 'top', value: '0' });\n            list.push({ name: 'bottom', value: '' });\n        }\n    }\n\n    return list;\n}\n\nexport function getStyles(settings, preview) {\n    return {\n        text: getTextStyles(settings, preview),\n        window: getWindowStyles(settings, preview)\n    };\n}\n\nfunction applyStyleList(styles, elem) {\n    for (let i = 0, length = styles.length; i < length; i++) {\n        const style = styles[i];\n\n        elem.style[style.name] = style.value;\n    }\n}\n\nexport function applyStyles(elements, appearanceSettings) {\n    const styles = getStyles(appearanceSettings, !!elements.preview);\n\n    if (elements.text) {\n        applyStyleList(styles.text, elements.text);\n    }\n    if (elements.window) {\n        applyStyleList(styles.window, elements.window);\n    }\n}\nexport default {\n    getStyles: getStyles,\n    applyStyles: applyStyles\n};\n"]}