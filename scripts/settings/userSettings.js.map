{"version":3,"sources":["scripts/settings/userSettings.js"],"names":["define","_exports","_appSettings","_events","_interopRequireDefault","obj","__esModule","default","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","onSaveTimeout","this","saveTimeout","currentApiClient","updateDisplayPreferences","displayPrefs","currentUserId","value","getFilter","setFilter","setSubtitleAppearanceSettings","getSubtitleAppearanceSettings","saveQuerySettings","loadQuerySettings","soundEffects","libraryPageSize","screensaver","theme","skin","dashboardTheme","skipForwardLength","skipBackLength","chromecastVersion","dateTimeLocale","language","detailsBanner","enableBackdrops","enableBlurhash","enableFastFadein","enableThemeVideos","enableThemeSongs","enableNextVideoInfoOverlay","enableCinemaMode","serverConfig","get","set","importFrom","getData","setUserInfo","currentSettings","UserSettings","defaultSubtitleAppearanceSettings","verticalPosition","_classCallCheck","instance","Constructor","TypeError","_createClass","protoProps","staticProps","prototype","userId","apiClient","clearTimeout","Promise","resolve","self","getDisplayPreferences","then","result","CustomPrefs","name","enableOnServer","currentValue","appSettings","toString","saveServerPreferences","setTimeout","bind","events","trigger","config","updateUserConfiguration","getUser","user","Configuration","val","undefined","parseInt","query","values","JSON","parse","assign","SortBy","SortOrder","stringify"],"mappings":"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","file":"userSettings.js","sourcesContent":["import appSettings from 'appSettings';\nimport events from 'events';\n\nfunction onSaveTimeout() {\n    const self = this;\n    self.saveTimeout = null;\n    self.currentApiClient.updateDisplayPreferences('usersettings', self.displayPrefs, self.currentUserId, 'emby');\n}\n\nfunction saveServerPreferences(instance) {\n    if (instance.saveTimeout) {\n        clearTimeout(instance.saveTimeout);\n    }\n\n    instance.saveTimeout = setTimeout(onSaveTimeout.bind(instance), 50);\n}\n\nconst defaultSubtitleAppearanceSettings = {\n    verticalPosition: -3\n};\n\nexport class UserSettings {\n    constructor() {\n    }\n\n    /**\n     * Bind UserSettings instance to user.\n     * @param {string} - User identifier.\n     * @param {Object} - ApiClient instance.\n     */\n    setUserInfo(userId, apiClient) {\n        if (this.saveTimeout) {\n            clearTimeout(this.saveTimeout);\n        }\n\n        this.currentUserId = userId;\n        this.currentApiClient = apiClient;\n\n        if (!userId) {\n            this.displayPrefs = null;\n            return Promise.resolve();\n        }\n\n        const self = this;\n\n        return apiClient.getDisplayPreferences('usersettings', userId, 'emby').then(function (result) {\n            result.CustomPrefs = result.CustomPrefs || {};\n            self.displayPrefs = result;\n        });\n    }\n\n    // FIXME: Seems unused\n    getData() {\n        return this.displayPrefs;\n    }\n\n    // FIXME: Seems unused\n    importFrom(instance) {\n        this.displayPrefs = instance.getData();\n    }\n\n    // FIXME: 'appSettings.set' doesn't return any value\n    /**\n     * Set value of setting.\n     * @param {string} name - Name of setting.\n     * @param {mixed} value - Value of setting.\n     * @param {boolean} enableOnServer - Flag to save preferences on server.\n     */\n    set(name, value, enableOnServer) {\n        const userId = this.currentUserId;\n        const currentValue = this.get(name, enableOnServer);\n        const result = appSettings.set(name, value, userId);\n\n        if (enableOnServer !== false && this.displayPrefs) {\n            this.displayPrefs.CustomPrefs[name] = value == null ? value : value.toString();\n            saveServerPreferences(this);\n        }\n\n        if (currentValue !== value) {\n            events.trigger(this, 'change', [name]);\n        }\n\n        return result;\n    }\n\n    /**\n     * Get value of setting.\n     * @param {string} name - Name of setting.\n     * @param {boolean} enableOnServer - Flag to return preferences from server (cached).\n     * @return {string} Value of setting.\n     */\n    get(name, enableOnServer) {\n        const userId = this.currentUserId;\n        if (enableOnServer !== false && this.displayPrefs) {\n            return this.displayPrefs.CustomPrefs[name];\n        }\n\n        return appSettings.get(name, userId);\n    }\n\n    /**\n     * Get or set user config.\n     * @param {Object|undefined} config - Configuration or undefined.\n     * @return {Object|Promise} Configuration or Promise.\n     */\n    serverConfig(config) {\n        const apiClient = this.currentApiClient;\n        if (config) {\n            return apiClient.updateUserConfiguration(this.currentUserId, config);\n        }\n\n        return apiClient.getUser(this.currentUserId).then(function (user) {\n            return user.Configuration;\n        });\n    }\n\n    /**\n     * Get or set 'Cinema Mode' state.\n     * @param {boolean|undefined} val - Flag to enable 'Cinema Mode' or undefined.\n     * @return {boolean} 'Cinema Mode' state.\n     */\n    enableCinemaMode(val) {\n        if (val !== undefined) {\n            return this.set('enableCinemaMode', val.toString(), false);\n        }\n\n        val = this.get('enableCinemaMode', false);\n        return val !== 'false';\n    }\n\n    /**\n     * Get or set 'Next Video Info Overlay' state.\n     * @param {boolean|undefined} val - Flag to enable 'Next Video Info Overlay' or undefined.\n     * @return {boolean} 'Next Video Info Overlay' state.\n     */\n    enableNextVideoInfoOverlay(val) {\n        if (val !== undefined) {\n            return this.set('enableNextVideoInfoOverlay', val.toString());\n        }\n\n        val = this.get('enableNextVideoInfoOverlay', false);\n        return val !== 'false';\n    }\n\n    /**\n     * Get or set 'Theme Songs' state.\n     * @param {boolean|undefined} val - Flag to enable 'Theme Songs' or undefined.\n     * @return {boolean} 'Theme Songs' state.\n     */\n    enableThemeSongs(val) {\n        if (val !== undefined) {\n            return this.set('enableThemeSongs', val.toString(), false);\n        }\n\n        val = this.get('enableThemeSongs', false);\n        return val === 'true';\n    }\n\n    /**\n     * Get or set 'Theme Videos' state.\n     * @param {boolean|undefined} val - Flag to enable 'Theme Videos' or undefined.\n     * @return {boolean} 'Theme Videos' state.\n     */\n    enableThemeVideos(val) {\n        if (val !== undefined) {\n            return this.set('enableThemeVideos', val.toString(), false);\n        }\n\n        val = this.get('enableThemeVideos', false);\n        return val === 'true';\n    }\n\n    /**\n     * Get or set 'Fast Fade-in' state.\n     * @param {boolean|undefined} val - Flag to enable 'Fast Fade-in' or undefined.\n     * @return {boolean} 'Fast Fade-in' state.\n     */\n    enableFastFadein(val) {\n        if (val !== undefined) {\n            return this.set('fastFadein', val.toString(), false);\n        }\n\n        val = this.get('fastFadein', false);\n        return val !== 'false';\n    }\n\n    /**\n     * Get or set 'Blurhash' state.\n     * @param {boolean|undefined} val - Flag to enable 'Blurhash' or undefined.\n     * @return {boolean} 'Blurhash' state.\n     */\n    enableBlurhash(val) {\n        if (val !== undefined) {\n            return this.set('blurhash', val.toString(), false);\n        }\n\n        val = this.get('blurhash', false);\n        return val !== 'false';\n    }\n\n    /**\n     * Get or set 'Backdrops' state.\n     * @param {boolean|undefined} val - Flag to enable 'Backdrops' or undefined.\n     * @return {boolean} 'Backdrops' state.\n     */\n    enableBackdrops(val) {\n        if (val !== undefined) {\n            return this.set('enableBackdrops', val.toString(), false);\n        }\n\n        val = this.get('enableBackdrops', false);\n        return val !== 'false';\n    }\n\n    /**\n     * Get or set 'Details Banner' state.\n     * @param {boolean|undefined} val - Flag to enable 'Details Banner' or undefined.\n     * @return {boolean} 'Details Banner' state.\n     */\n    detailsBanner(val) {\n        if (val !== undefined) {\n            return this.set('detailsBanner', val.toString(), false);\n        }\n\n        val = this.get('detailsBanner', false);\n        return val !== 'false';\n    }\n\n    /**\n     * Get or set language.\n     * @param {string|undefined} val - Language.\n     * @return {string} Language.\n     */\n    language(val) {\n        if (val !== undefined) {\n            return this.set('language', val.toString(), false);\n        }\n\n        return this.get('language', false);\n    }\n\n    /**\n     * Get or set datetime locale.\n     * @param {string|undefined} val - Datetime locale.\n     * @return {string} Datetime locale.\n     */\n    dateTimeLocale(val) {\n        if (val !== undefined) {\n            return this.set('datetimelocale', val.toString(), false);\n        }\n\n        return this.get('datetimelocale', false);\n    }\n\n    /**\n     * Get or set Chromecast version.\n     * @param {string|undefined} val - Chromecast version.\n     * @return {string} Chromecast version.\n     */\n    chromecastVersion(val) {\n        if (val !== undefined) {\n            return this.set('chromecastVersion', val.toString());\n        }\n\n        return this.get('chromecastVersion') || 'stable';\n    }\n\n    /**\n     * Get or set amount of rewind.\n     * @param {number|undefined} val - Amount of rewind.\n     * @return {number} Amount of rewind.\n     */\n    skipBackLength(val) {\n        if (val !== undefined) {\n            return this.set('skipBackLength', val.toString());\n        }\n\n        return parseInt(this.get('skipBackLength') || '10000');\n    }\n\n    /**\n     * Get or set amount of fast forward.\n     * @param {number|undefined} val - Amount of fast forward.\n     * @return {number} Amount of fast forward.\n     */\n    skipForwardLength(val) {\n        if (val !== undefined) {\n            return this.set('skipForwardLength', val.toString());\n        }\n\n        return parseInt(this.get('skipForwardLength') || '30000');\n    }\n\n    /**\n     * Get or set theme for Dashboard.\n     * @param {string|undefined} val - Theme for Dashboard.\n     * @return {string} Theme for Dashboard.\n     */\n    dashboardTheme(val) {\n        if (val !== undefined) {\n            return this.set('dashboardTheme', val);\n        }\n\n        return this.get('dashboardTheme');\n    }\n\n    /**\n     * Get or set skin.\n     * @param {string|undefined} val - Skin.\n     * @return {string} Skin.\n     */\n    skin(val) {\n        if (val !== undefined) {\n            return this.set('skin', val, false);\n        }\n\n        return this.get('skin', false);\n    }\n\n    /**\n     * Get or set main theme.\n     * @param {string|undefined} val - Main theme.\n     * @return {string} Main theme.\n     */\n    theme(val) {\n        if (val !== undefined) {\n            return this.set('appTheme', val, false);\n        }\n\n        return this.get('appTheme', false);\n    }\n\n    /**\n     * Get or set screensaver.\n     * @param {string|undefined} val - Screensaver.\n     * @return {string} Screensaver.\n     */\n    screensaver(val) {\n        if (val !== undefined) {\n            return this.set('screensaver', val, false);\n        }\n\n        return this.get('screensaver', false);\n    }\n\n    /**\n     * Get or set library page size.\n     * @param {number|undefined} val - Library page size.\n     * @return {number} Library page size.\n     */\n    libraryPageSize(val) {\n        if (val !== undefined) {\n            return this.set('libraryPageSize', parseInt(val, 10), false);\n        }\n\n        const libraryPageSize = parseInt(this.get('libraryPageSize', false), 10);\n        if (libraryPageSize === 0) {\n            // Explicitly return 0 to avoid returning 100 because 0 is falsy.\n            return 0;\n        } else {\n            return libraryPageSize || 100;\n        }\n    }\n\n    /**\n     * Get or set sound effects.\n     * @param {string|undefined} val - Sound effects.\n     * @return {string} Sound effects.\n     */\n    soundEffects(val) {\n        if (val !== undefined) {\n            return this.set('soundeffects', val, false);\n        }\n\n        return this.get('soundeffects', false);\n    }\n\n    /**\n     * Load query settings.\n     * @param {string} key - Query key.\n     * @param {Object} query - Query base.\n     * @return {Object} Query.\n     */\n    loadQuerySettings(key, query) {\n        let values = this.get(key);\n        if (values) {\n            values = JSON.parse(values);\n            return Object.assign(query, values);\n        }\n\n        return query;\n    }\n\n    /**\n     * Save query settings.\n     * @param {string} key - Query key.\n     * @param {Object} query - Query.\n     */\n    saveQuerySettings(key, query) {\n        const values = {};\n        if (query.SortBy) {\n            values.SortBy = query.SortBy;\n        }\n\n        if (query.SortOrder) {\n            values.SortOrder = query.SortOrder;\n        }\n\n        return this.set(key, JSON.stringify(values));\n    }\n\n    /**\n     * Get subtitle appearance settings.\n     * @param {string|undefined} key - Settings key.\n     * @return {Object} Subtitle appearance settings.\n     */\n    getSubtitleAppearanceSettings(key) {\n        key = key || 'localplayersubtitleappearance3';\n        return Object.assign(defaultSubtitleAppearanceSettings, JSON.parse(this.get(key, false) || '{}'));\n    }\n\n    /**\n     * Set subtitle appearance settings.\n     * @param {Object} value - Subtitle appearance settings.\n     * @param {string|undefined} key - Settings key.\n     */\n    setSubtitleAppearanceSettings(value, key) {\n        key = key || 'localplayersubtitleappearance3';\n        return this.set(key, JSON.stringify(value), false);\n    }\n\n    /**\n     * Set filter.\n     * @param {string} key - Filter key.\n     * @param {string} value - Filter value.\n     */\n    setFilter(key, value) {\n        return this.set(key, value, true);\n    }\n\n    /**\n     * Get filter.\n     * @param {string} key - Filter key.\n     * @return {string} Filter value.\n     */\n    getFilter(key) {\n        return this.get(key, true);\n    }\n}\n\nexport const currentSettings = new UserSettings;\n\n// Wrappers for non-ES6 modules and backward compatibility\nexport const setUserInfo = currentSettings.setUserInfo.bind(currentSettings);\nexport const getData = currentSettings.getData.bind(currentSettings);\nexport const importFrom = currentSettings.importFrom.bind(currentSettings);\nexport const set = currentSettings.set.bind(currentSettings);\nexport const get = currentSettings.get.bind(currentSettings);\nexport const serverConfig = currentSettings.serverConfig.bind(currentSettings);\nexport const enableCinemaMode = currentSettings.enableCinemaMode.bind(currentSettings);\nexport const enableNextVideoInfoOverlay = currentSettings.enableNextVideoInfoOverlay.bind(currentSettings);\nexport const enableThemeSongs = currentSettings.enableThemeSongs.bind(currentSettings);\nexport const enableThemeVideos = currentSettings.enableThemeVideos.bind(currentSettings);\nexport const enableFastFadein = currentSettings.enableFastFadein.bind(currentSettings);\nexport const enableBlurhash = currentSettings.enableBlurhash.bind(currentSettings);\nexport const enableBackdrops = currentSettings.enableBackdrops.bind(currentSettings);\nexport const detailsBanner = currentSettings.detailsBanner.bind(currentSettings);\nexport const language = currentSettings.language.bind(currentSettings);\nexport const dateTimeLocale = currentSettings.dateTimeLocale.bind(currentSettings);\nexport const chromecastVersion = currentSettings.chromecastVersion.bind(currentSettings);\nexport const skipBackLength = currentSettings.skipBackLength.bind(currentSettings);\nexport const skipForwardLength = currentSettings.skipForwardLength.bind(currentSettings);\nexport const dashboardTheme = currentSettings.dashboardTheme.bind(currentSettings);\nexport const skin = currentSettings.skin.bind(currentSettings);\nexport const theme = currentSettings.theme.bind(currentSettings);\nexport const screensaver = currentSettings.screensaver.bind(currentSettings);\nexport const libraryPageSize = currentSettings.libraryPageSize.bind(currentSettings);\nexport const soundEffects = currentSettings.soundEffects.bind(currentSettings);\nexport const loadQuerySettings = currentSettings.loadQuerySettings.bind(currentSettings);\nexport const saveQuerySettings = currentSettings.saveQuerySettings.bind(currentSettings);\nexport const getSubtitleAppearanceSettings = currentSettings.getSubtitleAppearanceSettings.bind(currentSettings);\nexport const setSubtitleAppearanceSettings = currentSettings.setSubtitleAppearanceSettings.bind(currentSettings);\nexport const setFilter = currentSettings.setFilter.bind(currentSettings);\nexport const getFilter = currentSettings.getFilter.bind(currentSettings);\n"]}