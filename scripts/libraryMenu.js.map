{"version":3,"sources":["scripts/libraryMenu.js"],"names":["define","_require","_exports","_dom","_layoutManager","_inputManager","_connectionManager","_events","_viewManager","_appRouter","_apphost","_playbackManager","_syncPlayManager","groupSelectionMenu","_browser","_globalize","_imagehelper","_paperIconButtonLight","_materialIcons","_scrollStyles","_flexStyles","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","minLen","_arrayLikeToArray","n","Object","toString","call","slice","name","from","test","length","i","F","s","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","desc","set","getCurrentApiClient","currentUser","localUser","connectionManager","getApiClient","ServerId","currentApiClient","onBackClick","appRouter","back","updateUserInHeader","user","hasImage","imageUrl","updateHeaderUserButton","headerUserButton","title","classList","remove","add","headerHomeButton","headerSearchButton","layoutManager","tv","headerCastButton","policy","Policy","apiClient","headerSyncButton","SyncPlayAccess","isMinServerVersion","requiresUserRefresh","src","innerHTML","showSearch","inputManager","handleCommand","onHeaderUserButtonClick","Dashboard","navigate","onHeaderHomeButtonClick","showAudioPlayer","showNowPlaying","onPlaybackStart","playbackManager","isPlayingAudio","headerAudioPlayerButton","onPlaybackStop","stopInfo","nextMediaType","onCastButtonClicked","btn","this","Promise","_resolve","_reject","imported","then","_ref2","show","onSyncButtonClicked","toggleMainDrawer","navDrawerInstance","isVisible","closeMainDrawer","openMainDrawer","open","close","onMainDrawerSelect","onMainDrawerOpened","mobile","document","body","refreshDashboardInfoInDrawer","currentDrawerType","loadNavDrawer","navDrawerScrollContainer","querySelector","updateDashboardMenuSelectedItem","createDashboardMenu","getToolsMenuHtml","getToolsMenuLinks","getJSON","getUrl","createToolsMenuList","items","item","menuHtml","href","getToolsLinkHtml","toolsMenuHtml","html","isUrlInCurrentView","url","window","location","toLowerCase","indexOf","links","querySelectorAll","currentViewId","viewManager","currentView","id","link","selected","pageIds","getAttribute","split","pageUrls","filter","innerText","textContent","trim","LibraryMenu","setTitle","pluginItems","globalize","translate","icon","addPluginPagesToMainMenu","push","divider","section","pluginItem","EnableInMainMenu","MenuSection","DisplayName","MenuIcon","getConfigurationPageUrl","Name","join","onSidebarLinkClick","getElementsByClassName","text","showBySelector","selector","elem","updateLibraryMenu","EnableContentDownloading","appHost","supports","userId","getCurrentUserId","libraryMenuOptions","getUserViews","result","Items","list","view","CollectionType","ImageTags","guideView","assign","concat","map","imageHelper","getLibraryIcon","itemId","Id","getItemHref","context","getRouteUrl","_step","_iterator","sidebarLink","removeEventListener","addEventListener","getTopParentId","getParameterByName","onMainDrawerClick","dom","parentWithTag","target","setTimeout","onSettingsClick","onLogoutClick","logout","refreshLibraryDrawer","resolve","refreshLibraryInfoInDrawer","drawer","IsAdministrator","btnSettings","btnLogout","navDrawerElement","reject","_ref4","navdrawer","getNavDrawerOptions","drawerWidth","screen","availWidth","Math","max","min","onChange","width","mainDrawerButton","pageTitleElement","headerBackButton","currentPageType","enableLibraryNavDrawer","desktop","enableLibraryNavDrawerHome","skinHeader","pageClassOn","contains","setTabs","isDashboardPage","isHomePage","isLibraryPage","updateMenuForPageType","newPageType","bodyClassList","setEdgeSwipeEnabled","detail","isRestored","scrollTo","updateTitle","page","setDefaultTitle","updateBackButton","canGoBack","updateLibraryNavLinks","isLiveTvPage","isChannelsPage","isEditorPage","isMySyncPage","elems","lnkMediaFolder","renderHeader","browser","safari","lazyLoadViewMenuBarImages","_ref","lazyChildren","bindMenuEvents","initHeadRoom","_ref3","Headroom","init","events","on","updateCastIcon","info","getPlayerInfo","isLocalPlayer","deviceName","syncPlayManager","onSyncPlayEnabled","event","enabled","onSyncPlaySyncing","is_syncing","syncMethod","onHardwareMenuButtonClick","type","selectedIndex","builder","mainTabsManager","style","backgroundImage","setTransparentMenu","transparent","_default"],"mappings":"AAAAA,OAAO,CAAC,UAAW,UAAW,MAAO,gBAAiB,eAAgB,oBAAqB,SAAU,cAAe,YAAa,UAAW,kBAAmB,kBAAmB,qBAAsB,UAAW,YAAa,sBAAuB,0BAA2B,iBAAkB,eAAgB,eAAe,SAAUC,SAAUC,SAAUC,KAAMC,eAAgBC,cAAeC,mBAAoBC,QAASC,aAAcC,WAAYC,SAAUC,iBAAkBC,iBAAkBC,mBAAoBC,SAAUC,WAAYC,aAAcC,sBAAuBC,eAAgBC,cAAeC,aACvlB,aAqBA,SAASC,uBAAuBC,KAAO,OAAOA,KAAOA,IAAIC,WAAaD,IAAM,CAAEE,QAASF,KAEvF,SAASG,QAAQH,KAAmV,OAAtOG,QAArD,mBAAXC,QAAoD,iBAApBA,OAAOC,SAAmC,SAASF,QAAQH,KAAO,cAAcA,KAA2B,SAASG,QAAQH,KAAO,OAAOA,KAAyB,mBAAXI,QAAyBJ,IAAIM,cAAgBF,QAAUJ,MAAQI,OAAOG,UAAY,gBAAkBP,MAAyBA,KAEnX,SAASQ,2BAA2BC,EAAGC,gBAAkB,IAAIC,GAAI,GAAsB,oBAAXP,QAAgD,MAAtBK,EAAEL,OAAOC,UAAmB,CAAE,GAAIO,MAAMC,QAAQJ,KAAOE,GAE7J,SAASG,4BAA4BL,EAAGM,QAAU,IAAKN,EAAG,OAAQ,GAAiB,iBAANA,EAAgB,OAAOO,kBAAkBP,EAAGM,QAAS,IAAIE,EAAIC,OAAOX,UAAUY,SAASC,KAAKX,GAAGY,MAAM,GAAI,GAAc,WAANJ,GAAkBR,EAAEH,cAAaW,EAAIR,EAAEH,YAAYgB,MAAM,GAAU,QAANL,GAAqB,QAANA,EAAa,OAAOL,MAAMW,KAAKd,GAAI,GAAU,cAANQ,GAAqB,2CAA2CO,KAAKP,GAAI,OAAOD,kBAAkBP,EAAGM,QAFpPD,CAA4BL,KAAOC,gBAAkBD,GAAyB,iBAAbA,EAAEgB,OAAqB,CAAMd,KAAIF,EAAIE,IAAI,IAAIe,EAAI,EAAOC,EAAI,SAASA,MAAQ,MAAO,CAAEC,EAAGD,EAAGV,EAAG,SAASA,IAAM,OAAIS,GAAKjB,EAAEgB,OAAe,CAAEI,MAAM,GAAe,CAAEA,MAAM,EAAOC,MAAOrB,EAAEiB,OAAWK,EAAG,SAASA,EAAEC,IAAM,MAAMA,IAAOC,EAAGN,GAAO,MAAM,IAAIO,UAAU,yIAA4I,IAA6CC,IAAzCC,kBAAmB,EAAMC,QAAS,EAAY,MAAO,CAAET,EAAG,SAASA,IAAMjB,GAAKF,EAAEL,OAAOC,aAAgBY,EAAG,SAASA,IAAM,IAAIqB,KAAO3B,GAAG4B,OAAsC,OAA9BH,iBAAmBE,KAAKT,KAAaS,MAASP,EAAG,SAASA,EAAES,KAAOH,QAAS,EAAMF,IAAMK,KAAQP,EAAG,SAASA,IAAM,IAAWG,kBAAiC,MAAbzB,GAAG8B,QAAgB9B,GAAG8B,SAAY,QAAU,GAAIJ,OAAQ,MAAMF,OAIl9B,SAASnB,kBAAkB0B,IAAKC,MAAkB,MAAPA,KAAeA,IAAMD,IAAIjB,UAAQkB,IAAMD,IAAIjB,QAAQ,IAAK,IAAIC,EAAI,EAAGkB,KAAO,IAAIhC,MAAM+B,KAAMjB,EAAIiB,IAAKjB,IAAOkB,KAAKlB,GAAKgB,IAAIhB,GAAM,OAAOkB,KAEhL,SAASC,2BAA6B,GAAuB,mBAAZC,QAAwB,OAAO,KAAM,IAAIC,MAAQ,IAAID,QAA6F,OAAlFD,yBAA2B,SAASA,2BAA6B,OAAOE,OAAiBA,MAE1M,SAASC,wBAAwBhD,KAAO,GAAIA,KAAOA,IAAIC,WAAc,OAAOD,IAAO,GAAY,OAARA,KAAiC,WAAjBG,QAAQH,MAAoC,mBAARA,IAAsB,MAAO,CAAEE,QAASF,KAAS,IAAI+C,MAAQF,2BAA4B,GAAIE,OAASA,MAAME,IAAIjD,KAAQ,OAAO+C,MAAMG,IAAIlD,KAAQ,IAAImD,OAAS,GAAQC,sBAAwBlC,OAAOmC,gBAAkBnC,OAAOoC,yBAA0B,IAAK,IAAIC,OAAOvD,IAAO,GAAIkB,OAAOX,UAAUiD,eAAepC,KAAKpB,IAAKuD,KAAM,CAAE,IAAIE,KAAOL,sBAAwBlC,OAAOoC,yBAAyBtD,IAAKuD,KAAO,KAAUE,OAASA,KAAKP,KAAOO,KAAKC,KAAQxC,OAAOmC,eAAeF,OAAQI,IAAKE,MAAgBN,OAAOI,KAAOvD,IAAIuD,KAAyE,OAA7DJ,OAAOjD,QAAUF,IAAS+C,OAASA,MAAMW,IAAI1D,IAAKmD,QAAkBA,OAuB9tB,SAASQ,sBACL,OAAIC,aAAeA,YAAYC,UACpBC,mBAAAA,QAAkBC,aAAaH,YAAYC,UAAUG,UAGzDF,mBAAAA,QAAkBG,mBAS7B,SAASC,cACLC,WAAAA,QAAUC,OAGd,SAASC,mBAAmBC,MACxB,IAAIC,SAEJ,GAAID,MAAQA,KAAKhD,KAAM,CACnB,GAAIgD,KAAKE,SAELC,uBADYH,KAAKE,UAEjBD,UAAW,EAEfG,iBAAiBC,MAAQL,KAAKhD,KAC9BoD,iBAAiBE,UAAUC,OAAO,aAElCH,iBAAiBE,UAAUE,IAAI,QAOnC,GAJKP,UACDE,uBAAuB,MAGvBH,MAAQA,KAAKT,UAAW,CACpBkB,kBACAA,iBAAiBH,UAAUC,OAAO,QAGlCG,oBACAA,mBAAmBJ,UAAUC,OAAO,QAGnCI,eAAAA,QAAcC,IACfC,iBAAiBP,UAAUC,OAAO,QAGtC,IAAMO,OAASd,KAAKe,OAASf,KAAKe,OAASf,KAAKT,UAAUwB,OAEpDC,UAAY3B,sBACd4B,kBAAoBH,QAAoC,SAA1BA,OAAOI,gBAA6BF,UAAUG,mBAAmB,WAC/FF,iBAAiBX,UAAUC,OAAO,aAGtCE,iBAAiBH,UAAUE,IAAI,QAC/BK,iBAAiBP,UAAUE,IAAI,QAC/BS,iBAAiBX,UAAUE,IAAI,QAE3BE,oBACAA,mBAAmBJ,UAAUE,IAAI,QAIzCY,qBAAsB,EAG1B,SAASjB,uBAAuBkB,KACxBA,KACAjB,iBAAiBE,UAAUE,IAAI,yBAC/BJ,iBAAiBkB,UAAY,2HAA6HD,IAAM,iBAEhKjB,iBAAiBE,UAAUC,OAAO,yBAClCH,iBAAiBkB,UAAY,+CAIrC,SAASC,aACLC,cAAAA,QAAaC,cAAc,UAG/B,SAASC,wBAAwBjE,GAC7BkE,UAAUC,SAAS,0BAGvB,SAASC,0BACLF,UAAUC,SAAS,aAGvB,SAASE,kBACL,OAAOjC,WAAAA,QAAUkC,iBAqCrB,SAASC,gBAAgBvE,GACjBwE,iBAAAA,QAAgBC,kBAAoBvB,eAAAA,QAAcC,GAClDuB,wBAAwB7B,UAAUC,OAAO,QAEzC4B,wBAAwB7B,UAAUE,IAAI,QAI9C,SAAS4B,eAAe3E,EAAG4E,UACO,SAA1BA,SAASC,eACTH,wBAAwB7B,UAAUE,IAAI,QAI9C,SAAS+B,sBACL,IAAMC,IAAMC,KAEZ,IAAAC,SAAA,SAAAC,SAAAC,SAAA,OAAAvI,SAAA,CAAO,wBAAP,SAAAwI,UAAA,OAAAF,SAAAjE,wBAAAmE,aAAAD,YAA8BE,MAAK,SAAAC,OAAoCA,MAAlCnH,QACboH,KAAKR,QAIjC,SAASS,sBAELhI,mBAAmB+H,KADPP,MA8BhB,SAASS,mBACDC,kBAAkBC,UAClBC,kBAMR,SAASC,iBACLH,kBAAkBI,OALdD,GAcR,SAASD,kBACLF,kBAAkBK,QAGtB,SAASC,mBAAmBhG,GACpB0F,kBAAkBC,UAX1B,SAASM,qBACD/C,eAAAA,QAAcgD,QACdC,SAASC,KAAKvD,UAAUE,IAAI,qBAU5BkD,GAEAE,SAASC,KAAKvD,UAAUC,OAAO,qBAoDvC,SAASuD,6BAA6B9C,WAClC+C,kBAAoB,QACpBC,gBAEIC,yBAAyBC,cAAc,oBACvCC,kCAwNR,SAASC,oBAAoBpD,WACzB,OAvBJ,SAASqD,iBAAiBrD,WACtB,OAzBJ,SAASsD,kBAAkBtD,WACvB,OAAOA,UAAUuD,QAAQvD,UAAUwD,OAAO,0BAA4B,uDAAuD1B,KAAK2B,qBAAqB,SAAU5G,KAC7J,OAAO4G,oBAAoB,OAuBxBH,CAAkBtD,WAAW8B,MAAK,SAAU4B,OAC/C,IAAIC,KACAC,SAAW,GACfA,UAAY,8BAEZ,IAAK,IAAIxH,EAAI,EAAGA,EAAIsH,MAAMvH,OAAQC,KAC9BuH,KAAOD,MAAMtH,IAEJyH,KACLD,UAAYE,iBAAiBH,MACtBA,KAAK3H,OACZ4H,UAAY,6BACZA,UAAYD,KAAK3H,KACjB4H,UAAY,SAIpB,OAAOA,SAAW,YAKfP,CAAiBrD,WAAW8B,MAAK,SAAUiC,eAC9C,IAAIC,KAAO,GACXA,MAAQ,8EACRA,MAAQ,gDACRA,MAAQ,OACRA,MAAQD,cACRd,yBAAyB3C,UAAY0D,KACrCb,qCA9NAC,CAAoBpD,WAI5B,SAASiE,mBAAmBC,KACxB,OAAqF,IAA9EC,OAAOC,SAASP,KAAKhI,WAAWwI,cAAcC,QAAQJ,IAAIG,eAGrE,SAASlB,kCAIL,IAHA,IAAMoB,MAAQtB,yBAAyBuB,iBAAiB,kBAClDC,cAAgBC,aAAAA,QAAYC,cAAcC,GAEvCxI,EAAI,EAAGD,OAASoI,MAAMpI,OAAQC,EAAID,OAAQC,IAAK,CACpD,IAAIyI,KAAON,MAAMnI,GACb0I,UAAW,EACXC,QAAUF,KAAKG,aAAa,gBAE5BD,UAEAD,UAA8C,IAD9CC,QAAUA,QAAQE,MAAM,MACLX,QAAQG,gBAG/B,IAAIS,SAAWL,KAAKG,aAAa,iBAOjC,GALIE,WAEAJ,UADAI,SAAWA,SAASD,MAAM,MACNE,OAAOlB,oBAAoB9H,OAAS,GAGxD2I,SAAU,CACVD,KAAKvF,UAAUE,IAAI,0BACnB,IAAIH,MAAQ,GAEZA,SADAwF,KAAOA,KAAK3B,cAAc,uBAAyB2B,MACpCO,WAAaP,KAAKQ,aAAaC,OAC9CC,YAAYC,SAASnG,YAErBwF,KAAKvF,UAAUC,OAAO,2BAKlC,SAASkE,oBAAoBgC,aACzB,IAAMlB,MAAQ,CAAC,CACXvI,KAAM0J,WAAAA,QAAUC,UAAU,cAC3B,CACC3J,KAAM0J,WAAAA,QAAUC,UAAU,gBAC1B9B,KAAM,iBACNkB,QAAS,CAAC,iBACVa,KAAM,aACP,CACC5J,KAAM0J,WAAAA,QAAUC,UAAU,WAC1B9B,KAAM,wBACNkB,QAAS,CAAC,wBACVa,KAAM,YACP,CACC5J,KAAM0J,WAAAA,QAAUC,UAAU,eAC1B9B,KAAM,oBACNkB,QAAS,CAAC,mBAAoB,cAAe,eAAgB,wBAAyB,0BAA2B,oBACjHa,KAAM,UACP,CACC5J,KAAM0J,WAAAA,QAAUC,UAAU,mBAC1B9B,KAAM,eACNkB,QAAS,CAAC,mBAAoB,sBAAuB,qBAAsB,kCAAmC,mBAC9Ga,KAAM,UACP,CACC5J,KAAM0J,WAAAA,QAAUC,UAAU,iBAC1BC,KAAM,aACN/B,KAAM,wBACNkB,QAAS,CAAC,uBAAwB,4BAA6B,2BAkFnE,OAhFAc,yBAAyBtB,MAAOkB,YAAa,UAC7ClB,MAAMuB,KAAK,CACPC,SAAS,EACT/J,KAAM0J,WAAAA,QAAUC,UAAU,mBAE9BpB,MAAMuB,KAAK,CACP9J,KAAM0J,WAAAA,QAAUC,UAAU,iBAC1B9B,KAAM,eACNkB,QAAS,CAAC,cAAe,cACzBa,KAAM,YAEVrB,MAAMuB,KAAK,CACP9J,KAAM0J,WAAAA,QAAUC,UAAU,kBAC1B9B,KAAM,sBACNkB,QAAS,CAAC,sBACVa,KAAM,eAEVrB,MAAMuB,KAAK,CACP9J,KAAM0J,WAAAA,QAAUC,UAAU,QAC1B9B,KAAM,oBACNkB,QAAS,CAAC,mBAAoB,mBAAoB,mBAClDa,KAAM,UAEVrB,MAAMuB,KAAK,CACPC,SAAS,EACT/J,KAAM0J,WAAAA,QAAUC,UAAU,YAE9BpB,MAAMuB,KAAK,CACP9J,KAAM0J,WAAAA,QAAUC,UAAU,UAC1B9B,KAAM,oBACNkB,QAAS,CAAC,mBAAoB,mBAC9Ba,KAAM,YAEVrB,MAAMuB,KAAK,CACP9J,KAAM0J,WAAAA,QAAUC,UAAU,aAC1B9B,KAAM,sBACNkB,QAAS,CAAC,sBACVa,KAAM,QAEVrB,MAAMuB,KAAK,CACPC,SAAS,EACT/J,KAAM0J,WAAAA,QAAUC,UAAU,iBAE9BpB,MAAMuB,KAAK,CACP9J,KAAM0J,WAAAA,QAAUC,UAAU,iBAC1BC,KAAM,QACN/B,KAAM,kBACNkB,QAAS,CAAC,oBAEdR,MAAMuB,KAAK,CACP9J,KAAM0J,WAAAA,QAAUC,UAAU,iBAC1BC,KAAM,UACN/B,KAAM,eACNkB,QAAS,CAAC,iBAEdR,MAAMuB,KAAK,CACP9J,KAAM0J,WAAAA,QAAUC,UAAU,WAC1B9B,KAAM,WACNkB,QAAS,CAAC,WACVa,KAAM,eAEVrB,MAAMuB,KAAK,CACP9J,KAAM0J,WAAAA,QAAUC,UAAU,oBAC1BC,KAAM,gBACN/B,KAAM,4BACNkB,QAAS,CAAC,2BAA4B,6BAE1CR,MAAMuB,KAAK,CACP9J,KAAM0J,WAAAA,QAAUC,UAAU,cAC1BC,KAAM,gBACN/B,KAAM,wBACNkB,QAAS,CAAC,cAAe,uBAE7BR,MAAMuB,KAAK,CACP9J,KAAM0J,WAAAA,QAAUC,UAAU,qBAC1B9B,KAAM,sBACNkB,QAAS,CAAC,qBAAsB,qBAChCa,KAAM,aAEVC,yBAAyBtB,MAAOkB,aACzBlB,MAGX,SAASsB,yBAAyBtB,MAAOkB,YAAaO,SAClD,IAAK,IAAI5J,EAAI,EAAGD,OAASsJ,YAAYtJ,OAAQC,EAAID,OAAQC,IAAK,CAC1D,IAAM6J,WAAaR,YAAYrJ,GAE3B6J,WAAWC,kBAAoBD,WAAWE,cAAgBH,SAC1DzB,MAAMuB,KAAK,CACP9J,KAAMiK,WAAWG,YACjBR,KAAMK,WAAWI,UAAY,SAC7BxC,KAAMlD,UAAU2F,wBAAwBL,WAAWM,MACnDrB,SAAU,CAACvE,UAAU2F,wBAAwBL,WAAWM,UAYxE,SAASzC,iBAAiBH,MACtB,IAAIC,SAAW,GACXmB,QAAUpB,KAAKoB,QAAUpB,KAAKoB,QAAQyB,KAAK,KAAO,GACtDzB,QAAUA,QAAU,kBAAoBA,QAAU,IAAM,GACxD,IAAIG,SAAWvB,KAAKuB,SAAWvB,KAAKuB,SAASsB,KAAK,KAAO,GAWzD,OAVAtB,SAAWA,SAAW,mBAAqBA,SAAW,IAAM,GAC5DtB,UAAY,uDAAyDD,KAAKE,KAAO,IAAMkB,QAAUG,SAAW,IAExGvB,KAAKiC,OACLhC,UAAY,iDAAmDD,KAAKiC,KAAO,aAG/EhC,UAAY,mCACZA,UAAYD,KAAK3H,MACjB4H,UAAY,WACM,OAqCtB,SAAS6C,qBACL,IAAMT,QAAUvE,KAAKiF,uBAAuB,eAAe,GACrDC,KAAOX,QAAUA,QAAQ1F,UAAYmB,KAAKnB,UAChDiF,YAAYC,SAASmB,MA4BzB,SAASC,eAAeC,SAAU7E,MAC9B,IAAM8E,KAAOlE,SAASM,cAAc2D,UAEhCC,OACI9E,KACA8E,KAAKxH,UAAUC,OAAO,QAEtBuH,KAAKxH,UAAUE,IAAI,SAK/B,SAASuH,kBAAkB/H,MACvB,IAAKA,KAGD,OAFA4H,eAAe,yBAAyB,GACxCA,eAAe,0BAA0B,QAC7BA,eAAe,oBAAoB,GAG/C5H,KAAKe,OAAOiH,yBACZJ,eAAe,0BAA0B,GAEzCA,eAAe,0BAA0B,GAGzC5H,KAAKe,OAAOiH,0BAA4BC,SAAAA,QAAQC,SAAS,QACzDN,eAAe,yBAAyB,GAExCA,eAAe,yBAAyB,GAG5C,IAAMO,OAASxG,UAAUyG,mBACnBpH,UAAY3B,sBACZgJ,mBAAqBzE,SAASM,cAAc,uBAE9CmE,oBA5DR,SAASC,aAAatH,UAAWmH,QAC7B,OAAOnH,UAAUsH,aAAa,GAAIH,QAAQrF,MAAK,SAAUyF,QAIrD,IAHA,IAAM7D,MAAQ6D,OAAOC,MACfC,KAAO,GAEJrL,EAAI,EAAGD,OAASuH,MAAMvH,OAAQC,EAAID,OAAQC,IAAK,CACpD,IAAMsL,KAAOhE,MAAMtH,GAGnB,GAFAqL,KAAK3B,KAAK4B,MAEiB,UAAvBA,KAAKC,eAA4B,CACjCD,KAAKE,UAAY,GACjBF,KAAK9B,KAAO,UACZ,IAAMiC,UAAYjM,OAAOkM,OAAO,GAAIJ,MACpCG,UAAUtB,KAAOb,WAAAA,QAAUC,UAAU,SACrCkC,UAAUD,UAAY,GACtBC,UAAUjC,KAAO,MACjBiC,UAAU3D,IAAM,oBAChBuD,KAAK3B,KAAK+B,YAIlB,OAAOJ,QAwCPH,CAAatH,UAAWmH,QAAQrF,MAAK,SAAUyF,QAC3C,IAAM7D,MAAQ6D,OACVvD,KAAI,6BAAA+D,OAAgCrC,WAAAA,QAAUC,UAAU,eAApD,SACR3B,MAAQN,MAAMsE,KAAI,SAAU5L,GACxB,IAAMwJ,KAAOxJ,EAAEwJ,MAAQqC,aAAAA,QAAYC,eAAe9L,EAAEuL,gBAC9CQ,OAAS/L,EAAEgM,GAEjB,MAAA,wCAAAL,OAA+CI,OAA/C,iDAAAJ,OAvYhB,SAASM,YAAY1E,KAAM2E,SACvB,OAAOzJ,WAAAA,QAAU0J,YAAY5E,KAAM,CAC/B2E,QAASA,UAqYoGD,CAAYjM,EAAGA,EAAEuL,gBAAtH,0FAAAI,OACgEnC,KADhE,+FAAAmC,OAE8D3L,EAAEmK,KAFhE,sDAIDC,KAAK,IACRa,mBAAmB/G,UAAY0D,KAC/B,IAbmDwE,MAAAC,UAAAvN,2BAatCmM,mBACa7C,iBAAiB,mBAdQ,IAgBnD,IAAAiE,UAAAnM,MAAAkM,MAAAC,UAAA9M,KAAAY,MAAwC,CAAA,IAA7BmM,YAA6BF,MAAAhM,MACpCkM,YAAYC,oBAAoB,QAASlC,oBACzCiC,YAAYE,iBAAiB,QAASnC,qBAlBS,MAAA5J,KAAA4L,UAAAhM,EAAAI,KAAA,QAAA4L,UAAA9L,QAwB/D,SAASkM,iBACL,OAAOC,mBAAmB,gBAAkB,KAGhD,SAASC,kBAAkBtM,GACnBuM,KAAAA,QAAIC,cAAcxM,EAAEyM,OAAQ,MAC5BC,WAAW9G,gBAAiB,IAIpC,SAAS+G,kBACLzI,UAAUC,SAAS,0BAGvB,SAASyI,gBACL1I,UAAU2I,SAkId,SAASC,qBAAqBvK,MAC1BgE,gBACAD,kBAAoB,UAEhB/D,KACA0C,QAAQ8H,QAAQxK,MAEhBR,mBAAAA,QAAkBQ,KAAKX,uBAAuByD,MAAK,SAAU9C,OA5gBrE,SAASyK,2BAA2BzK,KAAM0K,QACtC,IAAI1F,KAAO,GACXA,MAAQ,mCACRA,MAAQ,4KAA8K0B,WAAAA,QAAUC,UAAU,QAAU,cAGpN3B,MAAQ,mCACRA,MAAQ,SAEJhF,KAAKT,WAAaS,KAAKT,UAAUwB,OAAO4J,kBACxC3F,MAAQ,iCACRA,MAAQ,6BACRA,MAAQ0B,WAAAA,QAAUC,UAAU,eAC5B3B,MAAQ,QACRA,MAAQ,8NAAgO0B,WAAAA,QAAUC,UAAU,gBAAkB,cAC9Q3B,MAAQ,iOAAmO0B,WAAAA,QAAUC,UAAU,YAAc,cAC7Q3B,MAAQ,UAGRhF,KAAKT,YACLyF,MAAQ,gCACRA,MAAQ,6BACRA,MAAQ0B,WAAAA,QAAUC,UAAU,cAC5B3B,MAAQ,QAEJiD,SAAAA,QAAQC,SAAS,iBACjBlD,MAAQ,0NAA4N0B,WAAAA,QAAUC,UAAU,sBAAwB,eAGpR3B,MAAQ,2MAA6M0B,WAAAA,QAAUC,UAAU,kBAAoB,cAC7P3B,MAAQ,0MAA4M0B,WAAAA,QAAUC,UAAU,iBAAmB,cAC3P3B,MAAQ,UAIZf,yBAAyB3C,UAAY0D,KAErC,IAAM4F,YAAc3G,yBAAyBC,cAAc,gBACvD0G,aACAA,YAAYhB,iBAAiB,QAASQ,iBAG1C,IAAMS,UAAY5G,yBAAyBC,cAAc,cACrD2G,WACAA,UAAUjB,iBAAiB,QAASS,eAiehCI,CAA2BzK,MAC3B+H,kBAAkB/H,KAAKT,cAgBnC,SAASyE,gBACL,OAAIb,kBACOT,QAAQ8H,QAAQrH,oBAG3B2H,iBAAmBlH,SAASM,cAAc,gBAC1CD,yBAA2B6G,iBAAiB5G,cAAc,qBACjC0F,iBAAiB,QAASG,mBAC5C,IAAIrH,SAAQ,SAAU8H,QAASO,QAClC,IAAArI,SAAA,SAAAC,SAAAC,SAAA,OAAAvI,SAAA,CAAO,cAAP,SAAAwI,UAAA,OAAAF,SAAAjE,wBAAAmE,aAAAD,YAAoBE,MAAK,SAAAkI,OAA0B,IAAfC,UAAeD,MAAxBpP,QACvBuH,kBAAoB,IAAI8H,UArBpC,SAASC,sBACL,IAAIC,YAAchG,OAAOiG,OAAOC,WAAa,GAG7C,OAFAF,YAAcG,KAAKC,IAAIJ,YAAa,KACpCA,YAAcG,KAAKE,IAAIL,YAAa,KAC7B,CACHjB,OAAQY,iBACRW,SAAUhI,mBACViI,MAAOP,aAc+BD,IAE7BvK,eAAAA,QAAcC,IACfkK,iBAAiBxK,UAAUC,OAAO,QAGtCiK,QAAQrH,0BAKpB,IAAI2H,iBACA7G,yBACAd,kBACAwI,iBACAlL,iBACAsD,kBACA6H,iBACAC,iBACAzL,iBACAd,YACAuB,iBACAH,mBACAyB,wBACAlB,iBA10BNrE,OAAOmC,eAAezE,SAAU,aAAc,CAC5CkD,OAAO,IAETlD,SAASsB,aAAU,EANrBrB,KAAAkB,uBAAAlB,MACAC,eAAAiB,uBAAAjB,gBACAC,cAAAgB,uBAAAhB,eACAC,mBAAAe,uBAAAf,oBACAC,QAAAc,uBAAAd,SACAC,aAAAa,uBAAAb,cACAC,WAAAY,uBAAAZ,YACAC,SAAAW,uBAAAX,UACAC,iBAAAU,uBAAAV,kBACAC,iBAAAS,uBAAAT,kBACAC,mBAAAyD,wBAAAzD,oBACAC,SAAAO,uBAAAP,UACAC,WAAAM,uBAAAN,YACAC,aAAAK,uBAAAL,cAi0BI,IAiEI0Q,gBAjEEC,uBAAyBpL,eAAAA,QAAcqL,QACvCC,4BAA8BtL,eAAAA,QAAcC,GAC5CsL,WAAatI,SAASM,cAAc,eACtC9C,qBAAsB,EA+D1B+K,YAAY,iBAAkB,QAAQ,SAAU1O,GACvCgF,KAAKnC,UAAU8L,SAAS,aACzB7F,YAAY8F,QAAQ,SAI5BF,YAAY,WAAY,QAAQ,SAAU1O,GACtC,IACM6O,gBADO7J,KACgBnC,UAAU8L,SAAS,iBAC1CG,WAFO9J,KAEWnC,UAAU8L,SAAS,YACrCI,eAAiBF,iBAHV7J,KAGkCnC,UAAU8L,SAAS,eAC5DpL,UAAY3B,sBAEdiN,iBACIX,kBACAA,iBAAiBrL,UAAUC,OAAO,QAGtCuD,6BAA6B9C,aAEzB2K,mBACII,wBAA2BQ,YAAcN,2BACzCN,iBAAiBrL,UAAUC,OAAO,QAElCoL,iBAAiBrL,UAAUE,IAAI,SAIb,YAAtBuD,mBACAwG,wBA1OZ,SAASkC,sBAAsBH,gBAAiBE,eAC5C,IAAME,YAAcJ,gBAAkB,EAAIE,cAAgB,EAAI,EAE9D,GAAIV,kBAAoBY,YAAa,CACjCZ,gBAAkBY,YAEdJ,kBAAoB3L,eAAAA,QAAcgD,OAClCuI,WAAW5L,UAAUE,IAAI,oBAEzB0L,WAAW5L,UAAUC,OAAO,oBAGhC,IAAMoM,cAAgB/I,SAASC,KAAKvD,UAEhCkM,eACAG,cAAcnM,IAAI,mBAClBmM,cAAcpM,OAAO,qBACrBoM,cAAcpM,OAAO,kBAEjB4C,mBACAA,kBAAkByJ,qBAAoB,IAGtCN,iBACAK,cAAcpM,OAAO,mBACrBoM,cAAcnM,IAAI,qBAClBmM,cAAcpM,OAAO,kBAEjB4C,mBACAA,kBAAkByJ,qBAAoB,KAG1CD,cAAcpM,OAAO,mBACrBoM,cAAcpM,OAAO,qBACrBoM,cAAcnM,IAAI,kBAEd2C,mBACAA,kBAAkByJ,qBAAoB,IAMlDxL,qBACA5B,mBAAAA,QAAkBQ,KAAKX,uBAAuByD,KAAK/C,oBAkMvD0M,CAAsBH,gBAAiBE,eAGlC/O,EAAEoP,OAAOC,YACV3H,OAAO4H,SAAS,EAAG,GAlM3B,SAASC,YAAYC,MACjB,IAAM5M,MAAQ4M,KAAKjH,aAAa,cAE5B3F,MACAkG,YAAYC,SAASnG,OACd4M,KAAK3M,UAAU8L,SAAS,mBAC/B7F,YAAY2G,kBA+LhBF,CAjCavK,MA1JjB,SAAS0K,iBAAiBF,MACjBpB,mBACDA,iBAAmBjI,SAASM,cAAc,sBAG1C2H,mBAC6C,UAAzCoB,KAAKjH,aAAa,oBAAkCnG,WAAAA,QAAUuN,YAC9DvB,iBAAiBvL,UAAUC,OAAO,QAElCsL,iBAAiBvL,UAAUE,IAAI,SAmLvC2M,CAlCa1K,MAlPjB,SAAS4K,sBAAsBJ,MAQ3B,IAPA,IAAMK,aAAeL,KAAK3M,UAAU8L,SAAS,cACvCmB,eAAiBN,KAAK3M,UAAU8L,SAAS,gBACzCoB,aAAeP,KAAK3M,UAAU8L,SAAS,sBACvCqB,aAAeR,KAAK3M,UAAU8L,SAAS,cACvCxG,GAAK0H,cAAgBC,gBAAkBC,cAAgBC,cAAgBR,KAAK3M,UAAU8L,SAAS,kBAAoB,GAAKvC,kBAAoB,GAC5I6D,MAAQ9J,SAAS8D,uBAAuB,kBAErCtK,EAAI,EAAGD,OAASuQ,MAAMvQ,OAAQC,EAAID,OAAQC,IAAK,CACpD,IAAMuQ,eAAiBD,MAAMtQ,GACvB+L,OAASwE,eAAe3H,aAAa,eAEvCuH,gBAA6B,aAAXpE,QAEXmE,cAA2B,WAAXnE,QAEhBqE,cAA2B,WAAXrE,QAEhBsE,cAA2B,kBAAXtE,SAA2F,GAA7DhE,OAAOC,SAASP,KAAKhI,WAAWyI,QAAQ,kBAEtFmI,cAA2B,qBAAXtE,SAA8F,GAA7DhE,OAAOC,SAASP,KAAKhI,WAAWyI,QAAQ,kBAEzFM,IAAMuD,QAAUvD,GATvB+H,eAAerN,UAAUE,IAAI,0BAY7BmN,eAAerN,UAAUC,OAAO,2BA4PxC8M,CAnCa5K,SAl4BjB,SAASmL,eACL,IAAI5I,KAAO,GACXA,MAAQ,4DACRA,MAAQ,2BACRA,MAAQ,+IAAiJ6I,SAAAA,QAAQC,OAAS,eAAiB,cAAgB,qBAC3M9I,MAAQ,mLACRA,MAAQ,mLACRA,MAAQ,8BACRA,MAAQ,SACRA,MAAQ,4BACRA,MAAQ,6CACRA,MAAI,uHAAA+D,OAA2HrC,WAAAA,QAAUC,UAAU,kBAA/I,iEACJ3B,MAAI,qIAAA+D,OAAyIrC,WAAAA,QAAUC,UAAU,gBAA7J,8DACJ3B,MAAI,uHAAA+D,OAA2HrC,WAAAA,QAAUC,UAAU,cAA/I,wDACJ3B,MAAI,4HAAA+D,OAAgIrC,WAAAA,QAAUC,UAAU,UAApJ,0DACJ3B,MAAQ,yJACRA,MAAQ,SACRA,MAAQ,SACRA,MAAQ,4CACRA,MAAQ,SAERkH,WAAW5L,UAAUE,IAAI,6BACzB0L,WAAW5L,UAAUE,IAAI,sBACzB0L,WAAW5K,UAAY0D,KAEvBvE,iBAAmByL,WAAWhI,cAAc,qBAC5C9D,iBAAmB8L,WAAWhI,cAAc,qBAC5CrD,iBAAmBqL,WAAWhI,cAAc,qBAC5C/B,wBAA0B+J,WAAWhI,cAAc,4BACnDxD,mBAAqBwL,WAAWhI,cAAc,uBAC9CjD,iBAAmBiL,WAAWhI,cAAc,qBAchD,SAAS6J,4BACL,IAAArL,SAAA,SAAAC,SAAAC,SAAA,OAAAvI,SAAA,CAAO,gBAAP,SAAAwI,UAAA,OAAAF,SAAAjE,wBAAAmE,aAAAD,YAAsBE,MAAK,SAAAkL,MAA4BA,KAA1BpS,QACbqS,aAAa/B,eAd7B6B,GAmGJ,SAASG,kBACLvC,iBAAmB/H,SAASM,cAAc,uBAGtCyH,iBAAiB/B,iBAAiB,QAAS1G,kBAG/C,IAAM2I,iBAAmBK,WAAWhI,cAAc,qBAE9C2H,kBACAA,iBAAiBjC,iBAAiB,QAAShK,aAG3Cc,oBACAA,mBAAmBkJ,iBAAiB,QAASrI,YAGjDnB,iBAAiBwJ,iBAAiB,QAASlI,yBAC3CjB,iBAAiBmJ,iBAAiB,QAAS/H,yBAEtClB,eAAAA,QAAcC,IACfC,iBAAiB+I,iBAAiB,QAASrH,qBAG/CJ,wBAAwByH,iBAAiB,QAAS9H,iBAClDb,iBAAiB2I,iBAAiB,QAAS3G,qBAEvCtC,eAAAA,QAAcgD,QAwlBtB,SAASwK,aAAarG,MAClB,IAAApF,SAAA,SAAAC,SAAAC,SAAA,OAAAvI,SAAA,CAAO,aAAP,SAAAwI,UAAA,OAAAF,SAAAjE,wBAAAmE,aAAAD,YAAmBE,MAAK,SAAAsL,OACH,IAAIC,EADwBD,MAAvBxS,SACQkM,MACrBwG,UA1lBTH,CAAajC,YAEjBqC,QAAAA,QAAOC,GAAGvM,iBAAAA,QAAiB,gBAAiBD,iBAC5CuM,QAAAA,QAAOC,GAAGvM,iBAAAA,QAAiB,eAAgBG,gBAjI3C8L,GAu4BJN,GAEAW,QAAAA,QAAOC,GAAGhP,mBAAAA,QAAmB,qBAAqB,SAAU/B,EAAGuC,MAC3D,IAAML,iBAAmBH,mBAAAA,QAAkBC,aAAaO,KAAKN,UAE7DqE,kBAAoB,KACpBzE,YAAc,CACVC,UAAWS,MAGfgE,gBAEAxE,mBAAAA,QAAkBQ,KAAKL,kBAAkBmD,MAAK,SAAU9C,MACpDV,YAAcU,KACdD,mBAAmBC,YAI3BuO,QAAAA,QAAOC,GAAGhP,mBAAAA,QAAmB,sBAAsB,WAC/CF,YAAc,GACdS,wBAGJwO,QAAAA,QAAOC,GAAGvM,iBAAAA,QAAiB,gBAjU3B,SAASwM,iBACL,IAAMnF,QAAU1F,SACV8K,KAAOzM,iBAAAA,QAAgB0M,gBACvB/H,KAAO/F,iBAAiBqD,cAAc,mBAE5C0C,KAAKtG,UAAUC,OAAO,iBAAkB,QAEpCmO,OAASA,KAAKE,eACdhI,KAAKtG,UAAUE,IAAI,kBACnBK,iBAAiBP,UAAUE,IAAI,qBAC/B8I,QAAQpF,cAAc,yBAAyB5C,UAAYoN,KAAKG,YAAcH,KAAK1R,OAEnF4J,KAAKtG,UAAUE,IAAI,QACnBK,iBAAiBP,UAAUC,OAAO,qBAClC+I,QAAQpF,cAAc,yBAAyB5C,UAAY,OAqTnEiN,QAAAA,QAAOC,GAAGM,iBAAAA,QAAiB,WAjwB3B,SAASC,kBAAkBC,MAAOC,SAC9B,IAAMrI,KAAO3F,iBAAiBiD,cAAc,QAC5C0C,KAAKtG,UAAUC,OAAO,OAAQ,gBAAiB,gBAC3C0O,QACArI,KAAKtG,UAAUE,IAAI,QAEnBoG,KAAKtG,UAAUE,IAAI,oBA4vB3B+N,QAAAA,QAAOC,GAAGM,iBAAAA,QAAiB,WAxvB3B,SAASI,kBAAkBF,MAAOG,WAAYC,YAC1C,IAAMxI,KAAO3F,iBAAiBiD,cAAc,QAC5C0C,KAAKtG,UAAUC,OAAO,OAAQ,gBAAiB,gBAC3C4O,WACAvI,KAAKtG,UAAUE,IAAI,gBAEnBoG,KAAKtG,UAAUE,IAAI,WAovB3BwD,gBAEA,IAAMuC,YAAc,CAChBsD,eAAgBA,eAChBwF,0BAA2B,SAAAA,4BACvBnM,oBAEJmJ,QA7IJ,SAASA,QAASiD,KAAMC,cAAeC,SACnC,IAAA9M,SAAA,SAAAC,SAAAC,SAAA,OAAAvI,SAAA,CAAO,oBAAP,SAAAwI,UAAA,OAAAF,SAAAjE,wBAAAmE,aAAAD,YAA0BE,MAAK,SAAC2M,iBACxBH,KACAG,gBAAgBpD,QAAQ3G,aAAAA,QAAYC,cAAe4J,cAAeC,SAAS,WACvE,MAAO,MAGXC,gBAAgBpD,QAAQ,UAuIhCa,gBAlIJ,SAASA,kBACAtB,mBACDA,iBAAmBhI,SAASM,cAAc,eAG1C0H,mBACAA,iBAAiBtL,UAAUE,IAAI,qBAC/BoL,iBAAiBtL,UAAUE,IAAI,4BAC/BoL,iBAAiB8D,MAAMC,gBAAkB,KACzC/D,iBAAiBtK,UAAY,IAGjCsC,SAASvD,MAAQ,YAuHjBmG,SApHJ,SAASA,SAAUnG,OACf,GAAa,MAATA,MAAJ,CAIc,MAAVA,QACAA,MAAQ,IAGZ,IAAM2E,KAAO3E,MAERuL,mBACDA,iBAAmBhI,SAASM,cAAc,eAG1C0H,mBACAA,iBAAiBtL,UAAUC,OAAO,qBAClCqL,iBAAiBtL,UAAUC,OAAO,4BAClCqL,iBAAiB8D,MAAMC,gBAAkB,KACzC/D,iBAAiBtK,UAAY0D,MAAQ,IAGzCpB,SAASvD,MAAQA,OAAS,gBApBVkG,YAAY2G,mBAmH5B0C,mBA5FJ,SAASA,mBAAoBC,aACrBA,YACA3D,WAAW5L,UAAUE,IAAI,mBAEzB0L,WAAW5L,UAAUC,OAAO,qBA2FpC4E,OAAOoB,YAAcA,YA8CvB,IAAIuJ,SA5CSvJ,YA+CbjM,SAASsB,QAAUkU","file":"libraryMenu.js","sourcesContent":["import dom from 'dom';\nimport layoutManager from 'layoutManager';\nimport inputManager from 'inputManager';\nimport connectionManager from 'connectionManager';\nimport events from 'events';\nimport viewManager from 'viewManager';\nimport appRouter from 'appRouter';\nimport appHost from 'apphost';\nimport playbackManager from 'playbackManager';\nimport syncPlayManager from 'syncPlayManager';\nimport * as groupSelectionMenu from 'groupSelectionMenu';\nimport browser from 'browser';\nimport globalize from 'globalize';\nimport imageHelper from 'scripts/imagehelper';\nimport 'paper-icon-button-light';\nimport 'material-icons';\nimport 'scrollStyles';\nimport 'flexStyles';\n\n/* eslint-disable indent */\n\n    function renderHeader() {\n        let html = '';\n        html += '<div class=\"flex align-items-center flex-grow headerTop\">';\n        html += '<div class=\"headerLeft\">';\n        html += '<button type=\"button\" is=\"paper-icon-button-light\" class=\"headerButton headerButtonLeft headerBackButton hide\"><span class=\"material-icons ' + (browser.safari ? 'chevron_left' : 'arrow_back') + '\"></span></button>';\n        html += '<button type=\"button\" is=\"paper-icon-button-light\" class=\"headerButton headerHomeButton hide barsMenuButton headerButtonLeft\"><span class=\"material-icons home\"></span></button>';\n        html += '<button type=\"button\" is=\"paper-icon-button-light\" class=\"headerButton mainDrawerButton barsMenuButton headerButtonLeft hide\"><span class=\"material-icons menu\"></span></button>';\n        html += '<h3 class=\"pageTitle\"></h3>';\n        html += '</div>';\n        html += '<div class=\"headerRight\">';\n        html += '<span class=\"headerSelectedPlayer\"></span>';\n        html += `<button is=\"paper-icon-button-light\" class=\"headerSyncButton syncButton headerButton headerButtonRight hide\" title=\"${globalize.translate('ButtonSyncPlay')}\"><span class=\"material-icons sync_disabled\"></span></button>`;\n        html += `<button is=\"paper-icon-button-light\" class=\"headerAudioPlayerButton audioPlayerButton headerButton headerButtonRight hide\" title=\"${globalize.translate('ButtonPlayer')}\"><span class=\"material-icons music_note\"></span></button>`;\n        html += `<button is=\"paper-icon-button-light\" class=\"headerCastButton castButton headerButton headerButtonRight hide\" title=\"${globalize.translate('ButtonCast')}\"><span class=\"material-icons cast\"></span></button>`;\n        html += `<button type=\"button\" is=\"paper-icon-button-light\" class=\"headerButton headerButtonRight headerSearchButton hide\" title=\"${globalize.translate('Search')}\"><span class=\"material-icons search\"></span></button>`;\n        html += '<button is=\"paper-icon-button-light\" class=\"headerButton headerButtonRight headerUserButton hide\"><span class=\"material-icons person\"></span></button>';\n        html += '</div>';\n        html += '</div>';\n        html += '<div class=\"headerTabs sectionTabs hide\">';\n        html += '</div>';\n\n        skinHeader.classList.add('skinHeader-withBackground');\n        skinHeader.classList.add('skinHeader-blurred');\n        skinHeader.innerHTML = html;\n\n        headerHomeButton = skinHeader.querySelector('.headerHomeButton');\n        headerUserButton = skinHeader.querySelector('.headerUserButton');\n        headerCastButton = skinHeader.querySelector('.headerCastButton');\n        headerAudioPlayerButton = skinHeader.querySelector('.headerAudioPlayerButton');\n        headerSearchButton = skinHeader.querySelector('.headerSearchButton');\n        headerSyncButton = skinHeader.querySelector('.headerSyncButton');\n\n        lazyLoadViewMenuBarImages();\n        bindMenuEvents();\n    }\n\n    function getCurrentApiClient() {\n        if (currentUser && currentUser.localUser) {\n            return connectionManager.getApiClient(currentUser.localUser.ServerId);\n        }\n\n        return connectionManager.currentApiClient();\n    }\n\n    function lazyLoadViewMenuBarImages() {\n        import('imageLoader').then(({default: imageLoader}) => {\n            imageLoader.lazyChildren(skinHeader);\n        });\n    }\n\n    function onBackClick() {\n        appRouter.back();\n    }\n\n    function updateUserInHeader(user) {\n        let hasImage;\n\n        if (user && user.name) {\n            if (user.imageUrl) {\n                const url = user.imageUrl;\n                updateHeaderUserButton(url);\n                hasImage = true;\n            }\n            headerUserButton.title = user.name;\n            headerUserButton.classList.remove('hide');\n        } else {\n            headerUserButton.classList.add('hide');\n        }\n\n        if (!hasImage) {\n            updateHeaderUserButton(null);\n        }\n\n        if (user && user.localUser) {\n            if (headerHomeButton) {\n                headerHomeButton.classList.remove('hide');\n            }\n\n            if (headerSearchButton) {\n                headerSearchButton.classList.remove('hide');\n            }\n\n            if (!layoutManager.tv) {\n                headerCastButton.classList.remove('hide');\n            }\n\n            const policy = user.Policy ? user.Policy : user.localUser.Policy;\n\n            const apiClient = getCurrentApiClient();\n            if (headerSyncButton && policy && policy.SyncPlayAccess !== 'None' && apiClient.isMinServerVersion('10.6.0')) {\n                headerSyncButton.classList.remove('hide');\n            }\n        } else {\n            headerHomeButton.classList.add('hide');\n            headerCastButton.classList.add('hide');\n            headerSyncButton.classList.add('hide');\n\n            if (headerSearchButton) {\n                headerSearchButton.classList.add('hide');\n            }\n        }\n\n        requiresUserRefresh = false;\n    }\n\n    function updateHeaderUserButton(src) {\n        if (src) {\n            headerUserButton.classList.add('headerUserButtonRound');\n            headerUserButton.innerHTML = '<div class=\"headerButton headerButtonRight paper-icon-button-light headerUserButtonRound\" style=\"background-image:url(\\'' + src + \"');\\\"></div>\";\n        } else {\n            headerUserButton.classList.remove('headerUserButtonRound');\n            headerUserButton.innerHTML = '<span class=\"material-icons person\"></span>';\n        }\n    }\n\n    function showSearch() {\n        inputManager.handleCommand('search');\n    }\n\n    function onHeaderUserButtonClick(e) {\n        Dashboard.navigate('mypreferencesmenu.html');\n    }\n\n    function onHeaderHomeButtonClick() {\n        Dashboard.navigate('home.html');\n    }\n\n    function showAudioPlayer() {\n        return appRouter.showNowPlaying();\n    }\n\n    function bindMenuEvents() {\n        mainDrawerButton = document.querySelector('.mainDrawerButton');\n\n        if (mainDrawerButton) {\n            mainDrawerButton.addEventListener('click', toggleMainDrawer);\n        }\n\n        const headerBackButton = skinHeader.querySelector('.headerBackButton');\n\n        if (headerBackButton) {\n            headerBackButton.addEventListener('click', onBackClick);\n        }\n\n        if (headerSearchButton) {\n            headerSearchButton.addEventListener('click', showSearch);\n        }\n\n        headerUserButton.addEventListener('click', onHeaderUserButtonClick);\n        headerHomeButton.addEventListener('click', onHeaderHomeButtonClick);\n\n        if (!layoutManager.tv) {\n            headerCastButton.addEventListener('click', onCastButtonClicked);\n        }\n\n        headerAudioPlayerButton.addEventListener('click', showAudioPlayer);\n        headerSyncButton.addEventListener('click', onSyncButtonClicked);\n\n        if (layoutManager.mobile) {\n            initHeadRoom(skinHeader);\n        }\n        events.on(playbackManager, 'playbackstart', onPlaybackStart);\n        events.on(playbackManager, 'playbackstop', onPlaybackStop);\n    }\n\n    function onPlaybackStart(e) {\n        if (playbackManager.isPlayingAudio() && layoutManager.tv) {\n            headerAudioPlayerButton.classList.remove('hide');\n        } else {\n            headerAudioPlayerButton.classList.add('hide');\n        }\n    }\n\n    function onPlaybackStop(e, stopInfo) {\n        if (stopInfo.nextMediaType != 'Audio') {\n            headerAudioPlayerButton.classList.add('hide');\n        }\n    }\n\n    function onCastButtonClicked() {\n        const btn = this;\n\n        import('playerSelectionMenu').then(({default: playerSelectionMenu}) => {\n            playerSelectionMenu.show(btn);\n        });\n    }\n\n    function onSyncButtonClicked() {\n        const btn = this;\n        groupSelectionMenu.show(btn);\n    }\n\n    function onSyncPlayEnabled(event, enabled) {\n        const icon = headerSyncButton.querySelector('span');\n        icon.classList.remove('sync', 'sync_disabled', 'sync_problem');\n        if (enabled) {\n            icon.classList.add('sync');\n        } else {\n            icon.classList.add('sync_disabled');\n        }\n    }\n\n    function onSyncPlaySyncing(event, is_syncing, syncMethod) {\n        const icon = headerSyncButton.querySelector('span');\n        icon.classList.remove('sync', 'sync_disabled', 'sync_problem');\n        if (is_syncing) {\n            icon.classList.add('sync_problem');\n        } else {\n            icon.classList.add('sync');\n        }\n    }\n\n    function getItemHref(item, context) {\n        return appRouter.getRouteUrl(item, {\n            context: context\n        });\n    }\n\n    function toggleMainDrawer() {\n        if (navDrawerInstance.isVisible) {\n            closeMainDrawer();\n        } else {\n            openMainDrawer();\n        }\n    }\n\n    function openMainDrawer() {\n        navDrawerInstance.open();\n    }\n\n    function onMainDrawerOpened() {\n        if (layoutManager.mobile) {\n            document.body.classList.add('bodyWithPopupOpen');\n        }\n    }\n\n    function closeMainDrawer() {\n        navDrawerInstance.close();\n    }\n\n    function onMainDrawerSelect(e) {\n        if (navDrawerInstance.isVisible) {\n            onMainDrawerOpened();\n        } else {\n            document.body.classList.remove('bodyWithPopupOpen');\n        }\n    }\n\n    function refreshLibraryInfoInDrawer(user, drawer) {\n        let html = '';\n        html += '<div style=\"height:.5em;\"></div>';\n        html += '<a is=\"emby-linkbutton\" class=\"navMenuOption lnkMediaFolder\" href=\"home.html\"><span class=\"material-icons navMenuOptionIcon home\"></span><span class=\"navMenuOptionText\">' + globalize.translate('Home') + '</span></a>';\n\n        // libraries are added here\n        html += '<div class=\"libraryMenuOptions\">';\n        html += '</div>';\n\n        if (user.localUser && user.localUser.Policy.IsAdministrator) {\n            html += '<div class=\"adminMenuOptions\">';\n            html += '<h3 class=\"sidebarHeader\">';\n            html += globalize.translate('HeaderAdmin');\n            html += '</h3>';\n            html += '<a is=\"emby-linkbutton\" class=\"navMenuOption lnkMediaFolder lnkManageServer\" data-itemid=\"dashboard\" href=\"dashboard.html\"><span class=\"material-icons navMenuOptionIcon dashboard\"></span><span class=\"navMenuOptionText\">' + globalize.translate('TabDashboard') + '</span></a>';\n            html += '<a is=\"emby-linkbutton\" class=\"navMenuOption lnkMediaFolder editorViewMenu\" data-itemid=\"editor\" href=\"edititemmetadata.html\"><span class=\"material-icons navMenuOptionIcon mode_edit\"></span><span class=\"navMenuOptionText\">' + globalize.translate('Metadata') + '</span></a>';\n            html += '</div>';\n        }\n\n        if (user.localUser) {\n            html += '<div class=\"userMenuOptions\">';\n            html += '<h3 class=\"sidebarHeader\">';\n            html += globalize.translate('HeaderUser');\n            html += '</h3>';\n\n            if (appHost.supports('multiserver')) {\n                html += '<a is=\"emby-linkbutton\" class=\"navMenuOption lnkMediaFolder\" data-itemid=\"selectserver\" href=\"selectserver.html?showuser=1\"><span class=\"material-icons navMenuOptionIcon wifi\"></span><span class=\"navMenuOptionText\">' + globalize.translate('ButtonSelectServer') + '</span></a>';\n            }\n\n            html += '<a is=\"emby-linkbutton\" class=\"navMenuOption lnkMediaFolder btnSettings\" data-itemid=\"settings\" href=\"#\"><span class=\"material-icons navMenuOptionIcon settings\"></span><span class=\"navMenuOptionText\">' + globalize.translate('ButtonSettings') + '</span></a>';\n            html += '<a is=\"emby-linkbutton\" class=\"navMenuOption lnkMediaFolder btnLogout\" data-itemid=\"logout\" href=\"#\"><span class=\"material-icons navMenuOptionIcon exit_to_app\"></span><span class=\"navMenuOptionText\">' + globalize.translate('ButtonSignOut') + '</span></a>';\n            html += '</div>';\n        }\n\n        // add buttons to navigation drawer\n        navDrawerScrollContainer.innerHTML = html;\n\n        const btnSettings = navDrawerScrollContainer.querySelector('.btnSettings');\n        if (btnSettings) {\n            btnSettings.addEventListener('click', onSettingsClick);\n        }\n\n        const btnLogout = navDrawerScrollContainer.querySelector('.btnLogout');\n        if (btnLogout) {\n            btnLogout.addEventListener('click', onLogoutClick);\n        }\n    }\n\n    function refreshDashboardInfoInDrawer(apiClient) {\n        currentDrawerType = 'admin';\n        loadNavDrawer();\n\n        if (navDrawerScrollContainer.querySelector('.adminDrawerLogo')) {\n            updateDashboardMenuSelectedItem();\n        } else {\n            createDashboardMenu(apiClient);\n        }\n    }\n\n    function isUrlInCurrentView(url) {\n        return window.location.href.toString().toLowerCase().indexOf(url.toLowerCase()) !== -1;\n    }\n\n    function updateDashboardMenuSelectedItem() {\n        const links = navDrawerScrollContainer.querySelectorAll('.navMenuOption');\n        const currentViewId = viewManager.currentView().id;\n\n        for (let i = 0, length = links.length; i < length; i++) {\n            let link = links[i];\n            let selected = false;\n            let pageIds = link.getAttribute('data-pageids');\n\n            if (pageIds) {\n                pageIds = pageIds.split('|');\n                selected = pageIds.indexOf(currentViewId) != -1;\n            }\n\n            let pageUrls = link.getAttribute('data-pageurls');\n\n            if (pageUrls) {\n                pageUrls = pageUrls.split('|');\n                selected = pageUrls.filter(isUrlInCurrentView).length > 0;\n            }\n\n            if (selected) {\n                link.classList.add('navMenuOption-selected');\n                let title = '';\n                link = link.querySelector('.navMenuOptionText') || link;\n                title += (link.innerText || link.textContent).trim();\n                LibraryMenu.setTitle(title);\n            } else {\n                link.classList.remove('navMenuOption-selected');\n            }\n        }\n    }\n\n    function createToolsMenuList(pluginItems) {\n        const links = [{\n            name: globalize.translate('TabServer')\n        }, {\n            name: globalize.translate('TabDashboard'),\n            href: 'dashboard.html',\n            pageIds: ['dashboardPage'],\n            icon: 'dashboard'\n        }, {\n            name: globalize.translate('General'),\n            href: 'dashboardgeneral.html',\n            pageIds: ['dashboardGeneralPage'],\n            icon: 'settings'\n        }, {\n            name: globalize.translate('HeaderUsers'),\n            href: 'userprofiles.html',\n            pageIds: ['userProfilesPage', 'newUserPage', 'editUserPage', 'userLibraryAccessPage', 'userParentalControlPage', 'userPasswordPage'],\n            icon: 'people'\n        }, {\n            name: globalize.translate('HeaderLibraries'),\n            href: 'library.html',\n            pageIds: ['mediaLibraryPage', 'librarySettingsPage', 'libraryDisplayPage', 'metadataImagesConfigurationPage', 'metadataNfoPage'],\n            icon: 'folder'\n        }, {\n            name: globalize.translate('TitlePlayback'),\n            icon: 'play_arrow',\n            href: 'encodingsettings.html',\n            pageIds: ['encodingSettingsPage', 'playbackConfigurationPage', 'streamingSettingsPage']\n        }];\n        addPluginPagesToMainMenu(links, pluginItems, 'server');\n        links.push({\n            divider: true,\n            name: globalize.translate('HeaderDevices')\n        });\n        links.push({\n            name: globalize.translate('HeaderDevices'),\n            href: 'devices.html',\n            pageIds: ['devicesPage', 'devicePage'],\n            icon: 'devices'\n        });\n        links.push({\n            name: globalize.translate('HeaderActivity'),\n            href: 'serveractivity.html',\n            pageIds: ['serverActivityPage'],\n            icon: 'assessment'\n        });\n        links.push({\n            name: globalize.translate('DLNA'),\n            href: 'dlnasettings.html',\n            pageIds: ['dlnaSettingsPage', 'dlnaProfilesPage', 'dlnaProfilePage'],\n            icon: 'input'\n        });\n        links.push({\n            divider: true,\n            name: globalize.translate('LiveTV')\n        });\n        links.push({\n            name: globalize.translate('LiveTV'),\n            href: 'livetvstatus.html',\n            pageIds: ['liveTvStatusPage', 'liveTvTunerPage'],\n            icon: 'live_tv'\n        });\n        links.push({\n            name: globalize.translate('HeaderDVR'),\n            href: 'livetvsettings.html',\n            pageIds: ['liveTvSettingsPage'],\n            icon: 'dvr'\n        });\n        links.push({\n            divider: true,\n            name: globalize.translate('TabAdvanced')\n        });\n        links.push({\n            name: globalize.translate('TabNetworking'),\n            icon: 'cloud',\n            href: 'networking.html',\n            pageIds: ['networkingPage']\n        });\n        links.push({\n            name: globalize.translate('HeaderApiKeys'),\n            icon: 'vpn_key',\n            href: 'apikeys.html',\n            pageIds: ['apiKeysPage']\n        });\n        links.push({\n            name: globalize.translate('TabLogs'),\n            href: 'log.html',\n            pageIds: ['logPage'],\n            icon: 'bug_report'\n        });\n        links.push({\n            name: globalize.translate('TabNotifications'),\n            icon: 'notifications',\n            href: 'notificationsettings.html',\n            pageIds: ['notificationSettingsPage', 'notificationSettingPage']\n        });\n        links.push({\n            name: globalize.translate('TabPlugins'),\n            icon: 'shopping_cart',\n            href: 'installedplugins.html',\n            pageIds: ['pluginsPage', 'pluginCatalogPage']\n        });\n        links.push({\n            name: globalize.translate('TabScheduledTasks'),\n            href: 'scheduledtasks.html',\n            pageIds: ['scheduledTasksPage', 'scheduledTaskPage'],\n            icon: 'schedule'\n        });\n        addPluginPagesToMainMenu(links, pluginItems);\n        return links;\n    }\n\n    function addPluginPagesToMainMenu(links, pluginItems, section) {\n        for (let i = 0, length = pluginItems.length; i < length; i++) {\n            const pluginItem = pluginItems[i];\n\n            if (pluginItem.EnableInMainMenu && pluginItem.MenuSection === section) {\n                links.push({\n                    name: pluginItem.DisplayName,\n                    icon: pluginItem.MenuIcon || 'folder',\n                    href: Dashboard.getConfigurationPageUrl(pluginItem.Name),\n                    pageUrls: [Dashboard.getConfigurationPageUrl(pluginItem.Name)]\n                });\n            }\n        }\n    }\n\n    function getToolsMenuLinks(apiClient) {\n        return apiClient.getJSON(apiClient.getUrl('web/configurationpages') + '?pageType=PluginConfiguration&EnableInMainMenu=true').then(createToolsMenuList, function (err) {\n            return createToolsMenuList([]);\n        });\n    }\n\n    function getToolsLinkHtml(item) {\n        let menuHtml = '';\n        let pageIds = item.pageIds ? item.pageIds.join('|') : '';\n        pageIds = pageIds ? ' data-pageids=\"' + pageIds + '\"' : '';\n        let pageUrls = item.pageUrls ? item.pageUrls.join('|') : '';\n        pageUrls = pageUrls ? ' data-pageurls=\"' + pageUrls + '\"' : '';\n        menuHtml += '<a is=\"emby-linkbutton\" class=\"navMenuOption\" href=\"' + item.href + '\"' + pageIds + pageUrls + '>';\n\n        if (item.icon) {\n            menuHtml += '<span class=\"material-icons navMenuOptionIcon ' + item.icon + '\"></span>';\n        }\n\n        menuHtml += '<span class=\"navMenuOptionText\">';\n        menuHtml += item.name;\n        menuHtml += '</span>';\n        return menuHtml + '</a>';\n    }\n\n    function getToolsMenuHtml(apiClient) {\n        return getToolsMenuLinks(apiClient).then(function (items) {\n            let item;\n            let menuHtml = '';\n            menuHtml += '<div class=\"drawerContent\">';\n\n            for (let i = 0; i < items.length; i++) {\n                item = items[i];\n\n                if (item.href) {\n                    menuHtml += getToolsLinkHtml(item);\n                } else if (item.name) {\n                    menuHtml += '<h3 class=\"sidebarHeader\">';\n                    menuHtml += item.name;\n                    menuHtml += '</h3>';\n                }\n            }\n\n            return menuHtml + '</div>';\n        });\n    }\n\n    function createDashboardMenu(apiClient) {\n        return getToolsMenuHtml(apiClient).then(function (toolsMenuHtml) {\n            let html = '';\n            html += '<a class=\"adminDrawerLogo clearLink\" is=\"emby-linkbutton\" href=\"home.html\">';\n            html += '<img src=\"assets/img/icon-transparent.png\" />';\n            html += '</a>';\n            html += toolsMenuHtml;\n            navDrawerScrollContainer.innerHTML = html;\n            updateDashboardMenuSelectedItem();\n        });\n    }\n\n    function onSidebarLinkClick() {\n        const section = this.getElementsByClassName('sectionName')[0];\n        const text = section ? section.innerHTML : this.innerHTML;\n        LibraryMenu.setTitle(text);\n    }\n\n    function getUserViews(apiClient, userId) {\n        return apiClient.getUserViews({}, userId).then(function (result) {\n            const items = result.Items;\n            const list = [];\n\n            for (let i = 0, length = items.length; i < length; i++) {\n                const view = items[i];\n                list.push(view);\n\n                if (view.CollectionType == 'livetv') {\n                    view.ImageTags = {};\n                    view.icon = 'live_tv';\n                    const guideView = Object.assign({}, view);\n                    guideView.Name = globalize.translate('Guide');\n                    guideView.ImageTags = {};\n                    guideView.icon = 'dvr';\n                    guideView.url = 'livetv.html?tab=1';\n                    list.push(guideView);\n                }\n            }\n\n            return list;\n        });\n    }\n\n    function showBySelector(selector, show) {\n        const elem = document.querySelector(selector);\n\n        if (elem) {\n            if (show) {\n                elem.classList.remove('hide');\n            } else {\n                elem.classList.add('hide');\n            }\n        }\n    }\n\n    function updateLibraryMenu(user) {\n        if (!user) {\n            showBySelector('.libraryMenuDownloads', false);\n            showBySelector('.lnkSyncToOtherDevices', false);\n            return void showBySelector('.userMenuOptions', false);\n        }\n\n        if (user.Policy.EnableContentDownloading) {\n            showBySelector('.lnkSyncToOtherDevices', true);\n        } else {\n            showBySelector('.lnkSyncToOtherDevices', false);\n        }\n\n        if (user.Policy.EnableContentDownloading && appHost.supports('sync')) {\n            showBySelector('.libraryMenuDownloads', true);\n        } else {\n            showBySelector('.libraryMenuDownloads', false);\n        }\n\n        const userId = Dashboard.getCurrentUserId();\n        const apiClient = getCurrentApiClient();\n        const libraryMenuOptions = document.querySelector('.libraryMenuOptions');\n\n        if (libraryMenuOptions) {\n            getUserViews(apiClient, userId).then(function (result) {\n                const items = result;\n                let html = `<h3 class=\"sidebarHeader\">${globalize.translate('HeaderMedia')}</h3>`;\n                html += items.map(function (i) {\n                    const icon = i.icon || imageHelper.getLibraryIcon(i.CollectionType);\n                    const itemId = i.Id;\n\n                    return `<a is=\"emby-linkbutton\" data-itemid=\"${itemId}\" class=\"lnkMediaFolder navMenuOption\" href=\"${getItemHref(i, i.CollectionType)}\">\n                                    <span class=\"material-icons navMenuOptionIcon ${icon}\"></span>\n                                    <span class=\"sectionName navMenuOptionText\">${i.Name}</span>\n                                  </a>`;\n                }).join('');\n                libraryMenuOptions.innerHTML = html;\n                const elem = libraryMenuOptions;\n                const sidebarLinks = elem.querySelectorAll('.navMenuOption');\n\n                for (const sidebarLink of sidebarLinks) {\n                    sidebarLink.removeEventListener('click', onSidebarLinkClick);\n                    sidebarLink.addEventListener('click', onSidebarLinkClick);\n                }\n            });\n        }\n    }\n\n    function getTopParentId() {\n        return getParameterByName('topParentId') || null;\n    }\n\n    function onMainDrawerClick(e) {\n        if (dom.parentWithTag(e.target, 'A')) {\n            setTimeout(closeMainDrawer, 30);\n        }\n    }\n\n    function onSettingsClick() {\n        Dashboard.navigate('mypreferencesmenu.html');\n    }\n\n    function onLogoutClick() {\n        Dashboard.logout();\n    }\n\n    function updateCastIcon() {\n        const context = document;\n        const info = playbackManager.getPlayerInfo();\n        const icon = headerCastButton.querySelector('.material-icons');\n\n        icon.classList.remove('cast_connected', 'cast');\n\n        if (info && !info.isLocalPlayer) {\n            icon.classList.add('cast_connected');\n            headerCastButton.classList.add('castButton-active');\n            context.querySelector('.headerSelectedPlayer').innerHTML = info.deviceName || info.name;\n        } else {\n            icon.classList.add('cast');\n            headerCastButton.classList.remove('castButton-active');\n            context.querySelector('.headerSelectedPlayer').innerHTML = '';\n        }\n    }\n\n    function updateLibraryNavLinks(page) {\n        const isLiveTvPage = page.classList.contains('liveTvPage');\n        const isChannelsPage = page.classList.contains('channelsPage');\n        const isEditorPage = page.classList.contains('metadataEditorPage');\n        const isMySyncPage = page.classList.contains('mySyncPage');\n        const id = isLiveTvPage || isChannelsPage || isEditorPage || isMySyncPage || page.classList.contains('allLibraryPage') ? '' : getTopParentId() || '';\n        const elems = document.getElementsByClassName('lnkMediaFolder');\n\n        for (let i = 0, length = elems.length; i < length; i++) {\n            const lnkMediaFolder = elems[i];\n            const itemId = lnkMediaFolder.getAttribute('data-itemid');\n\n            if (isChannelsPage && itemId === 'channels') {\n                lnkMediaFolder.classList.add('navMenuOption-selected');\n            } else if (isLiveTvPage && itemId === 'livetv') {\n                lnkMediaFolder.classList.add('navMenuOption-selected');\n            } else if (isEditorPage && itemId === 'editor') {\n                lnkMediaFolder.classList.add('navMenuOption-selected');\n            } else if (isMySyncPage && itemId === 'manageoffline' && window.location.href.toString().indexOf('mode=download') != -1) {\n                lnkMediaFolder.classList.add('navMenuOption-selected');\n            } else if (isMySyncPage && itemId === 'syncotherdevices' && window.location.href.toString().indexOf('mode=download') == -1) {\n                lnkMediaFolder.classList.add('navMenuOption-selected');\n            } else if (id && itemId == id) {\n                lnkMediaFolder.classList.add('navMenuOption-selected');\n            } else {\n                lnkMediaFolder.classList.remove('navMenuOption-selected');\n            }\n        }\n    }\n\n    function updateMenuForPageType(isDashboardPage, isLibraryPage) {\n        const newPageType = isDashboardPage ? 2 : isLibraryPage ? 1 : 3;\n\n        if (currentPageType !== newPageType) {\n            currentPageType = newPageType;\n\n            if (isDashboardPage && !layoutManager.mobile) {\n                skinHeader.classList.add('headroomDisabled');\n            } else {\n                skinHeader.classList.remove('headroomDisabled');\n            }\n\n            const bodyClassList = document.body.classList;\n\n            if (isLibraryPage) {\n                bodyClassList.add('libraryDocument');\n                bodyClassList.remove('dashboardDocument');\n                bodyClassList.remove('hideMainDrawer');\n\n                if (navDrawerInstance) {\n                    navDrawerInstance.setEdgeSwipeEnabled(true);\n                }\n            } else {\n                if (isDashboardPage) {\n                    bodyClassList.remove('libraryDocument');\n                    bodyClassList.add('dashboardDocument');\n                    bodyClassList.remove('hideMainDrawer');\n\n                    if (navDrawerInstance) {\n                        navDrawerInstance.setEdgeSwipeEnabled(true);\n                    }\n                } else {\n                    bodyClassList.remove('libraryDocument');\n                    bodyClassList.remove('dashboardDocument');\n                    bodyClassList.add('hideMainDrawer');\n\n                    if (navDrawerInstance) {\n                        navDrawerInstance.setEdgeSwipeEnabled(false);\n                    }\n                }\n            }\n        }\n\n        if (requiresUserRefresh) {\n            connectionManager.user(getCurrentApiClient()).then(updateUserInHeader);\n        }\n    }\n\n    function updateTitle(page) {\n        const title = page.getAttribute('data-title');\n\n        if (title) {\n            LibraryMenu.setTitle(title);\n        } else if (page.classList.contains('standalonePage')) {\n            LibraryMenu.setDefaultTitle();\n        }\n    }\n\n    function updateBackButton(page) {\n        if (!headerBackButton) {\n            headerBackButton = document.querySelector('.headerBackButton');\n        }\n\n        if (headerBackButton) {\n            if (page.getAttribute('data-backbutton') !== 'false' && appRouter.canGoBack()) {\n                headerBackButton.classList.remove('hide');\n            } else {\n                headerBackButton.classList.add('hide');\n            }\n        }\n    }\n\n    function initHeadRoom(elem) {\n        import('headroom').then(({default: Headroom}) => {\n            const headroom = new Headroom(elem);\n            headroom.init();\n        });\n    }\n\n    function refreshLibraryDrawer(user) {\n        loadNavDrawer();\n        currentDrawerType = 'library';\n\n        if (user) {\n            Promise.resolve(user);\n        } else {\n            connectionManager.user(getCurrentApiClient()).then(function (user) {\n                refreshLibraryInfoInDrawer(user);\n                updateLibraryMenu(user.localUser);\n            });\n        }\n    }\n\n    function getNavDrawerOptions() {\n        let drawerWidth = window.screen.availWidth - 50;\n        drawerWidth = Math.max(drawerWidth, 240);\n        drawerWidth = Math.min(drawerWidth, 320);\n        return {\n            target: navDrawerElement,\n            onChange: onMainDrawerSelect,\n            width: drawerWidth\n        };\n    }\n\n    function loadNavDrawer() {\n        if (navDrawerInstance) {\n            return Promise.resolve(navDrawerInstance);\n        }\n\n        navDrawerElement = document.querySelector('.mainDrawer');\n        navDrawerScrollContainer = navDrawerElement.querySelector('.scrollContainer');\n        navDrawerScrollContainer.addEventListener('click', onMainDrawerClick);\n        return new Promise(function (resolve, reject) {\n            import('navdrawer').then(({default: navdrawer}) => {\n                navDrawerInstance = new navdrawer(getNavDrawerOptions());\n\n                if (!layoutManager.tv) {\n                    navDrawerElement.classList.remove('hide');\n                }\n\n                resolve(navDrawerInstance);\n            });\n        });\n    }\n\n    let navDrawerElement;\n    let navDrawerScrollContainer;\n    let navDrawerInstance;\n    let mainDrawerButton;\n    let headerHomeButton;\n    let currentDrawerType;\n    let pageTitleElement;\n    let headerBackButton;\n    let headerUserButton;\n    let currentUser;\n    let headerCastButton;\n    let headerSearchButton;\n    let headerAudioPlayerButton;\n    let headerSyncButton;\n    const enableLibraryNavDrawer = layoutManager.desktop;\n    const enableLibraryNavDrawerHome = !layoutManager.tv;\n    const skinHeader = document.querySelector('.skinHeader');\n    let requiresUserRefresh = true;\n\n    function setTabs (type, selectedIndex, builder) {\n        import('mainTabsManager').then((mainTabsManager) => {\n            if (type) {\n                mainTabsManager.setTabs(viewManager.currentView(), selectedIndex, builder, function () {\n                    return [];\n                });\n            } else {\n                mainTabsManager.setTabs(null);\n            }\n        });\n    }\n\n    function setDefaultTitle () {\n        if (!pageTitleElement) {\n            pageTitleElement = document.querySelector('.pageTitle');\n        }\n\n        if (pageTitleElement) {\n            pageTitleElement.classList.add('pageTitleWithLogo');\n            pageTitleElement.classList.add('pageTitleWithDefaultLogo');\n            pageTitleElement.style.backgroundImage = null;\n            pageTitleElement.innerHTML = '';\n        }\n\n        document.title = 'Jellyfin';\n    }\n\n    function setTitle (title) {\n        if (title == null) {\n            return void LibraryMenu.setDefaultTitle();\n        }\n\n        if (title === '-') {\n            title = '';\n        }\n\n        const html = title;\n\n        if (!pageTitleElement) {\n            pageTitleElement = document.querySelector('.pageTitle');\n        }\n\n        if (pageTitleElement) {\n            pageTitleElement.classList.remove('pageTitleWithLogo');\n            pageTitleElement.classList.remove('pageTitleWithDefaultLogo');\n            pageTitleElement.style.backgroundImage = null;\n            pageTitleElement.innerHTML = html || '';\n        }\n\n        document.title = title || 'Jellyfin';\n    }\n\n    function setTransparentMenu (transparent) {\n        if (transparent) {\n            skinHeader.classList.add('semiTransparent');\n        } else {\n            skinHeader.classList.remove('semiTransparent');\n        }\n    }\n\n    let currentPageType;\n    pageClassOn('pagebeforeshow', 'page', function (e) {\n        if (!this.classList.contains('withTabs')) {\n            LibraryMenu.setTabs(null);\n        }\n    });\n\n    pageClassOn('pageshow', 'page', function (e) {\n        const page = this;\n        const isDashboardPage = page.classList.contains('type-interior');\n        const isHomePage = page.classList.contains('homePage');\n        const isLibraryPage = !isDashboardPage && page.classList.contains('libraryPage');\n        const apiClient = getCurrentApiClient();\n\n        if (isDashboardPage) {\n            if (mainDrawerButton) {\n                mainDrawerButton.classList.remove('hide');\n            }\n\n            refreshDashboardInfoInDrawer(apiClient);\n        } else {\n            if (mainDrawerButton) {\n                if (enableLibraryNavDrawer || (isHomePage && enableLibraryNavDrawerHome)) {\n                    mainDrawerButton.classList.remove('hide');\n                } else {\n                    mainDrawerButton.classList.add('hide');\n                }\n            }\n\n            if (currentDrawerType !== 'library') {\n                refreshLibraryDrawer();\n            }\n        }\n\n        updateMenuForPageType(isDashboardPage, isLibraryPage);\n\n        // TODO: Seems to do nothing? Check if needed (also in other views).\n        if (!e.detail.isRestored) {\n            window.scrollTo(0, 0);\n        }\n\n        updateTitle(page);\n        updateBackButton(page);\n        updateLibraryNavLinks(page);\n    });\n\n    renderHeader();\n\n    events.on(connectionManager, 'localusersignedin', function (e, user) {\n        const currentApiClient = connectionManager.getApiClient(user.ServerId);\n\n        currentDrawerType = null;\n        currentUser = {\n            localUser: user\n        };\n\n        loadNavDrawer();\n\n        connectionManager.user(currentApiClient).then(function (user) {\n            currentUser = user;\n            updateUserInHeader(user);\n        });\n    });\n\n    events.on(connectionManager, 'localusersignedout', function () {\n        currentUser = {};\n        updateUserInHeader();\n    });\n\n    events.on(playbackManager, 'playerchange', updateCastIcon);\n\n    events.on(syncPlayManager, 'enabled', onSyncPlayEnabled);\n    events.on(syncPlayManager, 'syncing', onSyncPlaySyncing);\n\n    loadNavDrawer();\n\n    const LibraryMenu = {\n        getTopParentId: getTopParentId,\n        onHardwareMenuButtonClick: function () {\n            toggleMainDrawer();\n        },\n        setTabs: setTabs,\n        setDefaultTitle: setDefaultTitle,\n        setTitle: setTitle,\n        setTransparentMenu: setTransparentMenu\n    };\n\n    window.LibraryMenu = LibraryMenu;\n\nexport default LibraryMenu;\n\n/* eslint-enable indent */\n"]}