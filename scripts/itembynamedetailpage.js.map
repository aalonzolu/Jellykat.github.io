{"version":3,"sources":["scripts/itembynamedetailpage.js"],"names":["define","_connectionManager","_listView","_cardBuilder","_imageLoader","_globalize","_embyItemscontainer","_embyButton","_interopRequireDefault","obj","__esModule","default","renderSection","page","item","element","type","loadItems","MediaTypes","IncludeItemTypes","PersonTypes","ArtistIds","AlbumArtistIds","Limit","SortBy","shape","showTitle","centerText","overlayMoreButton","preferThumb","overlayText","showAirTime","showAirDateTime","showChannelName","showYear","overlayPlayButton","SortOrder","playFromHere","coverImage","showParentTitle","action","smallIcon","artist","query","listOptions","getItemsFunction","options","getQuery","index","limit","fields","StartIndex","Fields","apiClient","connectionManager","getApiClient","ServerId","getAlbumArtists","getCurrentUserId","getItems","then","result","html","TotalRecordCount","link","querySelector","classList","remove","setAttribute","getMoreItemsHref","Type","Id","add","items","Items","itemsContainer","listView","getListViewHtml","cardBuilder","getCardsHtml","innerHTML","imageLoader","lazyChildren","Recursive","CollapseBoxSetItems","addCurrentItemToQuery","PersonIds","Genres","Name","StudioIds","Object","assign","window","ItemsByName","renderItems","sections","ArtistCount","push","name","globalize","translate","ProgramCount","MovieCount","SeriesCount","EpisodeCount","TrailerCount","AlbumCount","MusicVideoCount","elem","map","section","sectionClass","join","sectionElems","querySelectorAll","i","length","getAttribute"],"mappings":"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","file":"itembynamedetailpage.js","sourcesContent":["import connectionManager from 'connectionManager';\nimport listView from 'listView';\nimport cardBuilder from 'cardBuilder';\nimport imageLoader from 'imageLoader';\nimport globalize from 'globalize';\nimport 'emby-itemscontainer';\nimport 'emby-button';\n\nfunction renderItems(page, item) {\n    const sections = [];\n\n    if (item.ArtistCount) {\n        sections.push({\n            name: globalize.translate('Artists'),\n            type: 'MusicArtist'\n        });\n    }\n\n    if (item.ProgramCount && item.Type === 'Person') {\n        sections.push({\n            name: globalize.translate('HeaderUpcomingOnTV'),\n            type: 'Program'\n        });\n    }\n\n    if (item.MovieCount) {\n        sections.push({\n            name: globalize.translate('Movies'),\n            type: 'Movie'\n        });\n    }\n\n    if (item.SeriesCount) {\n        sections.push({\n            name: globalize.translate('Shows'),\n            type: 'Series'\n        });\n    }\n\n    if (item.EpisodeCount) {\n        sections.push({\n            name: globalize.translate('Episodes'),\n            type: 'Episode'\n        });\n    }\n\n    if (item.TrailerCount) {\n        sections.push({\n            name: globalize.translate('Trailers'),\n            type: 'Trailer'\n        });\n    }\n\n    if (item.AlbumCount) {\n        sections.push({\n            name: globalize.translate('Albums'),\n            type: 'MusicAlbum'\n        });\n    }\n\n    if (item.MusicVideoCount) {\n        sections.push({\n            name: globalize.translate('HeaderMusicVideos'),\n            type: 'MusicVideo'\n        });\n    }\n\n    const elem = page.querySelector('#childrenContent');\n    elem.innerHTML = sections.map(function (section) {\n        let html = '';\n        let sectionClass = 'verticalSection';\n\n        if (section.type === 'Audio') {\n            sectionClass += ' verticalSection-extrabottompadding';\n        }\n\n        html += '<div class=\"' + sectionClass + '\" data-type=\"' + section.type + '\">';\n        html += '<div class=\"sectionTitleContainer sectionTitleContainer-cards\">';\n        html += '<h2 class=\"sectionTitle sectionTitle-cards\">';\n        html += section.name;\n        html += '</h2>';\n        html += '<a is=\"emby-linkbutton\" href=\"#\" class=\"clearLink hide\" style=\"margin-left:1em;vertical-align:middle;\"><button is=\"emby-button\" type=\"button\" class=\"raised more raised-mini noIcon\">' + globalize.translate('ButtonMore') + '</button></a>';\n        html += '</div>';\n        html += '<div is=\"emby-itemscontainer\" class=\"itemsContainer padded-right\">';\n        html += '</div>';\n        html += '</div>';\n        return html;\n    }).join('');\n    const sectionElems = elem.querySelectorAll('.verticalSection');\n\n    for (let i = 0, length = sectionElems.length; i < length; i++) {\n        renderSection(page, item, sectionElems[i], sectionElems[i].getAttribute('data-type'));\n    }\n}\n\nfunction renderSection(page, item, element, type) {\n    switch (type) {\n        case 'Program':\n            loadItems(element, item, type, {\n                MediaTypes: '',\n                IncludeItemTypes: 'Program',\n                PersonTypes: '',\n                ArtistIds: '',\n                AlbumArtistIds: '',\n                Limit: 10,\n                SortBy: 'StartDate'\n            }, {\n                shape: 'overflowBackdrop',\n                showTitle: true,\n                centerText: true,\n                overlayMoreButton: true,\n                preferThumb: true,\n                overlayText: false,\n                showAirTime: true,\n                showAirDateTime: true,\n                showChannelName: true\n            });\n            break;\n\n        case 'Movie':\n            loadItems(element, item, type, {\n                MediaTypes: '',\n                IncludeItemTypes: 'Movie',\n                PersonTypes: '',\n                ArtistIds: '',\n                AlbumArtistIds: '',\n                Limit: 10,\n                SortBy: 'SortName'\n            }, {\n                shape: 'overflowPortrait',\n                showTitle: true,\n                centerText: true,\n                overlayMoreButton: true,\n                overlayText: false,\n                showYear: true\n            });\n            break;\n\n        case 'MusicVideo':\n            loadItems(element, item, type, {\n                MediaTypes: '',\n                IncludeItemTypes: 'MusicVideo',\n                PersonTypes: '',\n                ArtistIds: '',\n                AlbumArtistIds: '',\n                Limit: 10,\n                SortBy: 'SortName'\n            }, {\n                shape: 'overflowPortrait',\n                showTitle: true,\n                centerText: true,\n                overlayPlayButton: true\n            });\n            break;\n\n        case 'Trailer':\n            loadItems(element, item, type, {\n                MediaTypes: '',\n                IncludeItemTypes: 'Trailer',\n                PersonTypes: '',\n                ArtistIds: '',\n                AlbumArtistIds: '',\n                Limit: 10,\n                SortBy: 'SortName'\n            }, {\n                shape: 'overflowPortrait',\n                showTitle: true,\n                centerText: true,\n                overlayPlayButton: true\n            });\n            break;\n\n        case 'Series':\n            loadItems(element, item, type, {\n                MediaTypes: '',\n                IncludeItemTypes: 'Series',\n                PersonTypes: '',\n                ArtistIds: '',\n                AlbumArtistIds: '',\n                Limit: 10,\n                SortBy: 'SortName'\n            }, {\n                shape: 'overflowPortrait',\n                showTitle: true,\n                centerText: true,\n                overlayMoreButton: true\n            });\n            break;\n\n        case 'MusicAlbum':\n            loadItems(element, item, type, {\n                MediaTypes: '',\n                IncludeItemTypes: 'MusicAlbum',\n                PersonTypes: '',\n                ArtistIds: '',\n                AlbumArtistIds: '',\n                SortOrder: 'Descending',\n                SortBy: 'ProductionYear,Sortname'\n            }, {\n                shape: 'overflowSquare',\n                playFromHere: true,\n                showTitle: true,\n                showYear: true,\n                coverImage: true,\n                centerText: true,\n                overlayPlayButton: true\n            });\n            break;\n\n        case 'MusicArtist':\n            loadItems(element, item, type, {\n                MediaTypes: '',\n                IncludeItemTypes: 'MusicArtist',\n                PersonTypes: '',\n                ArtistIds: '',\n                AlbumArtistIds: '',\n                Limit: 8,\n                SortBy: 'SortName'\n            }, {\n                shape: 'overflowSquare',\n                playFromHere: true,\n                showTitle: true,\n                showParentTitle: true,\n                coverImage: true,\n                centerText: true,\n                overlayPlayButton: true\n            });\n            break;\n\n        case 'Episode':\n            loadItems(element, item, type, {\n                MediaTypes: '',\n                IncludeItemTypes: 'Episode',\n                PersonTypes: '',\n                ArtistIds: '',\n                AlbumArtistIds: '',\n                Limit: 6,\n                SortBy: 'SortName'\n            }, {\n                shape: 'overflowBackdrop',\n                showTitle: true,\n                showParentTitle: true,\n                centerText: true,\n                overlayPlayButton: true\n            });\n            break;\n\n        case 'Audio':\n            loadItems(element, item, type, {\n                MediaTypes: '',\n                IncludeItemTypes: 'Audio',\n                PersonTypes: '',\n                ArtistIds: '',\n                AlbumArtistIds: '',\n                SortBy: 'AlbumArtist,Album,SortName'\n            }, {\n                playFromHere: true,\n                action: 'playallfromhere',\n                smallIcon: true,\n                artist: true\n            });\n    }\n}\n\nfunction loadItems(element, item, type, query, listOptions) {\n    query = getQuery(query, item);\n    getItemsFunction(query, item)(query.StartIndex, query.Limit, query.Fields).then(function (result) {\n        let html = '';\n\n        if (query.Limit && result.TotalRecordCount > query.Limit) {\n            const link = element.querySelector('a');\n            link.classList.remove('hide');\n            link.setAttribute('href', getMoreItemsHref(item, type));\n        } else {\n            element.querySelector('a').classList.add('hide');\n        }\n\n        listOptions.items = result.Items;\n        const itemsContainer = element.querySelector('.itemsContainer');\n\n        if (type === 'Audio') {\n            html = listView.getListViewHtml(listOptions);\n            itemsContainer.classList.remove('vertical-wrap');\n            itemsContainer.classList.add('vertical-list');\n        } else {\n            html = cardBuilder.getCardsHtml(listOptions);\n            itemsContainer.classList.add('vertical-wrap');\n            itemsContainer.classList.remove('vertical-list');\n        }\n\n        itemsContainer.innerHTML = html;\n        imageLoader.lazyChildren(itemsContainer);\n    });\n}\n\nfunction getMoreItemsHref(item, type) {\n    if (item.Type === 'Genre') {\n        return 'list.html?type=' + type + '&genreId=' + item.Id + '&serverId=' + item.ServerId;\n    }\n\n    if (item.Type === 'MusicGenre') {\n        return 'list.html?type=' + type + '&musicGenreId=' + item.Id + '&serverId=' + item.ServerId;\n    }\n\n    if (item.Type === 'Studio') {\n        return 'list.html?type=' + type + '&studioId=' + item.Id + '&serverId=' + item.ServerId;\n    }\n\n    if (item.Type === 'MusicArtist') {\n        return 'list.html?type=' + type + '&artistId=' + item.Id + '&serverId=' + item.ServerId;\n    }\n\n    if (item.Type === 'Person') {\n        return 'list.html?type=' + type + '&personId=' + item.Id + '&serverId=' + item.ServerId;\n    }\n\n    return 'list.html?type=' + type + '&parentId=' + item.Id + '&serverId=' + item.ServerId;\n}\n\nfunction addCurrentItemToQuery(query, item) {\n    if (item.Type === 'Person') {\n        query.PersonIds = item.Id;\n    } else if (item.Type === 'Genre') {\n        query.Genres = item.Name;\n    } else if (item.Type === 'MusicGenre') {\n        query.Genres = item.Name;\n    } else if (item.Type === 'GameGenre') {\n        query.Genres = item.Name;\n    } else if (item.Type === 'Studio') {\n        query.StudioIds = item.Id;\n    } else if (item.Type === 'MusicArtist') {\n        query.AlbumArtistIds = item.Id;\n    }\n}\n\nfunction getQuery(options, item) {\n    let query = {\n        SortOrder: 'Ascending',\n        IncludeItemTypes: '',\n        Recursive: true,\n        Fields: 'AudioInfo,SeriesInfo,ParentId,PrimaryImageAspectRatio,BasicSyncInfo',\n        Limit: 100,\n        StartIndex: 0,\n        CollapseBoxSetItems: false\n    };\n    query = Object.assign(query, options || {});\n    addCurrentItemToQuery(query, item);\n    return query;\n}\n\nfunction getItemsFunction(options, item) {\n    const query = getQuery(options, item);\n    return function (index, limit, fields) {\n        query.StartIndex = index;\n        query.Limit = limit;\n\n        if (fields) {\n            query.Fields += ',' + fields;\n        }\n\n        const apiClient = connectionManager.getApiClient(item.ServerId);\n\n        if (query.IncludeItemTypes === 'MusicArtist') {\n            query.IncludeItemTypes = null;\n            return apiClient.getAlbumArtists(apiClient.getCurrentUserId(), query);\n        }\n\n        return apiClient.getItems(apiClient.getCurrentUserId(), query);\n    };\n}\n\nwindow.ItemsByName = {\n    renderItems: renderItems\n};\n"]}