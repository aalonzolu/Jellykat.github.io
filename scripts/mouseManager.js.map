{"version":3,"sources":["scripts/mouseManager.js"],"names":["define","_exports","_inputManager","_focusManager","_browser","_layoutManager","_events","_dom","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","showCursor","hideCursor","isMouseIdle","lastPointerMoveData","mouseInterval","self","lastMouseInputTime","Date","getTime","removeIdleClasses","classList","document","body","remove","events","trigger","addIdleClasses","add","layoutManager","tv","onPointerMove","e","eventX","screenX","eventY","screenY","Math","abs","x","y","notifyApp","inputManager","notifyMouseMove","onPointerEnter","pointerType","mobile","parent","focusManager","focusableParent","target","focus","onMouseInterval","mouseIdleTime","initMouse","stopMouseInterval","clearInterval","dom","removeEventListener","window","PointerEvent","passive","startMouseInterval","setInterval","addEventListener","capture","enableFocusWithMouse","browser","web0s","on","_default"],"mappings":"AAAAA,OAAO,CAAC,UAAW,eAAgB,eAAgB,UAAW,gBAAiB,SAAU,QAAQ,SAAUC,SAAUC,cAAeC,cAAeC,SAAUC,eAAgBC,QAASC,MACpL,aAeA,SAASC,uBAAuBC,KAAO,OAAOA,KAAOA,IAAIC,WAAaD,IAAM,CAAEE,QAASF,KAbvFG,OAAOC,eAAeZ,SAAU,aAAc,CAC5Ca,OAAO,IAETb,SAASc,WAAaA,WACtBd,SAASe,WAAaA,WACtBf,SAASU,aAAU,EARrBT,cAAAM,uBAAAN,eACAC,cAAAK,uBAAAL,eACAC,SAAAI,uBAAAJ,UACAC,eAAAG,uBAAAH,gBACAC,QAAAE,uBAAAF,SACAC,KAAAC,uBAAAD,MAGI,IAGIU,YA2CAC,oBAoEAC,cAlHEC,KAAO,GAETC,oBAAqB,IAAIC,MAAOC,UAWpC,SAASC,oBACL,IAAMC,UAAYC,SAASC,KAAKF,UAEhCA,UAAUG,OAAO,aACjBH,UAAUG,OAAO,gBAad,SAASb,aACRE,cACAA,aAAc,EACdO,oBACAK,QAAAA,QAAOC,QAAQV,KAAM,gBAItB,SAASJ,aACPC,cACDA,aAAc,EApBtB,SAASc,iBACL,IAAMN,UAAYC,SAASC,KAAKF,UAEhCA,UAAUO,IAAI,aAEVC,eAAAA,QAAcC,IACdT,UAAUO,IAAI,gBAedD,GACAF,QAAAA,QAAOC,QAAQV,KAAM,cAK7B,SAASe,cAAcC,GACnB,IAAMC,OAASD,EAAEE,QACXC,OAASH,EAAEI,QAGjB,QAAsB,IAAXH,aAA4C,IAAXE,OAA5C,CAIA,IAAM9B,IAAMS,oBACPT,IASDgC,KAAKC,IAAIL,OAAS5B,IAAIkC,GAAK,IAAMF,KAAKC,IAAIH,OAAS9B,IAAImC,GAAK,KAIhEnC,IAAIkC,EAAIN,OACR5B,IAAImC,EAAIL,OAERlB,oBAAqB,IAAIC,MAAOC,UAhEpC,SAASsB,YACLC,cAAAA,QAAaC,kBAgEbF,GAEA9B,cAlBIG,oBAAsB,CAClByB,EAAGN,OACHO,EAAGL,SAmBf,SAASS,eAAeZ,GAGpB,GAAoB,WAFAA,EAAEa,cAAgBhB,eAAAA,QAAciB,OAAS,QAAU,YAG9DjC,YAAa,CACd,IAAMkC,OAASC,cAAAA,QAAaC,gBAAgBjB,EAAEkB,QAC1CH,QACAC,cAAAA,QAAaG,MAAMJ,SAsBnC,SAASK,mBACAvC,aAxGT,SAASwC,gBACL,OAAO,IAAInC,MAAOC,UAAYF,mBAuGVoC,IAAmB,KACnCzC,aAsBR,SAAS0C,aAXT,SAASC,oBACYxC,gBAGbyC,cAHazC,eAIbA,cAAgB,MAGpBK,oBAIAmC,GAGAE,KAAAA,QAAIC,oBAAoBpC,SAAWqC,OAAOC,aAAe,cAAgB,YAAc7B,cAAe,CAClG8B,SAAS,IAGRhC,eAAAA,QAAciB,UAzBvB,SAASgB,qBACA/C,gBACDA,cAAgBgD,YAAYX,gBAAiB,MAwB7CU,GAEAL,KAAAA,QAAIO,iBAAiB1C,SAAWqC,OAAOC,aAAe,cAAgB,YAAc7B,cAAe,CAC/F8B,SAAS,KAKjBJ,KAAAA,QAAIC,oBAAoBpC,SAAWqC,OAAOC,aAAe,eAAiB,aAAehB,eAAgB,CACrGqB,SAAS,EACTJ,SAAS,IA3DjB,SAASK,uBACL,QAAKrC,eAAAA,QAAcC,MAIfqC,SAAAA,QAAQC,SAIRD,SAAAA,QAAQrC,IAqDRoC,IACAT,KAAAA,QAAIO,iBAAiB1C,SAAWqC,OAAOC,aAAe,eAAiB,aAAehB,eAAgB,CAClGqB,SAAS,EACTJ,SAAS,IAKrBP,YAEA7B,QAAAA,QAAO4C,GAAGxC,eAAAA,QAAe,aAAcyB,WAgBzC,IAAIgB,SAZS,CACX1D,WAAAA,WACAD,WAAAA,YAcFd,SAASU,QAAU+D","file":"mouseManager.js","sourcesContent":["import inputManager from 'inputManager';\nimport focusManager from 'focusManager';\nimport browser from 'browser';\nimport layoutManager from 'layoutManager';\nimport events from 'events';\nimport dom from 'dom';\n/* eslint-disable indent */\n\n    const self = {};\n\n    let lastMouseInputTime = new Date().getTime();\n    let isMouseIdle;\n\n    function mouseIdleTime() {\n        return new Date().getTime() - lastMouseInputTime;\n    }\n\n    function notifyApp() {\n        inputManager.notifyMouseMove();\n    }\n\n    function removeIdleClasses() {\n        const classList = document.body.classList;\n\n        classList.remove('mouseIdle');\n        classList.remove('mouseIdle-tv');\n    }\n\n    function addIdleClasses() {\n        const classList = document.body.classList;\n\n        classList.add('mouseIdle');\n\n        if (layoutManager.tv) {\n            classList.add('mouseIdle-tv');\n        }\n    }\n\n    export function showCursor() {\n        if (isMouseIdle) {\n            isMouseIdle = false;\n            removeIdleClasses();\n            events.trigger(self, 'mouseactive');\n        }\n    }\n\n    export function hideCursor() {\n        if (!isMouseIdle) {\n            isMouseIdle = true;\n            addIdleClasses();\n            events.trigger(self, 'mouseidle');\n        }\n    }\n\n    let lastPointerMoveData;\n    function onPointerMove(e) {\n        const eventX = e.screenX;\n        const eventY = e.screenY;\n\n        // if coord don't exist how could it move\n        if (typeof eventX === 'undefined' && typeof eventY === 'undefined') {\n            return;\n        }\n\n        const obj = lastPointerMoveData;\n        if (!obj) {\n            lastPointerMoveData = {\n                x: eventX,\n                y: eventY\n            };\n            return;\n        }\n\n        // if coord are same, it didn't move\n        if (Math.abs(eventX - obj.x) < 10 && Math.abs(eventY - obj.y) < 10) {\n            return;\n        }\n\n        obj.x = eventX;\n        obj.y = eventY;\n\n        lastMouseInputTime = new Date().getTime();\n        notifyApp();\n\n        showCursor();\n    }\n\n    function onPointerEnter(e) {\n        const pointerType = e.pointerType || (layoutManager.mobile ? 'touch' : 'mouse');\n\n        if (pointerType === 'mouse') {\n            if (!isMouseIdle) {\n                const parent = focusManager.focusableParent(e.target);\n                if (parent) {\n                    focusManager.focus(parent);\n                }\n            }\n        }\n    }\n\n    function enableFocusWithMouse() {\n        if (!layoutManager.tv) {\n            return false;\n        }\n\n        if (browser.web0s) {\n            return false;\n        }\n\n        if (browser.tv) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function onMouseInterval() {\n        if (!isMouseIdle && mouseIdleTime() >= 5000) {\n            hideCursor();\n        }\n    }\n\n    let mouseInterval;\n    function startMouseInterval() {\n        if (!mouseInterval) {\n            mouseInterval = setInterval(onMouseInterval, 5000);\n        }\n    }\n\n    function stopMouseInterval() {\n        const interval = mouseInterval;\n\n        if (interval) {\n            clearInterval(interval);\n            mouseInterval = null;\n        }\n\n        removeIdleClasses();\n    }\n\n    function initMouse() {\n        stopMouseInterval();\n\n        /* eslint-disable-next-line compat/compat */\n        dom.removeEventListener(document, (window.PointerEvent ? 'pointermove' : 'mousemove'), onPointerMove, {\n            passive: true\n        });\n\n        if (!layoutManager.mobile) {\n            startMouseInterval();\n\n            dom.addEventListener(document, (window.PointerEvent ? 'pointermove' : 'mousemove'), onPointerMove, {\n                passive: true\n            });\n        }\n\n        /* eslint-disable-next-line compat/compat */\n        dom.removeEventListener(document, (window.PointerEvent ? 'pointerenter' : 'mouseenter'), onPointerEnter, {\n            capture: true,\n            passive: true\n        });\n\n        if (enableFocusWithMouse()) {\n            dom.addEventListener(document, (window.PointerEvent ? 'pointerenter' : 'mouseenter'), onPointerEnter, {\n                capture: true,\n                passive: true\n            });\n        }\n    }\n\n    initMouse();\n\n    events.on(layoutManager, 'modechange', initMouse);\n\n/* eslint-enable indent */\n\nexport default {\n    hideCursor,\n    showCursor\n};\n\n"]}