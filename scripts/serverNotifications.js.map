{"version":3,"sources":["scripts/serverNotifications.js"],"names":["define","_require","_exports","_connectionManager","_playbackManager","_syncPlayManager","_events","_inputManager","_focusManager","_appRouter","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","value","serverNotifications","notifyApp","inputManager","notify","processGeneralCommand","cmd","apiClient","console","debug","Name","handleCommand","playTrailers","itemId","getItem","getCurrentUserId","then","item","playbackManager","Arguments","ItemId","setRepeatMode","RepeatMode","setQueueShuffleMode","ShuffleMode","setVolume","Volume","setAudioStreamIndex","parseInt","Index","setSubtitleStreamIndex","displayContent","isPlayingLocally","appRouter","showItem","serverId","displayMessage","args","TimeoutMs","Promise","_resolve","_reject","imported","_ref","toast","title","Header","text","Text","_ref2","alert","focusManager","sendText","String","onMessageReceived","e","msg","MessageType","this","serverInfo","Id","Data","PlayCommand","queueNext","ids","ItemIds","queue","play","startPositionTicks","StartPositionTicks","mediaSourceId","MediaSourceId","audioStreamIndex","AudioStreamIndex","subtitleStreamIndex","SubtitleStreamIndex","startIndex","StartIndex","Command","seek","SeekPositionTicks","UserId","i","length","UserDataList","events","trigger","syncPlayManager","processCommand","processGroupUpdate","bindEvents","off","on","connectionManager","getApiClients","forEach","newApiClient","_default"],"mappings":"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","file":"serverNotifications.js","sourcesContent":["import connectionManager from 'connectionManager';\nimport playbackManager from 'playbackManager';\nimport syncPlayManager from 'syncPlayManager';\nimport events from 'events';\nimport inputManager from 'inputManager';\nimport focusManager from 'focusManager';\nimport appRouter from 'appRouter';\n\nconst serverNotifications = {};\n\nfunction notifyApp() {\n    inputManager.notify();\n}\n\nfunction displayMessage(cmd) {\n    const args = cmd.Arguments;\n    if (args.TimeoutMs) {\n        import('toast').then(({default: toast}) => {\n            toast({ title: args.Header, text: args.Text });\n        });\n    } else {\n        import('alert').then(({default: alert}) => {\n            alert({ title: args.Header, text: args.Text });\n        });\n    }\n}\n\nfunction displayContent(cmd, apiClient) {\n    if (!playbackManager.isPlayingLocally(['Video', 'Book'])) {\n        appRouter.showItem(cmd.Arguments.ItemId, apiClient.serverId());\n    }\n}\n\nfunction playTrailers(apiClient, itemId) {\n    apiClient.getItem(apiClient.getCurrentUserId(), itemId).then(function (item) {\n        playbackManager.playTrailers(item);\n    });\n}\n\nfunction processGeneralCommand(cmd, apiClient) {\n    console.debug('Received command: ' + cmd.Name);\n    switch (cmd.Name) {\n        case 'Select':\n            inputManager.handleCommand('select');\n            return;\n        case 'Back':\n            inputManager.handleCommand('back');\n            return;\n        case 'MoveUp':\n            inputManager.handleCommand('up');\n            return;\n        case 'MoveDown':\n            inputManager.handleCommand('down');\n            return;\n        case 'MoveLeft':\n            inputManager.handleCommand('left');\n            return;\n        case 'MoveRight':\n            inputManager.handleCommand('right');\n            return;\n        case 'PageUp':\n            inputManager.handleCommand('pageup');\n            return;\n        case 'PageDown':\n            inputManager.handleCommand('pagedown');\n            return;\n        case 'PlayTrailers':\n            playTrailers(apiClient, cmd.Arguments.ItemId);\n            break;\n        case 'SetRepeatMode':\n            playbackManager.setRepeatMode(cmd.Arguments.RepeatMode);\n            break;\n        case 'SetShuffleQueue':\n            playbackManager.setQueueShuffleMode(cmd.Arguments.ShuffleMode);\n            break;\n        case 'VolumeUp':\n            inputManager.handleCommand('volumeup');\n            return;\n        case 'VolumeDown':\n            inputManager.handleCommand('volumedown');\n            return;\n        case 'ChannelUp':\n            inputManager.handleCommand('channelup');\n            return;\n        case 'ChannelDown':\n            inputManager.handleCommand('channeldown');\n            return;\n        case 'Mute':\n            inputManager.handleCommand('mute');\n            return;\n        case 'Unmute':\n            inputManager.handleCommand('unmute');\n            return;\n        case 'ToggleMute':\n            inputManager.handleCommand('togglemute');\n            return;\n        case 'SetVolume':\n            notifyApp();\n            playbackManager.setVolume(cmd.Arguments.Volume);\n            break;\n        case 'SetAudioStreamIndex':\n            notifyApp();\n            playbackManager.setAudioStreamIndex(parseInt(cmd.Arguments.Index));\n            break;\n        case 'SetSubtitleStreamIndex':\n            notifyApp();\n            playbackManager.setSubtitleStreamIndex(parseInt(cmd.Arguments.Index));\n            break;\n        case 'ToggleFullscreen':\n            inputManager.handleCommand('togglefullscreen');\n            return;\n        case 'GoHome':\n            inputManager.handleCommand('home');\n            return;\n        case 'GoToSettings':\n            inputManager.handleCommand('settings');\n            return;\n        case 'DisplayContent':\n            displayContent(cmd, apiClient);\n            break;\n        case 'GoToSearch':\n            inputManager.handleCommand('search');\n            return;\n        case 'DisplayMessage':\n            displayMessage(cmd);\n            break;\n        case 'ToggleOsd':\n            // todo\n            break;\n        case 'ToggleContextMenu':\n            // todo\n            break;\n        case 'TakeScreenShot':\n            // todo\n            break;\n        case 'SendKey':\n            // todo\n            break;\n        case 'SendString':\n            // todo\n            focusManager.sendText(cmd.Arguments.String);\n            break;\n        default:\n            console.debug('processGeneralCommand does not recognize: ' + cmd.Name);\n            break;\n    }\n\n    notifyApp();\n}\n\nfunction onMessageReceived(e, msg) {\n    const apiClient = this;\n    if (msg.MessageType === 'Play') {\n        notifyApp();\n        const serverId = apiClient.serverInfo().Id;\n        if (msg.Data.PlayCommand === 'PlayNext') {\n            playbackManager.queueNext({ ids: msg.Data.ItemIds, serverId: serverId });\n        } else if (msg.Data.PlayCommand === 'PlayLast') {\n            playbackManager.queue({ ids: msg.Data.ItemIds, serverId: serverId });\n        } else {\n            playbackManager.play({\n                ids: msg.Data.ItemIds,\n                startPositionTicks: msg.Data.StartPositionTicks,\n                mediaSourceId: msg.Data.MediaSourceId,\n                audioStreamIndex: msg.Data.AudioStreamIndex,\n                subtitleStreamIndex: msg.Data.SubtitleStreamIndex,\n                startIndex: msg.Data.StartIndex,\n                serverId: serverId\n            });\n        }\n    } else if (msg.MessageType === 'Playstate') {\n        if (msg.Data.Command === 'Stop') {\n            inputManager.handleCommand('stop');\n        } else if (msg.Data.Command === 'Pause') {\n            inputManager.handleCommand('pause');\n        } else if (msg.Data.Command === 'Unpause') {\n            inputManager.handleCommand('play');\n        } else if (msg.Data.Command === 'PlayPause') {\n            inputManager.handleCommand('playpause');\n        } else if (msg.Data.Command === 'Seek') {\n            playbackManager.seek(msg.Data.SeekPositionTicks);\n        } else if (msg.Data.Command === 'NextTrack') {\n            inputManager.handleCommand('next');\n        } else if (msg.Data.Command === 'PreviousTrack') {\n            inputManager.handleCommand('previous');\n        } else {\n            notifyApp();\n        }\n    } else if (msg.MessageType === 'GeneralCommand') {\n        const cmd = msg.Data;\n        processGeneralCommand(cmd, apiClient);\n    } else if (msg.MessageType === 'UserDataChanged') {\n        if (msg.Data.UserId === apiClient.getCurrentUserId()) {\n            for (let i = 0, length = msg.Data.UserDataList.length; i < length; i++) {\n                events.trigger(serverNotifications, 'UserDataChanged', [apiClient, msg.Data.UserDataList[i]]);\n            }\n        }\n    } else if (msg.MessageType === 'SyncPlayCommand') {\n        syncPlayManager.processCommand(msg.Data, apiClient);\n    } else if (msg.MessageType === 'SyncPlayGroupUpdate') {\n        syncPlayManager.processGroupUpdate(msg.Data, apiClient);\n    } else {\n        events.trigger(serverNotifications, msg.MessageType, [apiClient, msg.Data]);\n    }\n}\nfunction bindEvents(apiClient) {\n    events.off(apiClient, 'message', onMessageReceived);\n    events.on(apiClient, 'message', onMessageReceived);\n}\n\nconnectionManager.getApiClients().forEach(bindEvents);\nevents.on(connectionManager, 'apiclientcreated', function (e, newApiClient) {\n    bindEvents(newApiClient);\n});\n\nexport default serverNotifications;\n"]}