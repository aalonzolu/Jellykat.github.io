{"version":3,"sources":["scripts/alphanumericshortcuts.js"],"names":["define","_exports","_dom","_focusManager","_interopRequireDefault","obj","__esModule","default","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","inputDisplayElement","value","currentDisplayTextContainer","alpanumericShortcutTimeout","currentDisplayText","onKeyDown","e","ctrlKey","shiftKey","altKey","chr","alphanumeric","match","toString","toUpperCase","this","options","itemsContainer","onAlphanumericKeyPress","ensureInputDisplayElement","document","createElement","classList","add","body","appendChild","innerHTML","remove","resetAlphaNumericShortcutTimeout","clearAlphaNumericShortcutTimeout","setTimeout","onAlphanumericShortcutTimeout","clearTimeout","container","selectByShortcutValue","focusElem","querySelector","focusManager","focus","_default","AlphaNumericShortcuts","_classCallCheck","instance","Constructor","TypeError","keyDownHandler","bind","dom","addEventListener","window","passive","_createClass","protoProps","staticProps","prototype","destroy","removeEventListener"],"mappings":"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","file":"alphanumericshortcuts.js","sourcesContent":["import dom from 'dom';\nimport focusManager from 'focusManager';\n\nlet inputDisplayElement;\nlet currentDisplayText = '';\nlet currentDisplayTextContainer;\n\nfunction onKeyDown(e) {\n    if (e.ctrlKey) {\n        return;\n    }\n    if (e.shiftKey) {\n        return;\n    }\n    if (e.altKey) {\n        return;\n    }\n\n    const key = e.key;\n    let chr = key ? alphanumeric(key) : null;\n\n    if (chr) {\n        chr = chr.toString().toUpperCase();\n\n        if (chr.length === 1) {\n            currentDisplayTextContainer = this.options.itemsContainer;\n            onAlphanumericKeyPress(e, chr);\n        }\n    }\n}\n\nfunction alphanumeric(value) {\n    const letterNumber = /^[0-9a-zA-Z]+$/;\n    return value.match(letterNumber);\n}\n\nfunction ensureInputDisplayElement() {\n    if (!inputDisplayElement) {\n        inputDisplayElement = document.createElement('div');\n        inputDisplayElement.classList.add('alphanumeric-shortcut');\n        inputDisplayElement.classList.add('hide');\n\n        document.body.appendChild(inputDisplayElement);\n    }\n}\n\nlet alpanumericShortcutTimeout;\nfunction clearAlphaNumericShortcutTimeout() {\n    if (alpanumericShortcutTimeout) {\n        clearTimeout(alpanumericShortcutTimeout);\n        alpanumericShortcutTimeout = null;\n    }\n}\nfunction resetAlphaNumericShortcutTimeout() {\n    clearAlphaNumericShortcutTimeout();\n    alpanumericShortcutTimeout = setTimeout(onAlphanumericShortcutTimeout, 2000);\n}\n\nfunction onAlphanumericKeyPress(e, chr) {\n    if (currentDisplayText.length >= 3) {\n        return;\n    }\n    ensureInputDisplayElement();\n    currentDisplayText += chr;\n    inputDisplayElement.innerHTML = currentDisplayText;\n    inputDisplayElement.classList.remove('hide');\n    resetAlphaNumericShortcutTimeout();\n}\n\nfunction onAlphanumericShortcutTimeout() {\n    const value = currentDisplayText;\n    const container = currentDisplayTextContainer;\n\n    currentDisplayText = '';\n    currentDisplayTextContainer = null;\n    inputDisplayElement.innerHTML = '';\n    inputDisplayElement.classList.add('hide');\n    clearAlphaNumericShortcutTimeout();\n    selectByShortcutValue(container, value);\n}\n\nfunction selectByShortcutValue(container, value) {\n    value = value.toUpperCase();\n\n    let focusElem;\n    if (value === '#') {\n        focusElem = container.querySelector('*[data-prefix]');\n    }\n\n    if (!focusElem) {\n        focusElem = container.querySelector('*[data-prefix^=\\'' + value + '\\']');\n    }\n\n    if (focusElem) {\n        focusManager.focus(focusElem);\n    }\n}\n\nclass AlphaNumericShortcuts {\n    constructor(options) {\n        this.options = options;\n\n        const keyDownHandler = onKeyDown.bind(this);\n\n        dom.addEventListener(window, 'keydown', keyDownHandler, {\n            passive: true\n        });\n\n        this.keyDownHandler = keyDownHandler;\n    }\n    destroy() {\n        const keyDownHandler = this.keyDownHandler;\n\n        if (keyDownHandler) {\n            dom.removeEventListener(window, 'keydown', keyDownHandler, {\n                passive: true\n            });\n            this.keyDownHandler = null;\n        }\n        this.options = null;\n    }\n}\n\nexport default AlphaNumericShortcuts;\n"]}