define(["require","exports","inputManager","layoutManager"],(function(_require,_exports,_inputManager,_layoutManager){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var cache=new WeakMap;return _getRequireWildcardCache=function _getRequireWildcardCache(){return cache},cache}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getKeyName=getKeyName,_exports.isNavigationKey=isNavigationKey,_exports.enable=enable,_exports.default=void 0,_inputManager=_interopRequireDefault(_inputManager),_layoutManager=_interopRequireDefault(_layoutManager);var KeyNames={13:"Enter",19:"Pause",27:"Escape",32:"Space",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",412:"MediaRewind",413:"MediaStop",415:"MediaPlay",417:"MediaFastForward",461:"Back",10009:"Back",10232:"MediaTrackPrevious",10233:"MediaTrackNext",10252:"MediaPlayPause"},NavigationKeys=["ArrowLeft","ArrowRight","ArrowUp","ArrowDown"],hasFieldKey=!1;try{hasFieldKey="key"in new KeyboardEvent("keydown")}catch(e){console.error("error checking 'key' field")}if(!hasFieldKey)for(var i=65;i<=90;i++)KeyNames[i]=String.fromCharCode(i).toLowerCase();function getKeyName(event){return KeyNames[event.keyCode]||event.key}function isNavigationKey(key){return-1!=NavigationKeys.indexOf(key)}function enable(){window.addEventListener("keydown",(function(e){var key=getKeyName(e);if(_layoutManager.default.tv||!isNavigationKey(key)){var capture=!0;switch(key){case"ArrowLeft":_inputManager.default.handleCommand("left");break;case"ArrowUp":_inputManager.default.handleCommand("up");break;case"ArrowRight":_inputManager.default.handleCommand("right");break;case"ArrowDown":_inputManager.default.handleCommand("down");break;case"Back":_inputManager.default.handleCommand("back");break;case"Escape":_layoutManager.default.tv?_inputManager.default.handleCommand("back"):capture=!1;break;case"MediaPlay":_inputManager.default.handleCommand("play");break;case"Pause":_inputManager.default.handleCommand("pause");break;case"MediaPlayPause":_inputManager.default.handleCommand("playpause");break;case"MediaRewind":_inputManager.default.handleCommand("rewind");break;case"MediaFastForward":_inputManager.default.handleCommand("fastforward");break;case"MediaStop":_inputManager.default.handleCommand("stop");break;case"MediaTrackPrevious":_inputManager.default.handleCommand("previoustrack");break;case"MediaTrackNext":_inputManager.default.handleCommand("nexttrack");break;default:capture=!1}capture&&(console.debug("disabling default event handling"),e.preventDefault())}}))}navigator.getGamepads&&window.addEventListener("gamepadconnected",(function attachGamepadScript(e){console.log("Gamepad connected! Attaching gamepadtokey.js script"),window.removeEventListener("gamepadconnected",attachGamepadScript),new Promise((function(_resolve,_reject){return _require(["scripts/gamepadtokey"],(function(imported){return _resolve(function _interopRequireWildcard(obj){if(obj&&obj.__esModule)return obj;if(null===obj||"object"!==_typeof(obj)&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache();if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}(imported))}),_reject)}))}));var _default={enable:enable,getKeyName:getKeyName,isNavigationKey:isNavigationKey};_exports.default=_default}));
//# sourceMappingURL=keyboardNavigation.js.map
